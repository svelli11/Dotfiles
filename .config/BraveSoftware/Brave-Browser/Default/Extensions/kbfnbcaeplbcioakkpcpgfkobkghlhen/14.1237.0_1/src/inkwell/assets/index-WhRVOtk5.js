import{p as v,m as k,j as h,h as T,i as w,R as j,v as O,z as U,y as F,r as R,k as V}from"./index-uVYElzgq.js";import{A as x}from"./index-KzMHVXrV.js";import{a as M}from"./RemoteSubscribable-CanKOUL4-C6cenfHh.js";import"./RemoteEntity-CN-1WB86-yD3y8ldD.js";var P=(r,t)=>(t=Symbol[r])?t:Symbol.for("Symbol."+r),_=r=>{throw TypeError(r)},m=(r,t,o)=>{if(t!=null){typeof t!="object"&&typeof t!="function"&&_("Object expected");var i;i===void 0&&(i=t[P("dispose")]),typeof i!="function"&&_("Object not disposable"),r.push([o,i,t])}return t},y=(r,t,o)=>{var i=typeof SuppressedError=="function"?SuppressedError:function(s,u,n,c){return c=Error(n),c.name="SuppressedError",c.error=s,c.suppressed=u,c},p=s=>t=o?new i(s,t,"An error was suppressed during disposal"):(o=!0,s),l=s=>{for(;s=r.pop();)try{var u=s[1]&&s[1].call(s[2]);if(s[0])return Promise.resolve(u).then(l,n=>(p(n),l()))}catch(n){p(n)}if(o)throw t};return l()};const J=r=>v(r.getPlugins(["capi-suggestion","connector","document-session","inline-card","inline-decorations","sdui"]),k(([t,o,i,p,l,s])=>{var u=[];try{const f=r.getExecutionScopeDefinition("document-session"),S=r.getExecutionScopeDefinition("inline-card-interaction"),d=m(u,new DisposableStack);return d.use(f.onStart(async e=>v(h([e.resolve(l.provides.TextDecorationController),e.resolve(p.provides.TextDecorationInteractionObserver),e.resolve(t.provides.CAPISuggestionStore),e.resolve(o.provides.ConnectorSDUI),e.resolve(i.provides.TextDocument)]),k(a=>z(...a))))),d.use(S.onStart(async e=>v(h([e.resolve(p.provides.InlineCardInteractionContext),e.resolve(s.provides.SDUIManager)]),T(([{metadata:a},I])=>{var D=[];try{const{suggestionId:g}=a;if(!g)return w();const b=m(D,new DisposableStack);return b.use(I.setFocusedSuggestion(g)),v(e.realm.registerEntity({token:x,useFactory:A=>M(I.getInlineCardItem(g),A)}),j.use(b)),w(b.move())}catch(g){var E=g,C=!0}finally{y(D,E,C)}})))),d.move()}catch(f){var n=f,c=!0}finally{y(u,n,c)}}));function z(r,t,o,i,p){var l=[];try{const n=m(l,new DisposableStack),c=i.getInlineCardState(p.id),f=()=>c.getValue().enabled,S=e=>e.metadata.rawAlert.inline==="inline"&&e.metadata.rawAlert.hidden!==!0,d=(e=null)=>{if(!e||!f())return!1;const a=o.get(e);return a?S(a):!1};return n.use(t.observe({predicate:(e,a)=>d(H(a))})),n.use(r.onTextDecorationInteraction(O,e=>d(e.suggestionId))),n.use(r.addVisibilitySource(v(U(o.changes),F(e=>e.kind==="suggestionsUpserted"),R(e=>({partial:!0,changes:e.suggestions.filter(S).map(a=>({id:{kind:"suggestion",suggestionId:a.id},visibility:"visible"}))})),V))),n.move()}catch(n){var s=n,u=!0}finally{y(l,s,u)}}function H(r){if(typeof r!="object"||r===null)return null;const t=r.suggestionId;return typeof t!="string"?null:t}export{J as activate};
//# sourceMappingURL=index-WhRVOtk5.js.map
