{"version":3,"file":"twir/script.js","mappings":"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","sources":["webpack://ffz-addons/./src/twir/api.js","webpack://ffz-addons/./src/twir/settings.js","webpack://ffz-addons/./src/twir/commands.js","webpack://ffz-addons/./src/twir/badges.js","webpack://ffz-addons/./src/twir/index.js"],"sourcesContent":["export class Api extends FrankerFaceZ.utilities.module.Module {\n\tconstructor(...args) {\n\t\tsuper(...args);\n\n\t\tthis.inject(Commands);\n\t\tthis.inject(Badges);\n\n\t\tthis.apiBase = 'https://twir.app/api/v1/public';\n\t}\n\n\tasync request(path) {\n\t\ttry {\n\t\t\tconst response = await fetch(`${this.apiBase}/${path}`);\n\t\t\tif (response.ok) {\n\t\t\t\treturn await response.json();\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tthis.log.error(err);\n\t\t}\n\n\t\treturn [];\n\t}\n}\n\nexport class Commands extends FrankerFaceZ.utilities.module.Module {\n\t// https://twir.app/api/v1/public/channels/{userId}/commands\n\tgetChannelCommands(userId) {\n\t\treturn this.parent.request(`channels/${userId}/commands`);\n\t}\n}\n\nexport class Badges extends FrankerFaceZ.utilities.module.Module {\n\t// https://twir.app/api/v1/public/badges\n\tgetBadges() {\n\t\treturn this.parent.request('badges');\n\t}\n}\n","export const SETTING_KEYS = {\n\tcommandDescription: 'addon.twir.command_description',\n\tuserBadges: 'addon.twir.user_badges',\n};\n\n// https://twitch.tv/twirapp\nexport const TWIR_APP_ID = 870280719;\n\nexport class Settings extends FrankerFaceZ.utilities.module.Module {\n\tconstructor(...args) {\n\t\tsuper(...args);\n\n\t\tthis.inject('settings');\n\n\t\tthis.settings.add(SETTING_KEYS.commandDescription, {\n\t\t\tdefault: true,\n\t\t\tui: {\n\t\t\t\tpath: 'Add-Ons > Twir >> Commands',\n\t\t\t\ttitle: 'Description',\n\t\t\t\tdescription: 'Show command description or responses.',\n\t\t\t\tcomponent: 'setting-check-box',\n\t\t\t}\n\t\t});\n\n\t\tthis.settings.add(SETTING_KEYS.userBadges, {\n\t\t\tdefault: true,\n\t\t\tui: {\n\t\t\t\tpath: 'Add-Ons > Twir >> User Cosmetics',\n\t\t\t\ttitle: 'Badges',\n\t\t\t\tdescription: 'Show user badges.\\n\\n(Per-badge visibilty can be set in [Chat >> Badges > Visibilty > Add-Ons](~chat.badges.tabs.visibility))',\n\t\t\t\tcomponent: 'setting-check-box',\n\t\t\t}\n\t\t});\n\n\t\tthis.settings.getChanges(SETTING_KEYS.userBadges, enabled => {\n\t\t\tthis.parent.twir_badges.toggleBadges(enabled);\n\t\t});\n\t}\n}\n","import { SETTING_KEYS } from './settings.js';\n\nexport class Commands extends FrankerFaceZ.utilities.module.Module {\n\tconstructor(...args) {\n\t\tsuper(...args);\n\n\t\tthis.inject('chat');\n\t\tthis.inject('settings');\n\n\t\tthis.roomCommands = new Map();\n\t}\n\n\tonEnable() {\n\t\tthis.on('chat:room-add', this.registerRoomCommands, this);\n\t\tthis.on('chat:room-remove', this.unregisterRoomCommands, this);\n\n\t\tfor (const room of this.chat.iterateRooms()) {\n\t\t\tif (room) {\n\t\t\t\tthis.registerRoomCommands(room);\n\t\t\t}\n\t\t}\n\n\t\tthis.on('chat:get-tab-commands', this.getTabCommands, this);\n\t}\n\n\tonDisable() {\n\t\tthis.off('chat:room-add', this.registerRoomCommands, this);\n\t\tthis.off('chat:room-remove', this.unregisterRoomCommands, this);\n\n\t\tfor (const roomId of this.roomCommands.keys()) {\n\t\t\tthis.unregisterRoomCommands({ id: roomId });\n\t\t}\n\n\t\tthis.off('chat:get-tab-commands', this.getTabCommands, this);\n\t}\n\n\tgetTabCommands(event) {\n\t\tfor (const room of this.chat.iterateRooms()) {\n\t\t\tif (room) {\n\t\t\t\tconst commands = this.getRoomCommands(room);\n\t\t\t\tif (commands) {\n\t\t\t\t\tevent.commands.push(...commands);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tasync registerRoomCommands(room) {\n\t\tconst commands = await this.parent.twir_api.commands.getChannelCommands(room.id);\n\t\tthis.roomCommands.set(room.id, commands);\n\t}\n\n\tunregisterRoomCommands(room) {\n\t\tthis.roomCommands.delete(room.id);\n\t}\n\n\tgetRoomCommands(room) {\n\t\tconst commands = this.roomCommands.get(room.id);\n\t\tif (!commands) return;\n\n\t\tconst showCommandDescription = this.settings.get(SETTING_KEYS.commandDescription);\n\n\t\treturn commands.map(command => {\n\t\t\tconst description = command.description || command.responses?.map(response => response.text).join(' | ');\n\n\t\t\treturn {\n\t\t\t\tprefix: '!',\n\t\t\t\tname: command.name,\n\t\t\t\tdescription: showCommandDescription ? description : '',\n\t\t\t\tpermissionLevel: 0,\n\t\t\t\tffz_group: `Twir (${command.group ?? command.module})`,\n\t\t\t}\n\t\t})\n\t}\n}\n","import { TWIR_APP_ID } from './settings.js';\n\nexport class Badges extends FrankerFaceZ.utilities.module.Module {\n\tconstructor(...args) {\n\t\tsuper(...args);\n\n\t\tthis.inject('chat');\n\t\tthis.inject('chat.badges');\n\t\tthis.inject('settings');\n\n\t\tthis.badgeIds = new Set();\n\n\t\t// twitchbot badge for TwirApp\n\t\tthis.chat.getUser(TWIR_APP_ID).addBadge('ffz', 2);\n\t}\n\n\tonDisable() {\n\t\tthis.unloadBadges();\n\t}\n\n\ttoggleBadges(enabled) {\n\t\tif (enabled) {\n\t\t\tthis.loadBadges();\n\t\t} else {\n\t\t\tthis.unloadBadges();\n\t\t}\n\t}\n\n\tunloadBadges() {\n\t\tfor (const badgeId of this.badgeIds.values()) {\n\t\t\tthis.badges.removeBadge(badgeId);\n\t\t}\n\n\t\tthis.emit('chat:update-lines');\n\t}\n\n\tasync loadBadges() {\n\t\tconst badges = await this.parent.twir_api.badges.getBadges();\n\t\tfor (const badge of badges) {\n\t\t\tif (!badge.users.length) return;\n\t\t\tconst badgeId = this.registerBadge(badge);\n\t\t\tthis.badges.setBulk('addon.twir', badgeId, badge.users);\n\t\t}\n\n\t\tthis.emit('chat:update-lines');\n\t}\n\n\tregisterBadge(badge) {\n\t\tconst badgeId = `addon.twir.badge_${badge.id}`;\n\t\tthis.badgeIds.add(badgeId);\n\n\t\tthis.badges.loadBadgeData(badgeId, {\n\t\t\tid: badgeId,\n\t\t\tname: badge.name,\n\t\t\ttitle: badge.name,\n\t\t\tclick_url: 'https://twir.app',\n\t\t\timage: badge.url,\n\t\t\turls: {\n\t\t\t\t1: badge.url,\n\t\t\t\t2: badge.url,\n\t\t\t\t3: badge.url,\n\t\t\t},\n\t\t\tslot: badge.ffzSlot,\n\t\t});\n\n\t\treturn badgeId;\n\t}\n}\n","import { Api } from './api.js';\nimport { Commands } from './commands.js';\nimport { Badges } from './badges.js';\nimport { Settings } from './settings.js';\n\nclass Twir extends Addon {\n\tconstructor(...args) {\n\t\tsuper(...args);\n\n\t\tthis.injectAs('twir_api', Api);\n\t\tthis.injectAs('twir_commands', Commands);\n\t\tthis.injectAs('twir_badges', Badges);\n\t\tthis.injectAs('twir_settings', Settings);\n\t}\n}\n\nTwir.register();\n"],"names":["args","Commands","Badges","path","response","err","Api","userId","SETTING_KEYS","TWIR_APP_ID","enabled","Settings","room","roomId","event","commands","showCommandDescription","command","description","badgeId","badges","badge","Twir"],"sourceRoot":""}