{"version":3,"file":"esbridge.js","mappings":"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","sources":["webpack://frankerfacez/<define:__version_prerelease__>","webpack://frankerfacez/webpack/bootstrap","webpack://frankerfacez/webpack/runtime/getFullHash","webpack://frankerfacez/./src/utilities/logging.ts","webpack://frankerfacez/./src/esbridge.js"],"sourcesContent":[null,"// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.h = () => (\"76313c69f0d0df3a2768\")","import type { ClientVersion } from \"./types\";\n\nconst RAVEN_LEVELS: Record<number, string> = {\n\t1: 'debug',\n\t2: 'info',\n\t4: 'warn',\n\t8: 'error'\n};\n\n\nexport enum LogLevel {\n\tVerbose = 0,\n\tDebug = 1,\n\tInfo = 2,\n\tWarning = 4,\n\tError = 8,\n\tOff = 99\n}\n\nfunction readLSLevel(): number | null {\n\tconst level = localStorage.ffzLogLevel;\n\tif ( ! level )\n\t\treturn null;\n\n\tconst upper = level.toUpperCase(),\n\t\tvalue = (Logger as any)[upper];\n\n\tif ( typeof value === 'number' )\n\t\treturn value;\n\n\tif ( /^\\d+$/.test(level) )\n\t\treturn parseInt(level, 10);\n\n\treturn null;\n}\n\n\ninterface Core {\n\n\thost: string;\n\tflavor: string;\n\n};\n\n\ntype InitItem = {\n\ttime: number;\n\tcategory: string | null;\n\tmessage: string;\n\tlevel: string | number;\n}\n\n\nexport class Logger {\n\tpublic static readonly Levels = LogLevel;\n\tpublic static readonly VERBOSE = LogLevel.Verbose;\n\tpublic static readonly DEBUG = LogLevel.Debug;\n\tpublic static readonly INFO = LogLevel.Info;\n\tpublic static readonly WARN = LogLevel.Warning;\n\tpublic static readonly WARNING = LogLevel.Warning;\n\tpublic static readonly ERROR = LogLevel.Error;\n\tpublic static readonly OFF = LogLevel.Off;\n\n\tpublic static readonly DEFAULT_LEVEL = LogLevel.Info;\n\n\tname: string | null;\n\tenabled: boolean;\n\tlevel: LogLevel;\n\n\tlabel?: string;\n\n\tinit?: boolean;\n\tcaptured_init?: InitItem[];\n\n\troot: Logger;\n\tparent: Logger | null;\n\tchildren: Record<string, Logger>;\n\n\traven: any;\n\n\tconstructor(parent: Logger | null, name: string | null, level?: LogLevel | null, raven?: any) {\n\t\tthis.root = parent ? parent.root : this;\n\t\tthis.parent = parent;\n\t\tthis.name = name;\n\n\t\tif ( this.root == this ) {\n\t\t\tthis.init = false;\n\t\t\tthis.captured_init = [];\n\t\t\tthis.label = 'FFZ';\n\t\t}\n\n\t\tthis.enabled = true;\n\t\tthis.level = level ?? (parent && parent.level) ?? readLSLevel() ?? Logger.DEFAULT_LEVEL;\n\t\tthis.raven = raven || (parent && parent.raven);\n\n\t\tthis.children = {};\n\t}\n\n\t/** @internal */\n\thi(core: Core, version?: ClientVersion) {\n\t\tconst VER = version ?? (core.constructor as any)?.version_info;\n\t\tthis.info(`FrankerFaceZ v${VER} (s:${core.host} f:${core.flavor} b:${VER?.build} c:${VER?.commit || 'null'})`);\n\n\t\ttry {\n\t\t\tconst loc = new URL(location.toString());\n\t\t\tloc.search = '';\n\t\t\tthis.info(`Initial URL: ${loc}`);\n\t\t} catch(err) {\n\t\t\tthis.warn(`Unable to read location.`, err);\n\t\t}\n\t}\n\n\tget(name: string, level?: LogLevel) {\n\t\tif ( ! this.children[name] )\n\t\t\tthis.children[name] = new Logger(this, (this.name ? `${this.name}.${name}` : name), level);\n\n\t\treturn this.children[name];\n\t}\n\n\tverbose(message: any, ...optionalParams: any[]) {\n\t\treturn this.invoke(LogLevel.Verbose, message, optionalParams);\n\t}\n\n\tverboseColor(message: any, colors: string[], ...optionalParams: any[]) {\n\t\treturn this.invokeColor(Logger.VERBOSE, message, colors, optionalParams);\n\t}\n\n\tdebug(message: any, ...optionalParams: any[]) {\n\t\treturn this.invoke(Logger.DEBUG, message, optionalParams);\n\t}\n\n\tdebugColor(message: any, colors: string[], ...optionalParams: any[]) {\n\t\treturn this.invokeColor(Logger.DEBUG, message, colors, optionalParams);\n\t}\n\n\tinfo(message: any, ...optionalParams: any[]) {\n\t\treturn this.invoke(Logger.INFO, message, optionalParams);\n\t}\n\n\tinfoColor(message: any, colors: string[], ...optionalParams: any[]) {\n\t\treturn this.invokeColor(Logger.INFO, message, colors, optionalParams);\n\t}\n\n\twarn(message: any, ...optionalParams: any[]) {\n\t\treturn this.invoke(Logger.WARN, message, optionalParams);\n\t}\n\n\twarnColor(message: any, colors: string[], ...optionalParams: any[]) {\n\t\treturn this.invokeColor(Logger.WARN, message, colors, optionalParams);\n\t}\n\n\twarning(message: any, ...optionalParams: any[]) {\n\t\treturn this.invoke(Logger.WARN, message, optionalParams);\n\t}\n\n\twarningColor(message: any, colors: string[], ...optionalParams: any[]) {\n\t\treturn this.invokeColor(Logger.WARN, message, colors, optionalParams);\n\t}\n\n\terror(message: any, ...optionalParams: any[]) {\n\t\treturn this.invoke(Logger.ERROR, message, optionalParams);\n\t}\n\n\terrorColor(message: any, colors: string[], ...optionalParams: any[]) {\n\t\treturn this.invokeColor(Logger.ERROR, message, colors, optionalParams);\n\t}\n\n\tcrumb(...args: any[]) {\n\t\tif ( this.raven )\n\t\t\treturn this.raven.captureBreadcrumb(...args);\n\t}\n\n\tcapture(exc: Error, opts?: any, ...args: any[]) {\n\t\tif ( this.raven ) {\n\t\t\topts = opts || {};\n\t\t\tif ( ! opts.logger )\n\t\t\t\topts.logger = this.name;\n\n\t\t\tthis.raven.captureException(exc, opts);\n\t\t}\n\n\t\tif ( args.length ) {\n\t\t\tconst msg = args.shift();\n\t\t\treturn this.error(msg, ...args);\n\t\t}\n\t}\n\n\tinvokeColor(level: number, message: any, colors: string | string[], ...optionalParams: any[]) {\n\t\tif ( ! this.enabled || level < this.level )\n\t\t\treturn;\n\n\t\tif ( ! Array.isArray(colors) )\n\t\t\tcolors = [colors];\n\n\t\t//const message = args ? Array.prototype.slice.call(args) : [];\n\n\t\tif ( level > LogLevel.Verbose ) {\n\t\t\tlet out = message;\n\t\t\tif ( typeof out === 'string' )\n\t\t\t\tout = out.replace(/%c/g, '');\n\n\t\t\tif ( optionalParams.length )\n\t\t\t\tout = `${out} ${optionalParams.join(' ')}`;\n\n\t\t\tif ( this.root.init && this.root.captured_init )\n\t\t\t\tthis.root.captured_init.push({\n\t\t\t\t\ttime: Date.now(),\n\t\t\t\t\tcategory: this.name,\n\t\t\t\t\tmessage: out,\n\t\t\t\t\tlevel: RAVEN_LEVELS[level] || level\n\t\t\t\t});\n\n\t\t\tthis.crumb({\n\t\t\t\tmessage: out,\n\t\t\t\tcategory: this.name,\n\t\t\t\tlevel: RAVEN_LEVELS[level] || level\n\t\t\t});\n\t\t}\n\n\t\tconst default_style = level < LogLevel.Info\n\t\t\t? 'color:#999999'\n\t\t\t: '';\n\n\t\tif ( this.name ) {\n\t\t\tif ( typeof message === 'string' )\n\t\t\t\tmessage = `%c${this.root.label} [%c${this.name}%c]:%c ${message}`;\n\t\t\telse {\n\t\t\t\toptionalParams.unshift(message);\n\t\t\t\tmessage = `%c${this.root.label} [%c${this.name}%c]:%c`;\n\t\t\t}\n\n\t\t\tcolors.unshift('color:#755000; font-weight:bold', default_style, 'color:#755000; font-weight:bold', default_style);\n\n\t\t} else {\n\t\t\tif ( typeof message === 'string' )\n\t\t\t\tmessage = `%c${this.root.label}:%c ${message}`;\n\t\t\telse {\n\t\t\t\toptionalParams.unshift(message);\n\t\t\t\tmessage = `%c${this.root.label}:%c`;\n\t\t\t}\n\n\t\t\tcolors.unshift('color:#755000; font-weight:bold', default_style);\n\t\t}\n\n\t\tif ( level < LogLevel.Info )\n\t\t\tconsole.debug(message, ...colors, ...optionalParams);\n\n\t\telse if ( level < LogLevel.Warning )\n\t\t\tconsole.info(message, ...colors, ...optionalParams);\n\n\t\telse if ( level < LogLevel.Error )\n\t\t\tconsole.warn(message, ...colors, ...optionalParams);\n\n\t\telse if ( level < LogLevel.Off )\n\t\t\tconsole.error(message, ...colors, ...optionalParams);\n\t}\n\n\t/* eslint no-console: \"off\" */\n\tinvoke(level: number, message: string, optionalParams?: any[]) {\n\t\tif ( ! this.enabled || level < this.level || level >= LogLevel.Off )\n\t\t\treturn;\n\n\t\tconst result = optionalParams ? [\n\t\t\tmessage,\n\t\t\t...optionalParams\n\t\t] : [message];\n\n\t\tif ( level > LogLevel.Verbose ) {\n\t\t\tconst out = result.join(' ');\n\n\t\t\tif ( this.root.init && this.root.captured_init )\n\t\t\t\tthis.root.captured_init.push({\n\t\t\t\t\ttime: Date.now(),\n\t\t\t\t\tcategory: this.name,\n\t\t\t\t\tmessage: out,\n\t\t\t\t\tlevel: RAVEN_LEVELS[level] || level\n\t\t\t\t});\n\n\t\t\tthis.crumb({\n\t\t\t\tmessage: out,\n\t\t\t\tcategory: this.name,\n\t\t\t\tlevel: RAVEN_LEVELS[level] || level\n\t\t\t});\n\t\t}\n\n\t\t// Chrome removed any sort of special styling from debug\n\t\t// logging, so let's add our own to make them visually distinct.\n\t\tconst default_style = level < LogLevel.Info\n\t\t\t? 'color:#999999'\n\t\t\t: '';\n\n\t\t// If we're adding our own style, we need to grab as many of\n\t\t// the strings as we can.\n\t\tlet strings = '';\n\t\tif ( default_style !== '' ) {\n\t\t\twhile(result.length > 0 && typeof result[0] === 'string') {\n\t\t\t\tstrings += ' ' + result.shift();\n\t\t\t}\n\t\t}\n\n\t\tif ( this.name ) {\n\t\t\tresult.unshift(`%c${this.root.label} [%c${this.name}%c]:%c${strings}`, 'color:#755000; font-weight:bold', default_style, 'color:#755000; font-weight:bold', default_style);\n\t\t} else\n\t\t\tresult.unshift(`%c${this.root.label}:%c${strings}`, 'color:#755000; font-weight:bold', default_style);\n\n\t\tif ( level < LogLevel.Info )\n\t\t\tconsole.debug(...result);\n\n\t\telse if ( level < LogLevel.Warning )\n\t\t\tconsole.info(...result);\n\n\t\telse if ( level < LogLevel.Error )\n\t\t\tconsole.warn(...result);\n\n\t\telse if ( level < LogLevel.Off )\n\t\t\tconsole.error(...result);\n\t}\n}\n\nexport default Logger;\n","'use strict';\n\nimport Logger from 'utilities/logging';\n\n\nclass FFZESBridge {\n\n\tconstructor() {\n\n\t\tFFZESBridge.instance = this;\n\n\t\tthis.host = 'null';\n\t\tthis.flavor = 'esbridge';\n\n\t\t// ========================================================================\n\t\t// Logging\n\t\t// ========================================================================\n\n\t\tthis.log = new Logger(null, null, null);\n\t\tthis.log.label = 'FFZESBridge';\n\n\t\tthis.core_log = this.log.get('core');\n\t\tthis.log.hi(this);\n\n\t\t// ========================================================================\n\t\t// Startup\n\t\t// ========================================================================\n\n\t\tthis.onWindowMessage = this.onWindowMessage.bind(this);\n\t\tthis.onRuntimeDisconnect = this.onRuntimeDisconnect.bind(this);\n\t\tthis.onRuntimeMessage = this.onRuntimeMessage.bind(this);\n\n\t\twindow.addEventListener('message', this.onWindowMessage);\n\n\t\tdocument.addEventListener('readystatechange', event => {\n\t\t\tif ( document.documentElement )\n\t\t\t\tdocument.documentElement.dataset.ffzEsbridge = true;\n\t\t});\n\t}\n\n\tstatic get() {\n\t\treturn FFZESBridge.instance;\n\t}\n\n\t// ========================================================================\n\t// Window Communication\n\t// ========================================================================\n\n\twindowSend(msg, transfer) {\n\t\tif ( typeof msg === 'string' )\n\t\t\tmsg = {ffz_esb_type: msg};\n\n\t\ttry {\n\t\t\twindow.postMessage(\n\t\t\t\tmsg,\n\t\t\t\tlocation.origin,\n\t\t\t\ttransfer ? (Array.isArray(transfer) ? transfer : [transfer]) : undefined\n\t\t\t\t);\n\t\t} catch(err) {\n\t\t\tthis.log.error('Error sending message to window.', err, msg, transfer);\n\t\t}\n\t}\n\n\tonWindowMessage(event) {\n\t\tif ( event.origin !== location.origin )\n\t\treturn;\n\n\t\tconst msg = event.data,\n\t\tid = msg?.id,\n\t\ttype = msg?.ffz_esb_type;\n\n\t\tif ( ! type )\n\t\treturn;\n\n\t\tthis.log.info('Received Message from Page', type, id, msg);\n\n\t\tif ( type === 'init' ) {\n\t\t\tthis.received_init = true;\n\t\t\tif ( this.active )\n\t\t\tthis.runtimeHeartbeat();\n\t\t}\n\n\t\tthis.runtimeSend(msg);\n\t}\n\n\t// ========================================================================\n\t// Runtime Communication\n\t// ========================================================================\n\n\truntimeOpen() {\n\t\tif ( this.active )\n\t\treturn Promise.resolve();\n\n\t\tthis.log.info('Connecting to worker.');\n\n\t\tthis.port = (window.browser ?? window.chrome).runtime.connect({name: 'esbridge'});\n\n\t\tthis.port.onMessage.addListener(this.onRuntimeMessage);\n\t\tthis.port.onDisconnect.addListener(this.onRuntimeDisconnect);\n\n\t\tif ( this.received_init )\n\t\tthis.runtimeHeartbeat();\n\t}\n\n\tonRuntimeMessage(msg) {\n\t\tthis.windowSend(msg);\n\t}\n\n\tonRuntimeDisconnect(...args) {\n\t\tthis.log.info('Disconnected from worker.', args);\n\t\tthis.active = false;\n\t\tthis.port = null;\n\t\tif ( this._heartbeat ) {\n\t\t\tclearInterval(this._heartbeat);\n\t\t\tthis._heartbeat = null;\n\t\t}\n\t}\n\n\truntimeHeartbeat() {\n\t\tif ( this._heartbeat )\n\t\treturn;\n\n\t\tthis._heartbeat = setInterval(() => {\n\t\t\tif ( this.active )\n\t\t\tthis.runtimeSend('heartbeat');\n\t\t}, 30000);\n\t}\n\n\truntimeSend(msg) {\n\t\tif ( typeof msg === 'string' )\n\t\tmsg = {ffz_esb_type: msg};\n\n\t\tif ( ! this.active )\n\t\t// We need to create our port.\n\t\tthis.runtimeOpen();\n\n\t\t// Send the message, knowing we have an open port.\n\t\tthis.port.postMessage(msg);\n\t}\n\n};\n\nFFZESBridge.Logger = Logger;\n\nconst VER = FFZESBridge.version_info = Object.freeze({\n\tmajor: __version_major__,\n\tminor: __version_minor__,\n\trevision: __version_patch__,\n\textra: __version_prerelease__?.length && __version_prerelease__[0],\n\tcommit: __git_commit__,\n\tbuild: __version_build__,\n\thash: __webpack_hash__,\n\ttoString: () =>\n\t`${VER.major}.${VER.minor}.${VER.revision}${VER.extra || ''}${VER.build ? `+${VER.build}` : ''}`\n});\n\nwindow.FFZESBridge = FFZESBridge;\nwindow.ffz_esbridge = new FFZESBridge();\n"],"names":["__webpack_require__","RAVEN_LEVELS","LogLevel","readLSLevel","level","upper","value","Logger","parent","name","raven","core","version","VER","loc","err","message","optionalParams","colors","args","exc","opts","msg","out","default_style","result","strings","event","transfer","id","type","FFZESBridge"],"sourceRoot":""}