(()=>{var j=Object.defineProperty;var g=(p,u)=>j(p,"name",{value:u,configurable:!0});(()=>{var p={};const{createElement:u,setChildren:f}=FrankerFaceZ.utilities.dom,{Mutex:_}=FrankerFaceZ.utilities.object;function b(m,e){return fetch(`https://api.pronouns.alejo.io/v1/${m}`,e).then(t=>t.ok?t.json():null)}g(b,"get");const l=class l extends FrankerFaceZ.utilities.addon.Addon{constructor(...e){super(...e),this.inject("chat"),this.inject("chat.badges"),this.inject("i18n"),this.inject("settings"),this.waiting=new _(4),this.pronouns={},this.users=new Map}async onEnable(){this.settings.add("addon.pronouns.streamer",{default:!0,ui:{path:"Add-Ons > Pronouns >> Appearance",title:"Show a pronoun badge for the streamer if they have pronouns set.",component:"setting-check-box"}}),this.settings.add("addon.pronouns.color",{default:"",ui:{path:"Add-Ons > Pronouns >> Appearance",title:"Badge Color",component:"setting-color-box"},changed:()=>this.updateBadges()}),this.settings.add("addon.pronouns.border",{default:!0,ui:{path:"Add-Ons > Pronouns >> Appearance",title:"Display a border around the badge.",component:"setting-check-box"},changed:()=>this.updateBadges()});const e=this.onMessage.bind(this);await this.loadPronouns().then(()=>this.buildBadges()),this.on("site.channel:update-bar",this.updateChannelPronouns,this),this.chat.addTokenizer({type:"pronouns",process:e}),this.emit("chat:update-lines")}onDisable(){this.removeBadges(),this.chat.removeTokenizer("pronouns"),this.emit("chat:update-lines"),this.off("site.channel:update-bar",this.updateChannelPronouns,this)}updateChannelPronouns(e,t,n){if(e._pn_badge&&!e.contains(e._pn_badge)&&(e._pn_badge.remove(),e._pn_badge=null),!e._pn_badge){const h=e.querySelector("a .tw-title"),i=h&&h.closest("a"),d=i&&i.closest("div");if(d&&e.contains(d)){e._pn_badge=u("div",{class:"pn--badge"});let r;i.parentElement===d&&(r=i.nextElementSibling,r&&r.querySelector("svg")&&(r=r.nextElementSibling)),r?d.insertBefore(e._pn_badge,r):d.appendChild(e._pn_badge)}}if(!e._pn_badge||t?.channelLogin===e._pn_login)return;const s=e._pn_login=t?.channelLogin;if(!s||!this.settings.get("addon.pronouns.streamer")){e._pn_badge.innerHTML="";return}let o=this.getUser(s,!0);if(o instanceof Promise)return o.then(()=>{e._pn_login===s&&(e._pn_login=null,this.updateChannelPronouns(e,t,n))});if(!o){e._pn_badge.innerHTML="";return}const a={user:{id:t.channelID,login:s,displayName:t.displayName},roomID:t.channelID,roomLogin:s,ffz_badges:[{id:`addon-pn-${o}`}]};e._pn_badge.dataset.roomId=a.roomID,e._pn_badge.dataset.room=s,e._pn_badge.dataset.userId=a.roomID,e._pn_badge.dataset.user=s,e._pn_badge.message=a,f(e._pn_badge,this.badges.render(a,u,!0,!0))}onMessage(e,t){const n=t?.user,s=n?.login;if(s){const o=this.getUser(s);o instanceof Promise&&o.then(a=>{a&&(this.chat.getUser(n.id,s).addBadge("pronouns",`addon-pn-${a}`),this.emit("chat:update-lines-by-user",n.id,s,!1,!0))})}return e}getUser(e,t=!1){const n=this.users.get(e);if(n){if(!n.done)return t?n.promise:null;if(Date.now()<=n.time+3e5)return n.value}if(this.load_wait)return this.load_wait.then(()=>this.getUser(e,t));const s=this.waiting.wait().then(o=>this._getUser(e).then(a=>(this.users.set(e,{done:!0,value:a,time:Date.now()}),a)).catch(a=>{throw this.users.set(e,{done:!0,value:null,time:Date.now()}),a}).finally(o));return this.users.set(e,{done:!1,promise:s}),s}async _getUser(e){const t=await b(`users/${e}`);let n=t?.pronoun_id;return n?.length?t.alt_pronoun_id?.length?`${n}|${t.alt_pronoun_id}`:n:null}async loadPronouns(){const e=await b("pronouns");if(this.pronouns={},!!e)for(const[t,n]of Object.entries(e)){this.pronouns[t]=n.singular||!n.object?.length?n.subject:`${n.subject}/${n.object}`;for(const[s,o]of Object.entries(e))t!==s&&(this.pronouns[t+"|"+s]=`${n.subject||n.object}/${o.subject||o.object}`)}}clearUserData(){for(const e of this.chat.iterateUsers())e.removeAllBadges("pronouns");this.users.clear()}removeBadges(){for(const e of Object.keys(this.pronouns))this.badges.removeBadge(`addon-pn-${e}`,!1),this.settings.remove(`addon.pronouns.color.${e}`);this.old_badges=new Set,this.badges.buildBadgeCSS()}buildBadges(){const e=this.old_badges;for(const[t,n]of Object.entries(this.pronouns))e&&e.has(t)?e.delete(t):this.updateBadge(t,n,!1);if(e)for(const t of e)this.badges.removeBadge(`addon-pn-${t}`,!1);this.old_badges=new Set(Object.keys(this.pronouns)),this.badges.buildBadgeCSS()}updateBadge(e,t,n=!1){let s="display:inline-flex;align-items:center;";this.settings.get("addon.pronouns.border")&&(s=`${s}border:0.1rem solid;border-radius:0.5rem`);const o=e.indexOf("|"),a=`addon.pronouns.color.${o===-1?e:e.slice(0,o)}`;(!this.old_badges||!this.old_badges.has(e)&&o===-1)&&this.settings.add(a,{default:null,requires:["addon.pronouns.color"],process(h,i){return i??h.get("addon.pronouns.color")},ui:{path:"Add-Ons > Pronouns >> Per-Badge Colors",title:t,i18n_key:null,component:"setting-color-box",force_seen:!0},changed:()=>{this.pronouns[e]&&this.updateBadge(e,t,!0)}}),this.badges.loadBadgeData(`addon-pn-${e}`,{no_visibility:!0,content:t,title:this.i18n.t("addon.pronouns.title","Pronouns: {value}",{value:t}),click_url:"https://pr.alejo.io/",color:this.settings.get(a),slot:100,css:s},n)}updateBadges(){for(const[e,t]of Object.entries(this.pronouns))this.updateBadge(e,t);this.badges.buildBadgeCSS()}};g(l,"Pronouns");let c=l;c.register("pronouns",null,"1.2.0")})();})();

//# sourceMappingURL=script.js.map