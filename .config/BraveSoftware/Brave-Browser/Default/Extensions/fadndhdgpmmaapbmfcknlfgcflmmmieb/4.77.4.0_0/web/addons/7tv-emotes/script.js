(()=>{var T=Object.defineProperty;var g=(S,b)=>T(S,"name",{value:b,configurable:!0});(()=>{var S={810:(m,h,u)=>{"use strict";u.r(h),u.d(h,{Cosmetics:()=>n,Emotes:()=>v,User:()=>l,default:()=>c});const e=class e extends FrankerFaceZ.utilities.module.Module{constructor(...a){super(...a),this.inject(l),this.inject(v),this.inject(n),this.apiBaseURI="https://7tv.io/v3",this.eventsBaseURI="https://events.7tv.io/v3",this.appBaseURI="https://7tv.app",this.clientPlatform="ffz",this.clientVersion=this.parent.manifest.version}makeRequest(a,d={},r=!1){const f=new Headers(d&&d.headers||{});f.set("X-SevenTV-Platform",this.clientPlatform),f.set("X-SevenTV-Version",this.clientVersion);const p=fetch(`${this.apiBaseURI}/${a}`,{cache:r?"reload":"default",...d,headers:f});return r?p:p.catch(()=>this.makeRequest(a,d,!0))}async requestJSON(a,d={}){const r=await this.makeRequest(a,{...d,headers:{"Content-Type":"application/json"}});return r.ok?await r.json():null}async requestObject(a,d={}){const r=await this.requestJSON(a,d);return r!=null&&typeof r=="object"?r:{}}async requestArray(a,d={}){const r=await this.requestJSON(a,d);return r instanceof Array?r:[]}getEmoteAppURL(a){return`${this.appBaseURI}/emotes/${a.id}`}};g(e,"API");let c=e;const t=class t extends FrankerFaceZ.utilities.module.Module{fetchUserData(a){return this.parent.requestObject(`users/twitch/${a}`)}updateUserPresences(a,d,r=void 0,f=void 0){return this.parent.requestJSON(`users/${a}/presences`,{method:"POST",body:JSON.stringify({kind:1,passive:r,session_id:r?f:void 0,data:{platform:"TWITCH",id:d}})})}};g(t,"User");let l=t;const s=class s extends FrankerFaceZ.utilities.module.Module{fetchGlobalEmotes(){return this.parent.requestObject("emote-sets/global")}fetchChannelEmotes(a){return this.parent.requestObject(`users/twitch/${a}`)}fetchEmoteSet(a){return this.parent.requestObject(`emote-sets/${a}`)}};g(s,"Emotes");let v=s;const i=class i extends FrankerFaceZ.utilities.module.Module{fetchAvatars(a){return this.parent.requestJSON("bridge/event-api",{method:"POST",body:JSON.stringify({identifiers:a})})}};g(i,"Cosmetics");let n=i},6721:(m,h,u)=>{"use strict";u.r(h),u.d(h,{default:()=>c});const l=class l extends FrankerFaceZ.utilities.module.Module{constructor(...n){super(...n),this.inject("..api"),this.inject("settings"),this.inject("site"),this.inject("site.fine"),this.settings.add("addon.seventv_emotes.animated_avatars",{default:!0,ui:{path:"Add-Ons > 7TV Emotes >> User Cosmetics",title:"Animated Avatars",description:"Show 7TV animated avatars on users who have them set. [(7TV Subscriber Perk)](https://7tv.app/store)",component:"setting-check-box"}}),this.avatarCache=new Map,this.socketWaiters=new Map,this.updateInterval=!1}onEnable(){this.settings.getChanges("addon.seventv_emotes.animated_avatars",()=>this.onSettingChange()),this.on("common:update-avatar",async n=>{if(!this.settings.get("addon.seventv_emotes.animated_avatars"))return;const t=await this.getAvatar(n.user.login);t&&(n.url=t)}),this.onSettingChange()}receiveAvatarData(n){if(!n.user?.username||!n.host?.files)return;const e=n.user.username.toLowerCase(),t=this.socketWaiters.get(e);if(!t)return;this.socketWaiters.delete(e);const s=n.host.files.filter(o=>o.format==="WEBP");if(!s.length)return;const i=s[s.length-1];t(`${n.host.url}/${i.name}`)}getAvatar(n){n=n.toLowerCase();const e=this.avatarCache.get(n);if(e?.done&&Date.now()<e.expires_at)return e.value;if(e&&!e.done)return e.promise;const t=new Promise(s=>{let i;const o=g(a=>{clearTimeout(i),a||(a=null),this.avatarCache.set(n,{done:!0,value:a,expires_at:Date.now()+18e4}),s(a)},"onDone");this.socketWaiters.set(n,o),i=setTimeout(o,3e3),this.waitingAvatars=this.waitingAvatars||[],this.waitingAvatars.push(n),this.requestTimer||(this.requestTimer=setTimeout(async()=>{this.requestTimer=null;const a=this.waitingAvatars;this.waitingAvatars=null;const d=await this.api.cosmetics.fetchAvatars(a.map(r=>`username:${r}`));for(const{body:r}of d){const{data:f}=r.object;this.receiveAvatarData(f)}},1e3))});return this.avatarCache.set(n,{done:!1,promise:t}),t}onSettingChange(){this.settings.get("addon.seventv_emotes.animated_avatars")?this.updateInterval||(this.updateInterval=setInterval(()=>{this.updateAvatars()},1e3)):(clearInterval(this.updateInterval),this.updateInterval=!1),this.updateAvatars()}getVisibleAvatars(){return document.querySelectorAll(".tw-image-avatar")}updateAvatars(){const n=this.settings.get("addon.seventv_emotes.animated_avatars");this.getVisibleAvatars().forEach(async t=>{if(!n){t.hasAttribute("seventv-original-avatar")&&(t.setAttribute("src",t.getAttribute("seventv-original-avatar")),t.removeAttribute("seventv-original-avatar"));return}const s=this.fine.getOwner(t);if(!s)return;const o=this.fine.searchParentNode(s,r=>r.memoizedProps?.userLogin)?.memoizedProps?.userLogin;if(!o)return;const a=t.getAttribute("src"),d=await this.getAvatar(o);d&&d!==a&&(t.hasAttribute("seventv-original-avatar")||t.setAttribute("seventv-original-avatar",t.getAttribute("src")),t.setAttribute("src",d))})}};g(l,"Avatars");let c=l},1542:(m,h,u)=>{"use strict";u.r(h),u.d(h,{default:()=>l});const c=/sub(?:\d+|founder)/,v=class v extends FrankerFaceZ.utilities.module.Module{constructor(...e){super(...e),this.inject("settings"),this.inject("chat"),this.inject("i18n"),this.injectAs("chat_badges","chat.badges"),this.settings.add("addon.seventv_emotes.badges",{default:!0,ui:{path:"Add-Ons > 7TV Emotes >> User Cosmetics",title:"Badges",description:`Show 7TV user badges.

(Per-badge visibilty can be set in [Chat >> Badges > Visibilty > Add-Ons](~chat.badges.tabs.visibility))`,component:"setting-check-box"}}),this.badges=new Map,this.badgeToUsers=new Map,this.addBadge({id:"62f97c05e46eb00e438a696a",name:"7TV Subscriber - 1 Month",tag:"sub1",tooltip:"7TV Subscriber (1 Month)",host:{url:"//cdn.7tv.app/badge/62f97c05e46eb00e438a696a"}})}onEnable(){this.settings.getChanges("addon.seventv_emotes.badges",e=>this.updateBadges(e))}getUsersForBadge(e){return this.badgeToUsers.get(e)||new Set}updateBadges(e){if(e)for(const t of this.badgeToUsers.keys()){const s=this.getUsersForBadge(t);for(const i of s)this.chat.getUser(i).addBadge("addon.seventv-emotes",t)}else for(const t of this.chat.iterateUsers())t.removeAllBadges("addon.seventv-emotes");this.emit("chat:update-lines")}getBadgeID(e){return`addon.seventv_emotes.badge-${e}`}addBadge(e){const t=e.host.url,s=this.getBadgeID(e.id);if(this.badges.has(s))return;let i=e.tooltip,o;if(i.includes("Subscriber")){const d=i.split(" (");i=d[0],o=`(${d[1]}`}const a={id:e.id,base_id:c.test(e.tag)?"addon.seventv_emotes.subscriber_badge":void 0,title:i,tooltipExtra:()=>{if(o)return`
${o}`},slot:69,image:`${t}/1x`,urls:{1:`${t}/1x`,2:`${t}/2x`,4:`${t}/3x`},svg:!1,click_url:"https://7tv.app/"};this.chat_badges.loadBadgeData(s,a),this.badges.set(s,a)}addUserBadgeByID(e,t){t=this.getBadgeID(t);const s=this.chat.getUser(e);if(s.getBadge(t))return;const o=this.getUsersForBadge(t);o.add(e),this.badgeToUsers.set(t,o),this.settings.get("addon.seventv_emotes.badges")&&(s.addBadge("addon.seventv-emotes",t),this.emit("chat:update-lines-by-user",e))}addUserBadge(e){const t=e.ref_id||e.id,s=e.user?.connections?.find(i=>i.platform==="TWITCH");s?.id&&this.addUserBadgeByID(s.id,t)}removeUserBadgeByID(e,t){t=this.getBadgeID(t);const s=this.chat.getUser(e);if(!s.getBadge(t))return;const o=this.getUsersForBadge(t);o.delete(e),this.badgeToUsers.set(t,o),s.removeBadge("addon.seventv-emotes",t),this.emit("chat:update-lines-by-user",e)}removeUserBadge(e){const t=e.ref_id||e.id,s=e.user?.connections?.find(i=>i.platform==="TWITCH");s?.id&&this.removeUserBadgeByID(s.id,t)}};g(v,"Badges");let l=v},3833:(m,h,u)=>{"use strict";u.r(h),u.d(h,{default:()=>c});const l=class l extends FrankerFaceZ.utilities.module.Module{constructor(...n){super(...n),this.inject("..api"),this.inject("settings"),this.inject("chat"),this.inject("chat.emotes"),this.setIcon=this.parent.manifest.icon,this.settings.add("addon.seventv_emotes.global_emotes",{default:!0,ui:{path:"Add-Ons > 7TV Emotes >> Emotes",title:"Global Emotes",description:"Enables global emotes from 7TV.",component:"setting-check-box"}}),this.settings.add("addon.seventv_emotes.channel_emotes",{default:!0,ui:{path:"Add-Ons > 7TV Emotes >> Emotes",title:"Channel Emotes",description:"Enables channel specific emotes from 7TV.",component:"setting-check-box"}}),this.settings.add("addon.seventv_emotes.emote_format",{default:"WEBP",ui:{path:"Add-Ons > 7TV Emotes >> Emotes",title:"Emote Format",description:"The file format of the emotes to be used.",component:"setting-select-box",data:[{value:"WEBP",title:"Webp"},{value:"AVIF",title:"Avif"}]}}),this.settings.add("addon.seventv_emotes.unlisted_emotes",{default:!1,ui:{path:"Add-Ons > 7TV Emotes >> Emotes > Emote Visibility",title:"Show unlisted emotes",description:"Show emotes which have not yet been approved or have been deemed non-TOS friendly by 7TV moderators.",component:"setting-check-box"}}),this.setToChannelMap=new Map,this.on("chat:reload-data",e=>{(!e||e.emotes)&&(this.updateGlobalEmotes(),this.updateChannelSets())}),this.emotes.setProvider("addon.seventv_emotes",{name:this.addon_manifest.name,icon:this.addon_manifest.icon})}onEnable(){this.on("settings:changed:addon.seventv_emotes.global_emotes",()=>this.updateGlobalEmotes()),this.on("settings:changed:addon.seventv_emotes.emote_format",()=>this.updateGlobalEmotes()),this.on("settings:changed:addon.seventv_emotes.emote_format",()=>this.updateChannelSets()),this.on("settings:changed:addon.seventv_emotes.channel_emotes",()=>this.updateChannelSets()),this.on("settings:changed:addon.seventv_emotes.unlisted_emotes",()=>this.updateChannelSets()),this.on("chat:room-add",n=>this.updateChannelSet(n)),this.on("chat:room-remove",n=>this.setChannelSet(n,null)),this.updateGlobalEmotes(),this.updateChannelSets()}async updateGlobalEmotes(){if(this.emotes.removeDefaultSet("addon.seventv_emotes","addon.seventv_emotes.global"),this.emotes.unloadSet("addon.seventv_emotes.global"),!this.settings.get("addon.seventv_emotes.global_emotes"))return;const n=await this.api.emotes.fetchGlobalEmotes(),e=[];for(const t of n.emotes){const s=this.convertEmote(t);s&&e.push(s)}this.emotes.addDefaultSet("addon.seventv_emotes","addon.seventv_emotes.global",{title:n.name,source:"7TV",icon:this.setIcon,emotes:e})}getChannelSetID(n){return`addon.seventv_emotes.channel-${n.id}`}getChannelSet(n){return this.emotes.emote_sets[this.getChannelSetID(n)]||{}}setChannelSet(n,e){const t=this.getChannelSetID(n);n.removeSet("addon.seventv_emotes",t),this.emotes.unloadSet(t),e&&e.length>0&&n.addSet("addon.seventv_emotes",t,{title:"Channel Emotes",title_is_channel:!0,source:"7TV",icon:this.setIcon,emotes:e})}addEmoteToChannelSet(n,e,t=!1){const s=this.getChannelSet(n),i=this.settings.get("addon.seventv_emotes.unlisted_emotes");if(s&&(i||t||!this.isEmoteUnlisted(e))){const o=s.emotes||{},a=this.convertEmote(e);return a?(o[e.id]=a,this.setChannelSet(n,Object.values(o)),!0):!1}return!1}removeEmoteFromChannelSet(n,e){const t=this.getChannelSet(n);if(t){const s=t.emotes||{};return s[e]?(delete s[e],this.setChannelSet(n,Object.values(s)),!0):!1}return!1}getEmoteFromChannelSet(n,e){const t=this.getChannelSet(n);if(t&&t.emotes){const s=t.emotes[e];if(s&&s.SEVENTV_emote)return s.SEVENTV_emote}return null}getChannelBySetID(n,e){let t=this.setToChannelMap.get(n);return!t&&(t=this.setToChannelMap.get(e),!t)?null:this.chat.getRoom(t,null,!0)}async updateChannelSet(n,e=!1){if(this.settings.get("addon.seventv_emotes.channel_emotes")){let t={};e?t.emote_set=await this.api.emotes.fetchEmoteSet(e):t=await this.api.emotes.fetchChannelEmotes(n.id);const s=this.settings.get("addon.seventv_emotes.unlisted_emotes");if(!t.emote_set)return!1;const i=[];if(t.emote_set.emotes){for(const o of t.emote_set.emotes)if(s||!this.isEmoteUnlisted(o)){const a=this.convertEmote(o);if(!a)continue;i.push(a)}}return this.setToChannelMap.set(t.emote_set.id,n.id),this.setChannelSet(n,i),!0}else return this.setChannelSet(n,null),!1}handleChannelEmoteUpdate(n){if(!this.settings.get("addon.seventv_emotes.channel_emotes"))return;let e;for(const t of this.chat.iterateRooms())if(t){e=t;break}if(e){let t,s,i=!1;if(n.pushed)s="pushed",t="ADD";else if(n.pulled)s="pulled",t="REMOVE";else if(n.updated)s="updated",t="UPDATE";else return;for(const o of n[s]){if(o.key!=="emotes")continue;const a=o.value?.id??o.old_value.id,d=this.getEmoteFromChannelSet(e,a);switch(t){case"UPDATE":if(!d)break;i=this.addEmoteToChannelSet(e,o.value);break;case"ADD":i=this.addEmoteToChannelSet(e,o.value);break;case"REMOVE":i=this.removeEmoteFromChannelSet(e,a);break}if(i){let r=`${n.actor.display_name} `;switch(t){case"ADD":{r+=`added the emote ${o.value.name} (${o.value.name})`;break}case"REMOVE":{r+=`removed the emote ${o.old_value.name}`;break}case"UPDATE":{d?.name!==o.value.name?r+=`renamed the emote ${d.name} to ${o.value.name} (${o.value.name})`:r+=`updated the emote ${o.value.name} (${o.value.name})`;break}}this.resolve("..socket").addChatNotice(e,r)}}}}updateChannelSets(){for(const n of this.chat.iterateRooms())this.updateChannelSet(n)}getBitFlag(n,e){return(n&e)==e}isZeroWidthEmote(n){return n===1}convertEmote(n){const e=n?.data?.host?.url;if(!e)return null;const t=this.settings.get("addon.seventv_emotes.emote_format"),s=n.data.host.files.filter(d=>d.format===t);if(!s.length)return null;const i=s.reduce((d,r,f)=>(d[f+1]=`${e}/${r.name}`,d),{});let o;n.data.animated&&(o=s.reduce((d,r,f)=>(d[f+1]=`${e}/${r.static_name}`,d),{}));const a={id:n.id,name:n.name,owner:{display_name:n.data?.owner?.display_name,name:n.data?.owner?.username},urls:i,modifier:this.isZeroWidthEmote(n.flags),modifier_offset:"0",width:s[0]?.width,height:s[0]?.height,click_url:this.api.getEmoteAppURL(n),SEVENTV_emote:n};return o&&(a.animated=a.urls,a.urls=o),a}isEmoteUnlisted(n){return!n.data.listed}};g(l,"Emotes");let c=l},9535:(m,h,u)=>{"use strict";u.r(h),u.d(h,{default:()=>l});const{createElement:c}=FrankerFaceZ.utilities.dom,v=class v extends FrankerFaceZ.utilities.module.Module{constructor(...e){super(...e),this.inject("settings"),this.inject("site.fine"),this.inject("chat"),this.settings.add("addon.seventv_emotes.nametag_paints",{default:!0,ui:{path:"Add-Ons > 7TV Emotes >> User Cosmetics",title:"Nametag Paints",description:"Show 7TV username gradients and images on users who have them set. [(7TV Subscriber Perk)](https://7tv.app/store)",component:"setting-check-box"}}),this.settings.add("addon.seventv_emotes.nametag_paints_drop_shadows",{default:!0,ui:{path:"Add-Ons > 7TV Emotes >> User Cosmetics",title:"Nametag Paints Drop Shadows",description:"Whether to show drop shadows for nametag paints **(Note: Too many drop shadows on screen can cause a drop in performance)**",component:"setting-check-box"}}),this.namepaintsApplyer={type:"apply_namepaints",process:(t,s)=>{if(!this.settings.get("addon.seventv_emotes.nametag_paints"))return;const o=this.getUserPaint(s.user.userID);if(o)return s.ffz_user_class=s.ffz_user_class||new Set,s.ffz_user_class.add("seventv-paint"),s.ffz_user_class.add("seventv-painted-content"),s.ffz_user_class.add("ffz-tooltip"),s.ffz_user_class.add("ffz-tooltip--no-mouse"),s.ffz_user_props={"data-seventv-paint-id":o,"data-seventv-painted-text":!0,"data-tooltip-type":"seventv-paint"},t}},this.chat.addTokenizer(this.namepaintsApplyer),this.resolve("tooltips").define("seventv-paint",t=>{const s=t?.dataset?.seventvPaintId,i=this.paints.get(s)?.name;return i?c("span",{className:"seventv-paint-tooltip"},i):FrankerFaceZ.utilities.tooltip.NoContent}),this.paintSheet=!1,this.paints=new Map,this.userPaints=new Map}onEnable(){this.on("settings:changed:addon.seventv_emotes.nametag_paints",()=>this.updateChatLines()),this.on("settings:changed:addon.seventv_emotes.nametag_paints_drop_shadows",()=>this.updatePaintSheet())}getPaintStylesheet(){if(this.paintSheet)return this.paintSheet;const e=document.createElement("link");e.type="text/css",e.rel="stylesheet";const t=document.createElement("style");return t.id="seventv-paint-styles",document.head.appendChild(t),t.sheet.insertRule(`.seventv-painted-content {
			background-color: currentcolor;
		}`),t.sheet.insertRule(`.seventv-painted-content > .chat-author__intl-login {
			opacity: 1;
		}`),t.sheet.insertRule(`.seventv-painted-content[data-seventv-painted-text="true"] {
			-webkit-text-fill-color: transparent;
			background-clip: text !important;
			/* stylelint-disable-next-line property-no-vendor-prefix */
			-webkit-background-clip: text !important;
			font-weight: 700;
		}`),t.sheet.insertRule(`.seventv-paint-tooltip {
			font-weight: 700;
		}`),this.paintSheet=t.sheet??null}getUserPaint(e){return this.userPaints.get(e)}deleteUserPaintByID(e,t){const s=this.userPaints.get(e);!s||s!==t||(this.userPaints.delete(e),this.updateChatLines(e))}deleteUserPaint(e){const t=e.ref_id||e.id,s=e.user?.connections?.find(i=>i.platform==="TWITCH");s?.id&&this.deleteUserPaintByID(s.id,t)}setUserPaintByID(e,t){this.userPaints.get(e)!==t&&(this.userPaints.set(e,t),this.updateChatLines(e))}setUserPaint(e){const t=e.ref_id||e.id,s=e.user?.connections?.find(i=>i.platform==="TWITCH");s?.id&&this.setUserPaintByID(s.id,t)}updatePaintSheet(){for(const e of this.paints.values())this.updatePaintStyle(e);this.updateChatLines()}updatePaintStyle(e,t=!1){this.paints.set(e.id,e);const s=this.getPaintStylesheet();if(!s){this.log.error("<Cosmetics>","Could not find paint stylesheet");return}!e.gradients?.length&&e.function&&(e.gradients||(e.gradients=new Array(1)),e.gradients[0]={function:e.function,canvas_repeat:"",size:[1,1],shape:e.shape,image_url:e.image_url,stops:e.stops??[],repeat:e.repeat??!1,angle:e.angle});const i=e.gradients.map(p=>this.createGradientFromPaint(p)),o=this.settings.get("addon.seventv_emotes.nametag_paints_drop_shadows"),a=(()=>!o||!e.shadows?"":e.shadows.map(p=>this.createFilterDropshadow(p)).join(" "))(),d=`.seventv-paint[data-seventv-paint-id="${e.id}"]`,r=`${d} {
			color: ${e.color?this.getCSSColorFromInt(e.color):"inherit"};
			background-image: ${i.map(p=>p[0]).join(", ")};
			background-position: ${i.map(p=>p[1]).join(", ")};
			background-size: ${i.map(p=>p[2]).join(", ")};
			background-repeat: ${i.map(p=>p[3]).join(", ")};
			filter: ${a||"inherit"};
			${e.text?`
						font-weight: ${e.text.weight?e.text.weight*100:"inherit"};
						-webkit-text-stroke-width: ${e.text.stroke?`${e.text.stroke.width}px`:"inherit"};
						-webkit-text-stroke-color: ${e.text.stroke?this.getCSSColorFromInt(e.text.stroke.color):"inherit"};
						text-shadow: ${e.text.shadows?.map(p=>`${p.x_offset}px ${p.y_offset}px ${p.radius}px ${this.getCSSColorFromInt(p.color)}`).join(", ")??"unset"};
					text-transform: ${e.text.transform??"unset"};
					`:""}
		}
		`;let f=-1;for(let p=0;p<s.cssRules.length;p++){const E=s.cssRules[p];if(E instanceof CSSStyleRule&&E.selectorText===d){f=p;break}}if(t){f>=0&&s.deleteRule(f);return}f>=0?(s.deleteRule(f),s.insertRule(r,f)):s.insertRule(r,s.cssRules.length)}createGradientFromPaint(e){const t=["","","",""],s=[];switch(e.function){case"LINEAR_GRADIENT":s.push(`${e.angle??0}deg`);break;case"RADIAL_GRADIENT":s.push(e.shape??"circle");break;case"URL":s.push(e.image_url??"");break}let i="";if(e.function!=="URL"){i=e.repeat?"repeating-":"";for(const o of e.stops){const a=this.getCSSColorFromInt(o.color);s.push(`${a} ${o.at*100}%`)}}return t[0]=`${i}${e.function.toLowerCase().replace("_","-")}(${s.join(", ")})`,t[1]=e.at&&e.at.length===2?`${e.at[0]*100}% ${e.at[1]*100}%`:"",t[2]=e.size&&e.size.length===2?`${e.size[0]*100}% ${e.size[1]*100}%`:"",t[3]=e.canvas_repeat??"unset",t}createFilterDropshadow(e){return`drop-shadow(${e.x_offset}px ${e.y_offset}px ${e.radius}px ${this.getCSSColorFromInt(e.color)})`}getCSSColorFromInt(e){const t=e>>>24&255,s=e>>>16&255,i=e>>>8&255,o=e&255;return`rgba(${t}, ${s}, ${i}, ${o/255})`}updateChatLines(e=void 0){const t=this.settings.get("addon.seventv_emotes.nametag_paints");for(const{message:s,update:i}of this.chat.iterateMessages()){const o=s.user;if(e!==void 0&&o.userID!==e)continue;const a=t?this.getUserPaint(o.userID):null;a?(s.ffz_user_class=s.ffz_user_class||new Set,s.ffz_user_class.add("seventv-paint"),s.ffz_user_class.add("seventv-painted-content"),s.ffz_user_class.add("ffz-tooltip"),s.ffz_user_class.add("ffz-tooltip--no-mouse"),s.ffz_user_props={...s.ffz_user_props,"data-seventv-paint-id":a,"data-seventv-painted-text":!0,"data-tooltip-type":"seventv-paint"}):(s.ffz_user_class=s.ffz_user_class||new Set,s.ffz_user_class.delete("seventv-paint"),s.ffz_user_class.delete("seventv-painted-content"),s.ffz_user_class.delete("ffz-tooltip"),s.ffz_user_class.delete("ffz-tooltip--no-mouse"),s.ffz_user_props?.["data-seventv-paint-id"]&&(delete s.ffz_user_props["data-seventv-paint-id"],delete s.ffz_user_props["data-seventv-painted-text"],delete s.ffz_user_props["data-tooltip-type"])),i()}}};g(v,"NametagPaints");let l=v},9102:(m,h,u)=>{"use strict";u.r(h),u.d(h,{default:()=>c});const l=class l extends FrankerFaceZ.utilities.module.Module{constructor(...n){super(...n),this.injectAs("seventv_emotes","..emotes"),this.inject("settings"),this.inject("chat"),this.inject("chat.emotes"),this.setIcon=this.parent.manifest.icon,this.settings.add("addon.seventv_emotes.personal_emotes",{default:!0,ui:{path:"Add-Ons > 7TV Emotes >> Emotes",title:"Personal Emotes",description:"Enables personal emotes from 7TV.",component:"setting-check-box"}}),this.emoteSets=new Map,this.userToSetsMap=new Map,this.setToUsersMap=new Map}onEnable(){this.on("settings:changed:addon.seventv_emotes.personal_emotes",()=>this.updatePersonalSets())}updatePersonalSets(){for(const n of this.emoteSets.keys())this.reloadSet(n)}getSetID(n){return`addon.seventv_emotes.personal-${n}`}createPersonalSet(n,e){const t=this.emoteSets.get(n);this.emoteSets.set(n,{id:t?.id||n,name:t?.name||e,emotes:t?.emotes||{}}),t?.id&&this.reloadSet(n)}getPersonalSet(n){return this.emoteSets.has(n)||this.emoteSets.set(n,{emotes:{}}),this.emoteSets.get(n)}addUserToSets(n,e){const t=this.userToSetsMap.get(n)||new Set;t.add(e),this.userToSetsMap.set(n,t);const s=this.setToUsersMap.get(e)||new Set;s.add(n),this.setToUsersMap.set(e,s),this.chat.getUser(n).addSet("addon.seventv_emotes",this.getSetID(e))}grantSetToUser(n){const e=n.ref_id,t=n.user.connections.find(s=>s.platform==="TWITCH");this.addUserToSets(t.id,e)}updateSet(n){if(!this.settings.get("addon.seventv_emotes.personal_emotes"))return;let e,t;if(n.pushed)t="pushed",e="ADD";else if(n.pulled)t="pulled",e="REMOVE";else if(n.updated)t="updated",e="UPDATE";else return;const s=n.id;for(const i of n[t]){if(i.key!=="emotes")continue;const o=i.value?.id??i.old_value.id,a=this.getEmoteFromSet(s,o);switch(e){case"UPDATE":if(!a)break;this.addEmoteToSet(s,i.value);break;case"ADD":this.addEmoteToSet(s,i.value);break;case"REMOVE":this.removeEmoteFromSet(s,o);break}}this.reloadSet(s)}reloadSet(n){if(!this.settings.get("addon.seventv_emotes.personal_emotes")){const i=this.setToUsersMap.get(n);if(i?.size)for(const o of i)this.chat.getUser(o).removeSet("addon.seventv_emotes",this.getSetID(n));this.emotes.unloadSet(this.getSetID(n),!0,!0);return}const e=this.settings.get("addon.seventv_emotes.unlisted_emotes"),t=this.getPersonalSet(n),s=[];for(const[,i]of Object.entries(t.emotes))if(e||!this.seventv_emotes.isEmoteUnlisted(i)){const o=this.seventv_emotes.convertEmote(i);if(!o)continue;s.push(o)}if(s.length){const i={title:t.name,source:"7TV",icon:this.setIcon,personal:!0,sort:50,emotes:s};this.emotes.loadSetData(this.getSetID(n),i,!0)}return!0}getEmoteFromSet(n,e){const t=this.getPersonalSet(n);return t?.emotes?t.emotes[e]:null}addEmoteToSet(n,e){if(!e?.data?.state?.includes("PERSONAL"))return!1;const s=this.getPersonalSet(n);return s.emotes[e.id]=e,!0}removeEmoteFromSet(n,e){const t=this.getPersonalSet(n);return t.emotes[e]?(delete t.emotes[e],!0):!1}};g(l,"PersonalEmotes");let c=l},1363:(m,h,u)=>{"use strict";u.r(h),u.d(h,{default:()=>l});const c={DISPATCH:0,HELLO:1,HEARTBEAT:2,RECONNECT:4,ACK:5,ERROR:6,END_OF_STREAM:7,IDENTIFY:33,RESUME:34,SUBSCRIBE:35,UNSUBSCRIBE:36,SIGNAL:37,BRIDGE:38},v=class v extends FrankerFaceZ.utilities.module.Module{constructor(...e){super(...e),this.inject("chat"),this.inject("settings"),this.inject("site"),this.injectAs("siteChat","site.chat"),this.injectAs("stv_api","..api"),this.injectAs("emotes","..emotes"),this.injectAs("personal_emotes","..personal-emotes"),this.injectAs("nametag_paints","..nametag-paints"),this.injectAs("badges","..badges"),this.injectAs("avatars","..avatars"),this.settings.add("addon.seventv_emotes.update_messages",{default:!0,ui:{path:"Add-Ons > 7TV Emotes >> Emotes > Live Emote Updates",title:"Show update messages",description:"Show messages in chat when emotes are updated in the current channel.",component:"setting-check-box"}}),this.OPCODES=c,this.socket=!1,this._socket_buffer=[],this._connected=!1,this._connecting=!1,this._connect_attempts=0,this._session_id="",this._last_presence_at=0,this._user_id=!1,this._active_channel_set=!1,this._subscriptions={},this._rooms={}}onEnable(){this.on("chat:room-add",this.roomAdd),this.on("chat:room-remove",this.roomRemove),this.on("chat:receive-message",this.onReceiveMessage),this.get7TVUserData()}iterateRooms(){for(const e of this.chat.iterateRooms())e&&this.roomAdd(e)}async get7TVUserData(){const e=this.site.getUser();if(e){const t=await this.stv_api.user.fetchUserData(e.id);this._user_id=t?.user?.id||!1}this.connect()}onReceiveMessage(e){if(!this._user_id)return;const t=this.site.getUser();if(!t)return;const s=e.message.user.id;t.id===s&&this.sendPresences(!1,e.message.roomID)}sendPresences(e=!1,t=void 0){if(this._user_id&&!(this._last_presence_at&&this._last_presence_at>Date.now()-1e4)){if(this._last_presence_at=Date.now(),t){this.stv_api.user.updateUserPresences(this._user_id,t,e,this._session_id);return}for(const s of this.chat.iterateRooms())s&&this.stv_api.user.updateUserPresences(this._user_id,s.id,e,this._session_id);this._last_presence_at=Date.now()}}async roomAdd(e){if(!e)return;this._rooms[e.id]={};const t=await this.stv_api.emotes.fetchChannelEmotes(e.id);if(t?.emote_set?.id){this._rooms[e.id]=t;const s=t.emote_set.id;this._active_channel_set=s,this.subscribe("emote_set.update",{object_id:s}),this.subscribe("user.*",{object_id:t.user.id})}this.subscribe("emote_set.*",{ctx:"channel",id:e.id,platform:"TWITCH"}),this.subscribe("cosmetic.*",{ctx:"channel",id:e.id,platform:"TWITCH"}),this.subscribe("entitlement.*",{ctx:"channel",id:e.id,platform:"TWITCH"}),this._user_id&&this.sendPresences(!0,e.id)}roomRemove(e){if(!e)return;const t=this._rooms[e.id];t&&(t?.emote_set?.id&&(this.unsubscribe("emote_set.update",{object_id:t.emote_set.id}),this.unsubscribe("user.*",{object_id:t.user.id})),this.unsubscribe("emote_set.*",{ctx:"channel",id:e.id,platform:"TWITCH"}),this.unsubscribe("cosmetic.*",{ctx:"channel",id:e.id,platform:"TWITCH"}),this.unsubscribe("entitlement.*",{ctx:"channel",id:e.id,platform:"TWITCH"}),this.unsubscribe("user.*",{ctx:"channel",id:e.id,platform:"TWITCH"}),delete this._rooms[e.id])}addChatNotice(e,t,s=!0){this.settings.get("addon.seventv_emotes.update_messages")&&this.siteChat.addNotice(e.login,{message:t,icon:new URL("https://cdn2.frankerfacez.com/static/addons/7tv-emotes/logo.png"),tokenize:s})}onMessage({op:e,d:t}){if(e===c.HELLO){if(this._session_id=t.session_id,this._socket_buffer.length){for(const s of this._socket_buffer)this._emitSocket(s);this._socket_buffer=[]}this.iterateRooms()}else if(e===c.DISPATCH){const{type:s,body:i}=t;if(s==="emote_set.update")i.id===this._active_channel_set?this.emotes.handleChannelEmoteUpdate(i):this.personal_emotes.updateSet(i);else if(s==="emote_set.create"){const{id:o,name:a}=i.object;this.personal_emotes.createPersonalSet(o,a)}else if(s==="cosmetic.create"){const{kind:o,data:a}=i.object;o==="PAINT"?this.nametag_paints.updatePaintStyle(a):o==="BADGE"&&this.badges.addBadge(a)}else if(s==="entitlement.create"){const o=i.object;o?.kind==="PAINT"?this.nametag_paints.setUserPaint(o):o?.kind==="BADGE"?this.badges.addUserBadge(o):o?.kind==="EMOTE_SET"&&this.personal_emotes.grantSetToUser(o)}else if(s==="entitlement.delete"){const o=i.object;o?.kind==="PAINT"?this.nametag_paints.deleteUserPaint(o):o?.kind==="BADGE"&&this.badges.removeUserBadge(o)}else if(s==="user.update"){if(!i.updated?.length)return;for(const o of i.updated)for(const a of o.value)if(a.key==="emote_set"){const d=a.old_value,r=a.value,f=this.emotes.getChannelBySetID(d.id,r.id);if(!f)continue;this.unsubscribe("emote_set.update",{object_id:d.id}),this.subscribe("emote_set.update",{object_id:r.id}),this._active_channel_set=r.id,this.emotes.updateChannelSet(f,r.id),this.addChatNotice(f,`${i.actor.display_name} updated the active emote set to ${r.name}`)}}else this.log.debug(`Type '${s}' not implemented.`,i)}else if(e===c.ACK){const{command:s,data:i}=t;if(s==="SUBSCRIBE"){const o=this.findSubscription(i.type,i.condition);if(!o)return;o._acked=!0}}}connect(e=!1){this._connected||this._connecting||(this._connecting=!0,e||this.log.info("Socket: Connecting to socket server..."),this.socket=new WebSocket("wss://events.7tv.io/v3?app=ffz&version=1.4.30"),this.socket.onopen=()=>{e||this.log.info("Socket: Connected to socket server."),this._connected=!0,this._connecting=!1,this._connect_attempts=0},this.socket.onerror=()=>{this.log.error("Socket: Error from socket server."),this.reconnect()},this.socket.onclose=t=>{if(!this._connected||!this.socket)return;const s=t.code===4012;s||(this.log.info("Socket: Lost connection to socket server...",t),this._connect_attempts++),this._subscriptions={},this._rooms={},this.reconnect(s)},this.socket.onmessage=t=>{let s;try{s=JSON.parse(t.data)}catch(i){this.log.error("Socket: Error parsing message",i)}this.onMessage(s)})}reconnect(e=!1){this.disconnect(),e||this.log.info("Socket: Trying to reconnect to socket server...");const t=Math.max(0,Math.random()*(Math.pow(2,this._connect_attempts)-1)*3e3);this._connect_attempts++,setTimeout(()=>{this.connect(e)},t)}disconnect(){if(this.socket)try{this.socket.close()}catch{}delete this.socket,this._connected=!1,this._connecting=!1}disconnectInternal(){this.disconnect(),this.log.info("Socket: Disconnected from socket server.")}emitSocket(e){if(!this._connected||!this.socket){this._socket_buffer.push(e);return}this._emitSocket(e)}_emitSocket(e){this.socket?.send(JSON.stringify(e))}isSubscribed(e,t){const s=this._subscriptions[e];return!s||!s.length?!1:s.some(i=>Object.entries(t).every(([o,a])=>i.condition[o]===a))}findSubscription(e,t){const s=this._subscriptions[e];return!s||!s.length?null:t?s.find(i=>Object.entries(t).every(([o,a])=>i.condition[o]===a))??null:s}subscribe(e,t){this.findSubscription(e,t)||(this.emitSocket({op:c.SUBSCRIBE,d:{type:e,condition:t}}),Array.isArray(this._subscriptions[e])||(this._subscriptions[e]=[]),this._subscriptions[e].push({condition:t}))}unsubscribe(e,t=void 0){const s=this.findSubscription(e,t);if(!s||!s._acked)return;const i={type:e,condition:t};this.emitSocket({op:c.UNSUBSCRIBE,d:i}),t?this._subscriptions[e]=this._subscriptions[e].filter(o=>o!==s):this._subscriptions[e]=[]}};g(v,"Socket");let l=v},6058:(m,h,u)=>{var c={"./api.js":810,"./avatars.js":6721,"./badges.js":1542,"./emotes.js":3833,"./nametag-paints.js":9535,"./personal-emotes.js":9102,"./socket.js":1363};function l(n){var e=v(n);return u(e)}g(l,"webpackContext");function v(n){if(!u.o(c,n)){var e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e}return c[n]}g(v,"webpackContextResolve"),l.keys=g(function(){return Object.keys(c)},"webpackContextKeys"),l.resolve=v,m.exports=l,l.id=6058}},b={};function _(m){var h=b[m];if(h!==void 0)return h.exports;var u=b[m]={exports:{}};return S[m](u,u.exports,_),u.exports}g(_,"__webpack_require__"),_.d=(m,h)=>{for(var u in h)_.o(h,u)&&!_.o(m,u)&&Object.defineProperty(m,u,{enumerable:!0,get:h[u]})},_.o=(m,h)=>Object.prototype.hasOwnProperty.call(m,h),_.r=m=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(m,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(m,"__esModule",{value:!0})};var k={};(()=>{const h=class h extends FrankerFaceZ.utilities.addon.Addon{constructor(...c){super(...c),this.inject("addons"),this.addonID=this.name.replace(/^addon\./,""),this.manifest=this.addons.getAddon(this.addonID)}async onLoad(){const c=await _(6058);await this.loadFromContext(c)}onEnable(){for(const c of Object.values(this.children))c.enable()}};g(h,"SevenTVEmotes");let m=h;m.register("7tv-emotes",null,"1.4.30")})()})();})();

//# sourceMappingURL=script.js.map