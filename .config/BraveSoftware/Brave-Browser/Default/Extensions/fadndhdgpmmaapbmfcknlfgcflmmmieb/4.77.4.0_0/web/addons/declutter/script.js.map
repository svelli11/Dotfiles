{"version":3,"file":"declutter/script.js","mappings":"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","sources":["webpack://ffz-addons/./src/declutter/constants.js","webpack://ffz-addons/./src/declutter/logic.jsx","webpack://ffz-addons/./src/declutter/index.jsx"],"sourcesContent":["\"use strict\";\n\nexport const DEFAULT_SETTINGS = {\n  enabled: false,\n  similarity_threshold: 80,\n  repetitions_threshold: 3,\n  ignore_mods: true,\n  force_enable_when_mod: false,\n  cache_ttl: 30,\n};\n","\"use strict\";\nimport { DEFAULT_SETTINGS } from \"./constants\";\n\n/**\n * This addon is toggled on/off by the index addon (or enabled by default via setting),\n *  and performs the actual chat filtering.\n */\nexport default class Logic extends Addon {\n  cache = new Map(); // message -> [expiry timestamp]\n  cacheEvictionTimer;\n  chatContext;\n  RepetitionCounter;\n  userId;\n\n  constructor(...args) {\n    super(...args);\n    this.inject(\"chat\");\n    this.inject(\"settings\");\n    this.inject(\"site\");\n    this.chatContext = this.chat.context;\n    this.userId = this.site?.getUser()?.id;\n    this.cacheTtl =\n      (this.settings.get(\"addon.declutter.cache_ttl\") ??\n        DEFAULT_SETTINGS.cache_ttl) * 1000;\n  }\n\n  /**\n   * Calculates the degree of similarity of 2 strings based on Dices Coefficient\n   * @param {string} first  First string for comparison\n   * @param {string} second Second string for comparison\n   * @returns {number} Degree of similarity in the range [0,1]\n   * @see Original source code {@link https://github.com/aceakash/string-similarity}, MIT License\n   */\n  compareTwoStrings = (first, second) => {\n    first = first.replace(/\\s+/g, \"\");\n    second = second.replace(/\\s+/g, \"\");\n    if (!first.length && !second.length) return 1;\n    if (!first.length || !second.length) return 0;\n    if (first === second) return 1;\n    if (first.length === 1 && second.length === 1) {\n      return first === second ? 1 : 0;\n    }\n    if (first.length < 2 || second.length < 2) return 0;\n    const firstBigrams = new Map();\n    for (let i = 0; i < first.length - 1; i++) {\n      const bigram = first.substring(i, i + 2);\n      const count = firstBigrams.has(bigram) ? firstBigrams.get(bigram) + 1 : 1;\n      firstBigrams.set(bigram, count);\n    }\n    let intersectionSize = 0;\n    for (let i = 0; i < second.length - 1; i++) {\n      const bigram = second.substring(i, i + 2);\n      const count = firstBigrams.has(bigram) ? firstBigrams.get(bigram) : 0;\n      if (count > 0) {\n        firstBigrams.set(bigram, count - 1);\n        intersectionSize++;\n      }\n    }\n    return (2.0 * intersectionSize) / (first.length + second.length - 2);\n  };\n\n  checkRepetitionAndCache = (message) => {\n    const simThreshold =\n      this.settings.get(\"addon.declutter.similarity_threshold\") ??\n      DEFAULT_SETTINGS.similarity_threshold;\n    const repThreshold =\n      this.settings.get(\"addon.declutter.repetitions_threshold\") ??\n      DEFAULT_SETTINGS.repetitions_threshold;\n    let n = 0;\n    for (const [msg, timestamps] of this.cache) {\n      if (simThreshold === 100) {\n        if (message.toLowerCase() === msg.toLowerCase()) {\n          n += timestamps?.length ?? 1;\n        }\n      } else if (\n        this.compareTwoStrings(message.toLowerCase(), msg.toLowerCase()) >\n        simThreshold / 100\n      ) {\n        n += timestamps?.length ?? 1;\n      }\n      if (n >= repThreshold) {\n        break;\n      }\n    }\n    const existing = this.cache.get(message) ?? [];\n    this.cache.set(message, [...existing, Date.now() + this.cacheTtl]);\n    this.log.debug(\"(\" + n + \"): \" + message);\n    return n;\n  };\n\n  onEnable = () => {\n    this.log.debug(\"Enabling Declutterer\");\n    this.updateConstants();\n    this.chat.context.on(\n      \"changed:addon.declutter.cache_ttl\",\n      this.updateConstants,\n      this\n    );\n    this.on(\"chat:receive-message\", this.handleMessage, this);\n  };\n\n  updateConstants = () => {\n    // Note any new value for cache TTL won't be picked up until re-enable\n    this.cache_ttl = this.chat.context.get(\"addon.declutter.cache_ttl\");\n    // Cache eviction will happen 10x per TTL, at least once every 10s, max once per second\n    this.startCacheEvictionTimer(\n      Math.min(Math.max(1, Math.floor(this.cache_ttl / 10)), 10)\n    );\n  };\n\n  onDisable = () => {\n    this.log.debug(\"Disabling Declutterer\");\n    this.off(\"chat:receive-message\", this.handleMessage, this);\n    if (this.cacheEvictionTimer) {\n      clearInterval(this.cacheEvictionTimer);\n    }\n    this.cache = new Map();\n  };\n\n  startCacheEvictionTimer = (intervalSeconds) => {\n    if (this.cacheEvictionTimer) {\n      clearInterval(this.cacheEvictionTimer);\n    }\n    this.cacheEvictionTimer = setInterval(() => {\n      this.log.debug(\"Running cache eviction cycle\");\n      for (const [msg, timestamps] of this.cache) {\n        const futureTimestamps =\n          timestamps?.filter((time) => time > Date.now()) ?? [];\n        if (futureTimestamps.length === 0) {\n          this.cache.delete(msg);\n        } else {\n          this.cache.set(msg, futureTimestamps);\n        }\n      }\n    }, intervalSeconds * 1000);\n  };\n\n  handleMessage = (event) => {\n    if (!event.message || event.defaultPrevented) return;\n    if (\n      this.chatContext &&\n      this.chatContext.get(\"context.moderator\") &&\n      !this.settings.get(\"addon.declutter.force_enable_when_mod\")\n    )\n      return;\n    const msg = event.message;\n    if (msg.ffz_removed || msg.deleted || !msg.ffz_tokens) return;\n    if (\n      this.settings.get(\"addon.declutter.ignore_mods\") &&\n      (msg.badges.moderator || msg.badges.broadcaster)\n    )\n      return;\n    if (msg.user && this.userId && msg.user.id == this.userId) {\n      // Always show the user's own messages\n      return;\n    }\n    if (!msg.repetitionCount && msg.repetitionCount !== 0) {\n      msg.repetitionCount = this.checkRepetitionAndCache(msg.message);\n    }\n    const repThreshold =\n      this.settings.get(\"addon.declutter.repetitions_threshold\") ??\n      DEFAULT_SETTINGS.repetitions_threshold;\n    if (msg.repetitionCount >= repThreshold) {\n      // Hide messages matching our filter\n      event.preventDefault();\n    }\n  };\n}\n","\"use strict\";\nconst { createElement } = FrankerFaceZ.utilities.dom;\nimport Logic from \"./logic\";\nimport { DEFAULT_SETTINGS } from \"./constants\";\n\n/**\n * This index addon file is responsible for user settings and\n *  enables/disables the chat filtering \"logic\" addon.\n */\nclass Declutter extends Addon {\n  constructor(...args) {\n    super(...args);\n    this.toggleEnabled = this.toggleEnabled.bind(this);\n    this.inject(\"chat\");\n    this.inject(\"settings\");\n    this.inject(\"site.fine\"); // this.fine\n    this.inject(\"i18n\");\n    this.register(\"logic\", Logic, true); // name, module, inject_reference\n\n    this.settings.add(\"addon.declutter.enabled\", {\n      default: DEFAULT_SETTINGS.enabled,\n      ui: {\n        path: \"Add-Ons > Declutterer >> General Settings\",\n        title: \"Enable by Default\",\n        description:\n          \"Enable add-on by default. Otherwise, enable the add-on per channel via the toggle button next to chat settings\",\n        component: \"setting-check-box\",\n      },\n    });\n\n    this.settings.add(\"addon.declutter.similarity_threshold\", {\n      default: DEFAULT_SETTINGS.similarity_threshold,\n      ui: {\n        path: \"Add-Ons > Declutterer >> Filter Settings\",\n        title: \"Similarity threshold in %\",\n        description:\n          \"Minimum similarity between 2 messages to count them as repetitions\",\n        component: \"setting-text-box\",\n        process: \"to_int\",\n        bounds: [0, 100],\n      },\n    });\n\n    this.settings.add(\"addon.declutter.repetitions_threshold\", {\n      default: DEFAULT_SETTINGS.repetitions_threshold,\n      ui: {\n        path: \"Add-Ons > Declutterer >> Filter Settings\",\n        title: \"Repetition threshold\",\n        description: \"Amount of repetitions before the message is marked\",\n        component: \"setting-text-box\",\n        process: \"to_int\",\n        bounds: [0],\n      },\n    });\n\n    this.settings.add(\"addon.declutter.ignore_mods\", {\n      default: DEFAULT_SETTINGS.ignore_mods,\n      ui: {\n        path: \"Add-Ons > Declutterer >> Mod Settings\",\n        title: \"Ignore mods\",\n        description: \"Do not limit messages by mods or the broadcaster\",\n        component: \"setting-check-box\",\n      },\n    });\n\n    this.settings.add(\"addon.declutter.force_enable_when_mod\", {\n      default: DEFAULT_SETTINGS.force_enable_when_mod,\n      ui: {\n        path: \"Add-Ons > Declutterer >> Mod Settings\",\n        title: \"Force enabled when Moderator\",\n        description: \"Force filtering even in channels you are a moderator in\",\n        component: \"setting-check-box\",\n      },\n    });\n\n    this.settings.add(\"addon.declutter.cache_ttl\", {\n      default: DEFAULT_SETTINGS.cache_ttl,\n      ui: {\n        path: \"Add-Ons > Declutterer >> Cache Settings\",\n        title: \"Cache TTL\",\n        description:\n          \"Amount of seconds for messages to stay in the cache. A long TTL leads to high RAM usage, especially in bigger channels\",\n        component: \"setting-text-box\",\n        process: \"to_int\",\n        bounds: [1],\n      },\n    });\n\n    // workaround: logic starts enabled by default, which breaks checkEnabled()\n    this.logic.disable();\n\n    this.set_enabled = null;\n    this.ChatInput = this.fine.define(\"chat-input\");\n    this.logic.on(\":enabled\", this.updateButtons, this);\n    this.logic.on(\":disabled\", this.updateButtons, this);\n  }\n\n  onEnable() {\n    this.chat.context.on(\n      \"changed:addon.declutter.enabled\",\n      this.checkEnabled,\n      this\n    );\n    this.checkEnabled();\n    this.ChatInput.on(\"mount\", this.updateButton, this);\n    this.ChatInput.on(\"update\", this.updateButton, this);\n    this.updateButtons();\n  }\n\n  async onDisable() {\n    await this.logic.disable();\n    for (const inst of this.ChatInput.instances) {\n      this.removeButton(inst);\n    }\n    this.ChatInput.off(\"mount\", this.updateButton, this);\n    this.ChatInput.off(\"update\", this.updateButton, this);\n  }\n\n  checkEnabled() {\n    const enabled =\n      this.set_enabled ?? this.chat.context.get(\"addon.declutter.enabled\");\n    if (enabled && !this.logic.enabled) {\n      this.logic.enable();\n    } else if (!enabled && this.logic.enabled) {\n      this.logic.disable();\n    }\n  }\n\n  updateButtons() {\n    if (this.ChatInput) {\n      if (this.enabling || this.enabled) {\n        for (const inst of this.ChatInput.instances) {\n          this.updateButton(inst);\n        }\n      }\n    }\n  }\n\n  toggleEnabled() {\n    this.set_enabled = !this.logic.enabled;\n    this.checkEnabled();\n  }\n\n  // Button tooltips piggyback on any PrattleNot internationalisation text\n  updateButton(inst) {\n    const node = this.fine.getHostNode(inst);\n    if (!node) {\n      return;\n    }\n    if (!inst._ffz_declutter_button) {\n      inst._ffz_declutter_button = (\n        <div class=\"tw-relative ffz-il-tooltip__container\">\n          <button\n            class={`tw-border-radius-medium tw-button-icon--primary ffz-core-button \n\t\t\t\t\t\t\ttw-inline-flex tw-interactive tw-justify-content-center \n\t\t\t\t\t\t\ttw-overflow-hidden tw-relative tw-button-icon`}\n            onclick={this.toggleEnabled}\n          >\n            <span class=\"tw-button-icon__icon\">\n              {(inst._ffz_declutter_icon = <figure class=\"ffz-i-zreknarf\" />)}\n            </span>\n          </button>\n          <div class=\"ffz-il-tooltip ffz-il-tooltip--up ffz-il-tooltip--align-right\">\n            {this.i18n\n              .t(\"addon.pn.button.title\", \"Toggle Declutterer\")\n              .replace(\"PrattleNot\", \"Declutterer\")}\n            {(inst._ffz_declutter_enabled_tip = <div></div>)}\n          </div>\n        </div>\n      );\n    }\n    if (!node.contains(inst._ffz_declutter_button)) {\n      const container = node.querySelector(\n        \".chat-input__buttons-container > div:last-child\"\n      );\n      if (container) {\n        container.insertBefore(\n          inst._ffz_declutter_button,\n          container.firstChild\n        );\n      }\n    }\n    inst._ffz_declutter_icon.className = this.logic.enabled\n      ? \"ffz-i-chat\"\n      : \"ffz-i-chat-empty\";\n    inst._ffz_declutter_enabled_tip.classList.toggle(\n      \"tw-mg-t-1\",\n      this.logic.enabled\n    );\n    inst._ffz_declutter_enabled_tip.textContent = this.logic.enabled\n      ? this.i18n\n          .t(\n            \"addon.pn.button.enabled\",\n            \"Declutterer is currently enabled. Click to disable.\"\n          )\n          .replace(\"PrattleNot\", \"Declutterer\")\n      : null;\n  }\n\n  removeButton(inst) {\n    if (inst._ffz_declutter_button) {\n      inst._ffz_declutter_button.remove();\n      inst._ffz_declutter_button = null;\n      inst._ffz_declutter_enabled_tip = null;\n    }\n  }\n}\n\nDeclutter.register();\n"],"names":["DEFAULT_SETTINGS","args","first","second","firstBigrams","i","bigram","count","intersectionSize","message","simThreshold","repThreshold","n","msg","timestamps","existing","intervalSeconds","futureTimestamps","time","event","Logic","createElement","inst","enabled","node","container","Declutter"],"sourceRoot":""}