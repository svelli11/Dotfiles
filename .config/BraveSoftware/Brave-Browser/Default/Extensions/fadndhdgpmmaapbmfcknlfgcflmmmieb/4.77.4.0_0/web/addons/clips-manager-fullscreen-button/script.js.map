{"version":3,"file":"clips-manager-fullscreen-button/script.js","mappings":"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","sources":["webpack://ffz-addons/webpack/bootstrap","webpack://ffz-addons/webpack/runtime/global","webpack://ffz-addons/webpack/runtime/publicPath","webpack://ffz-addons/./src/clips-manager-fullscreen-button/style.scss","webpack://ffz-addons/./src/clips-manager-fullscreen-button/index.jsx"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../\";","export default __webpack_public_path__ + \"clips-manager-fullscreen-button/style.css\";","'use strict';\n\nimport CSS_URL from './style.scss';\n\nconst { createElement } = FrankerFaceZ.utilities.dom;\n\nclass ClipsManagerFullscreenButton extends Addon {\n    constructor ( ...args ) {\n        super( ...args );\n\n        this.eventListenerCallbacks = {\n            detectClipsManager:   this.detectClipsManager.bind( this ),\n            detectClipRowClick:   this.detectClipRowClick.bind( this ),\n            fullscreenHotkey:     this.fullscreenHotkey.bind( this ),\n            swapFullscreenButton: this.swapFullscreenButton.bind( this )\n        };\n\n        this.inject( 'site.router' );\n    }\n\n    detectClipsManager( route, _match ) {\n        let isClipsManager = false;\n\n        if ( ! route ) {\n            isClipsManager = location.hostname === 'dashboard.twitch.tv' && location.pathname.toLowerCase().includes( '/content/clips/' );\n        } else {\n            isClipsManager = route.name === 'dash-clips';\n        }\n\n        if ( isClipsManager ) {\n            this.activateFunctionality();\n        } else {\n            this.deactivateFunctionality();\n        }\n\n        return isClipsManager;\n    }\n\n    insertCSS() {\n        if ( ! this.clipsManagerFullscreenButtonCSS ) {\n            this.clipsManagerFullscreenButtonCSS = document.createElement( 'link' );\n            \n            this.clipsManagerFullscreenButtonCSS.rel  = 'stylesheet';\n            this.clipsManagerFullscreenButtonCSS.id   = 'ffz-clips-manager-fullscreen-button-css';\n            this.clipsManagerFullscreenButtonCSS.href = CSS_URL;\n        }\n\n        document.head.appendChild( this.clipsManagerFullscreenButtonCSS );\n    }\n\n    removeCSS() {\n        this.clipsManagerFullscreenButtonCSS?.remove();\n    }\n\n    activeStatusMessage( addonStatus ) {\n        if ( addonStatus === 'active' ) {\n            this.log.info( 'Clips Manager Fullscreen Button add-on is currently active.' );\n        } else if ( addonStatus === 'inactive' ) {\n            this.log.info( 'Clips Manager Fullscreen Button add-on is currently inactive: you are not currently viewing the Clips Manager.' );\n        }\n    }\n\n    activateFunctionality() {\n        this.insertCSS();\n\n        this.pageContent = document.querySelector( '.sunlight-default-root__root-wrapper' );\n\n        this.pageContent?.addEventListener( 'click', this.eventListenerCallbacks.detectClipRowClick );\n\n        document.addEventListener( 'fullscreenchange', this.eventListenerCallbacks.swapFullscreenButton );\n\n        document.addEventListener( 'keypress', this.eventListenerCallbacks.fullscreenHotkey );\n\n        this.addFullscreenButton();\n\n        this.activeStatusMessage( 'active' );\n    }\n\n    deactivateFunctionality() {\n        this.removeCSS();\n\n        this.pageContent?.removeEventListener( 'click', this.eventListenerCallbacks.detectClipRowClick );\n\n        document.removeEventListener( 'fullscreenchange', this.eventListenerCallbacks.swapFullscreenButton );\n\n        document.removeEventListener( 'keypress', this.eventListenerCallbacks.fullscreenHotkey );\n\n        this.removeFullscreenButton();\n\n        this.activeStatusMessage( 'inactive' );\n    }\n\n    detectClipRowClick( _e ) {\n        window.setTimeout( this.addFullscreenButton.bind( this ), 500 );\n    }\n\n    requestFullscreen( e ) {\n        e?.stopPropagation();\n\n        if ( this.clipsPlayer ) {\n            if ( ! this.playerIsFullscreen() ) {\n                this.clipsPlayer.requestFullscreen();\n            } else {\n                document.exitFullscreen();\n            }\n        }\n    }\n\n    addFullscreenButton( _e ) {\n        this.clipsPlayer        = this.pageContent?.querySelector( '.clips-player-container' );\n        this.fullscreenSVGPaths = {\n            enter: ( <path d=\"M7 3H2v5h2V5h3V3zm11 5V3h-5v2h3v3h2zm-5 9v-2h3v-3h2v5h-5zm-9-5H2v5h5v-2H4v-3z\"></path> ),\n            exit: ( <path d=\"M8 8V3H6v3H2v2h6zm4 0h6V6h-4V3h-2v5zm0 9v-5h6v2h-4v3h-2zm-4-5H2v2h4v3h2v-5z\"></path> )\n        };\n\n        if ( ! this.clipsPlayer?.contains( this.fullscreenButton ) ) {\n            this.playerBackground = this.clipsPlayer?.querySelector( '.clips-player-background' );\n            this.fullscreenButton = (\n                <div class=\"ffz-cmfb-clips-player-right-controls\">\n                    <div class=\"ffz-cmfb-clips-player-fullscreen-button-contain\" aria-label=\"fullscreen-button\">\n                        <button class=\"ffz-cmfb-clips-player-fullscreen-button\" aria-label=\"Fullscreen (f)\" aria-haspopup=\"menu\" data-a-target=\"player-fullscreen-button\" onClick={ this.requestFullscreen.bind( this ) }>\n                            <div class=\"ffz-cmfb-clips-player-fullscreen-button-inner\">\n                                <div class=\"tw-svg\">\n                                    <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" focusable=\"false\" aria-hidden=\"true\" role=\"presentation\">\n                                        {this.fullscreenSVGPaths.enter}\n                                    </svg>\n                                </div>\n                            </div>\n                        </button>\n                    </div>\n                </div>\n            );\n\n            this.playerBackground?.append( this.fullscreenButton );\n        }\n    }\n\n    removeFullscreenButton() {\n        this.fullscreenButton?.remove();\n    }\n\n    playerIsFullscreen() {\n        return document.fullscreenElement === this.clipsPlayer;\n    }\n\n    swapFullscreenButton( _e ) {\n        const fullscreenSVGPath =  this.fullscreenButton.querySelector( 'path' );\n\n        if (  ! this.playerIsFullscreen() ) {\n            fullscreenSVGPath.replaceWith( this.fullscreenSVGPaths.enter );\n        } else {\n            fullscreenSVGPath.replaceWith( this.fullscreenSVGPaths.exit );\n        }\n    }\n\n    fullscreenHotkey( e ) {\n        if ( e.key === 'f' ) {\n            this.log.info( e );\n            if ( [ 'text', 'search' ].includes( e.target.type ) || document.querySelector( '.ReactModalPortal .ReactModal__Overlay' ) ) {\n                return;\n            }\n\n            this.requestFullscreen();\n        }\n    }\n\n    onDisable() {\n        this.router.off( ':route', this.eventListenerCallbacks.detectClipsManager );\n\n        this.deactivateFunctionality();\n\n        this.log.info( 'Clips Manager Fullscreen Button add-on has been successfully disabled.' );\n    }\n\n    onEnable() {\n        this.router.on( ':route', this.eventListenerCallbacks.detectClipsManager );\n\n        if ( this.detectClipsManager() ) {\n            this.activateFunctionality();\n\n        } else {\n            this.deactivateFunctionality();\n        }\n\n        this.log.info( 'Clips Manager Fullscreen Button add-on has been successfully enabled.' );\n    }\n}\n\nClipsManagerFullscreenButton.register();\n"],"names":["__webpack_require__","scriptUrl","document","scripts","createElement","args","route","_match","isClipsManager","addonStatus","_e","fullscreenSVGPath","ClipsManagerFullscreenButton"],"sourceRoot":""}