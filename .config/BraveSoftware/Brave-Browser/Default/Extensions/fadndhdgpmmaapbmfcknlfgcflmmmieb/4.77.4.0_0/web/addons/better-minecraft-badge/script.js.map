{"version":3,"file":"better-minecraft-badge/script.js","mappings":"oGAAA,MAAM,EAAN,MAAM,UAAwB,kCAAM,CACnC,eAAeA,EAAM,CACpB,MAAM,GAAGA,CAAI,EACb,KAAK,OAAO,aAAa,EAEzB,KAAK,QAAU,yCACf,KAAK,YAAc,+CACnB,KAAK,iBAAmB,IACzB,CAEA,UAAW,CACV,KAAK,oBAAsB,KAAK,OAAO,mBACvC,KAAK,OAAO,mBAAqB,CAACC,KAAWD,IAAS,CAErD,GAAI,CACH,KAAK,yBAAyBC,CAAM,EACpCA,EAAS,KAAK,aAAaA,EAAQ,KAAK,QAAS,KAAK,WAAW,CAClE,OAASC,EAAG,CACX,KAAK,IAAI,MAAMA,CAAC,CACjB,CACA,KAAK,oBAAoBD,EAAQ,GAAGD,CAAI,CACzC,EAGI,KAAK,YAAY,KAAK,OAAO,IAAM,KAAK,aAAe,KAAK,OAAO,eACtE,KAAK,OAAO,mBAAmB,KAAK,OAAO,aAAa,CAE1D,CAEA,WAAY,CACX,KAAK,OAAO,mBAAqB,KAAK,oBACtC,MAAMC,EAAS,KAAK,aAAa,KAAK,OAAO,cAAe,KAAK,QAAS,KAAK,gBAAgB,EAC/F,KAAK,OAAO,mBAAmBA,CAAM,CACtC,CAEA,YAAYE,EAASC,EAAY,KAAM,CACtC,MAAMH,EAASG,GAAa,KAAK,OAAO,eAAiB,CAAC,EAE1D,GAAI,CAACH,GAAU,OAAO,KAAKA,CAAM,EAAE,SAAW,EAAG,OAAO,KAExD,IAAII,EAIJ,OAHI,MAAM,QAAQJ,CAAM,EAAGI,EAAcJ,EAAO,KAAKK,GAAQA,EAAK,QAAUH,CAAO,EAC9EE,EAAcJ,EAAOE,CAAO,EAAE,CAAC,EAE/BE,GAAa,QAEXA,EAAY,QAAQ,MAAM,EAAG,EAAE,EAFJ,IAGnC,CAEA,yBAAyBD,EAAY,KAAM,CAC1C,GAAI,KAAK,iBAAkB,OAE3B,MAAMG,EAAW,KAAK,YAAY,KAAK,QAASH,CAAS,EACrDG,IAAU,KAAK,iBAAmBA,EACvC,CAEA,aAAaN,EAAQE,EAASK,EAAa,CAC1C,GAAI,MAAM,QAAQP,CAAM,GAAKA,GAAQ,OAAQ,CAC5C,MAAMQ,EAAiB,KAAK,MAAM,KAAK,UAAUR,CAAM,CAAC,EAElDI,EAAcI,EAAe,KAAKH,GAAQA,EAAK,QAAUH,CAAO,EAEtE,YAAK,oBAAoBE,EAAaG,CAAW,EAC1CC,CACR,SAAWR,EAAOE,CAAO,EAAG,CAC3B,MAAME,EAAcJ,EAAOE,CAAO,EAAE,CAAC,EAErC,YAAK,oBAAoBE,EAAaG,CAAW,EAC1CP,CACR,CACD,CAEA,oBAAoBS,EAAOC,EAAY,CACjCD,IACLA,EAAM,QAAU,GAAGC,CAAU,KAC7BD,EAAM,QAAU,GAAGC,CAAU,KAC7BD,EAAM,QAAU,GAAGC,CAAU,IAAIA,EAAW,SAAS,sBAAsB,EAAI,IAAM,GAAG,GACzF,CACD,EA9EoC,uBAApC,IAAMC,EAAN,EAgFAA,EAAgB,SAAS,sC","sources":["webpack://ffz-addons/./src/better-minecraft-badge/index.js"],"sourcesContent":["class BetterMineBadge extends Addon {\n\tconstructor(...args) {\n\t\tsuper(...args);\n\t\tthis.inject('chat.badges');\n\n\t\tthis.idBadge = 'minecraft-15th-anniversary-celebration';\n\t\tthis.newBadgeUrl = 'https://cdn.frankerfacez.com/emoticon/753195';\n\t\tthis.originalBadgeUrl = null;\n\t}\n\n\tonEnable() {\n\t\tthis._updateTwitchBadges = this.badges.updateTwitchBadges;\n\t\tthis.badges.updateTwitchBadges = (badges, ...args) => {\n\t\t\t// We guarantee that if the code breaks, it will not break the FFZ API\n\t\t\ttry {\n\t\t\t\tthis.rememberOriginalBadgeUrl(badges);\n\t\t\t\tbadges = this.replaceBadge(badges, this.idBadge, this.newBadgeUrl);\n\t\t\t} catch (e) {\n\t\t\t\tthis.log.error(e);\n\t\t\t}\n\t\t\tthis._updateTwitchBadges(badges, ...args);\n\t\t};\n\n\t\t// If we didnâ€™t have time to replace the function before calling it, we call it ourselves\n\t\tif (this.getBadgeUrl(this.idBadge) !== this.newBadgeUrl && this.badges.twitch_badges) {\n\t\t\tthis.badges.updateTwitchBadges(this.badges.twitch_badges);\n\t\t}\n\t}\n\n\tonDisable() {\n\t\tthis.badges.updateTwitchBadges = this._updateTwitchBadges;\n\t\tconst badges = this.replaceBadge(this.badges.twitch_badges, this.idBadge, this.originalBadgeUrl);\n\t\tthis.badges.updateTwitchBadges(badges);\n\t}\n\n\tgetBadgeUrl(idBadge, badgesSet = null) {\n\t\tconst badges = badgesSet || this.badges.twitch_badges || {};\n\n\t\tif (!badges || Object.keys(badges).length === 0) return null;\n\n\t\tlet targetBadge;\n\t\tif (Array.isArray(badges)) targetBadge = badges.find(item => item.setID === idBadge);\n\t\telse targetBadge = badges[idBadge][1];\n\n\t\tif (!targetBadge?.image1x) return null;\n\n\t\treturn targetBadge.image1x.slice(0, -2); // remove '/1'\n\t}\n\n\trememberOriginalBadgeUrl(badgesSet = null) {\n\t\tif (this.originalBadgeUrl) return;\n\n\t\tconst badgeUrl = this.getBadgeUrl(this.idBadge, badgesSet);\n\t\tif (badgeUrl) this.originalBadgeUrl = badgeUrl;\n\t}\n\n\treplaceBadge(badges, idBadge, newBadgeUrl) {\n\t\tif (Array.isArray(badges) && badges?.length) {\n\t\t\tconst newBadgesArray = JSON.parse(JSON.stringify(badges)); // avoid only-read\n\n\t\t\tconst targetBadge = newBadgesArray.find(item => item.setID === idBadge);\n\n\t\t\tthis._replaceBadgeImages(targetBadge, newBadgeUrl);\n\t\t\treturn newBadgesArray;\n\t\t} else if (badges[idBadge]) {\n\t\t\tconst targetBadge = badges[idBadge][1];\n\n\t\t\tthis._replaceBadgeImages(targetBadge, newBadgeUrl);\n\t\t\treturn badges;\n\t\t}\n\t}\n\n\t_replaceBadgeImages(badge, newBaseUrl) {\n\t\tif (!badge) return;\n\t\tbadge.image1x = `${newBaseUrl}/1`;\n\t\tbadge.image2x = `${newBaseUrl}/2`;\n\t\tbadge.image4x = `${newBaseUrl}/${newBaseUrl.includes('cdn.frankerfacez.com') ? '4' : '3'}`;\n\t}\n}\n\nBetterMineBadge.register();\n"],"names":["args","badges","e","idBadge","badgesSet","targetBadge","item","badgeUrl","newBadgeUrl","newBadgesArray","badge","newBaseUrl","BetterMineBadge"],"sourceRoot":""}