{"version":3,"file":"thehitless-badges/script.js","mappings":"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","sources":["webpack://ffz-addons/./src/thehitless-badges/index.jsx"],"sourcesContent":["// TheHitless Badge Addon\n\nconst {createElement, setChildren} = FrankerFaceZ.utilities.dom;\nconst {Mutex} = FrankerFaceZ.utilities.object;\n\nfunction get(endpoint, options) {\n\treturn fetch(`https://thehitless.com/api/${endpoint}`, options).then(resp => resp.ok ? resp.json() : null);\n}\n\nclass TheHitlessBadges extends Addon {\n\tconstructor(...args) {\n\t\tsuper(...args);\n\n\t\tthis.inject('chat');\n\t\tthis.inject('chat.badges');\n\n\t\tthis.waiting = new Mutex(4);\n\n\t\tthis.thbadges = {};\n\t\tthis.users = new Map;\n\t}\n\n\tasync onEnable() {\n\t\tconst process = this.onMessage.bind(this);\n\n\t\tawait this.loadTHBadges()\n\t\t\t.then(() => this.buildBadges());\n\n\t\t\t\n\t\tthis.on('site.channel:update-bar', this.updateChannelTHBadge, this);\n\n\t\tthis.chat.addTokenizer({\n\t\t\ttype: 'thehitless-badges',\n\t\t\tprocess\n\t\t});\n\n\t\tthis.emit('chat:update-lines');\n\t}\n\n\tonDisable() {\n\t\tthis.removeBadges();\n\t\tthis.chat.removeTokenizer('thehitless-badges');\n\t\tthis.emit('chat:update-lines');\n\t}\n\n\tonMessage(tokens, msg) {\n\t\tconst user = msg?.user,\n\t\t\tlogin = user?.login;\n\n\t\tif ( login ) {\n\t\t\tconst ret = this.getUser(user.userID);\n\t\t\tif ( ret instanceof Promise )\n\t\t\t\tret.then(ext => {\n\t\t\t\t\tif ( ! ext || !ext.userId)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tconst badge = ext.userId.badge;\n\t\t\t\t\tif(badge){\n\t\t\t\t\t\tconst badgeId = `addon-thehitless-badges-${badge}`;\n\t\t\t\t\t\tthis.chat.getUser(user.id, login).addBadge('thehitless-badges', badgeId);\n\t\t\t\t\t\tthis.emit('chat:update-lines-by-user', user.id, login, false, true);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\treturn tokens;\n\t}\n\n\tgetUser(login, multiple_waits = false) {\n\t\tconst cache = this.users.get(login);\n\t\tif ( cache ) {\n\t\t\tif ( ! cache.done ) {\n\t\t\t\tif ( multiple_waits )\n\t\t\t\t\treturn cache.promise;\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif ( Date.now() <= cache.time + 300000 )\n\t\t\t\treturn cache.value;\n\t\t}\n\n\t\tif ( this.load_wait )\n\t\t\treturn this.load_wait.then(() => this.getUser(login, multiple_waits));\n\n\t\tconst promise = this.waiting.wait()\n\t\t\t.then(done => this._getUser(login)\n\t\t\t\t.then(value => {\n\t\t\t\t\tthis.users.set(login, {\n\t\t\t\t\t\tdone: true,\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\ttime: Date.now()\n\t\t\t\t\t});\n\n\t\t\t\t\treturn value;\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tthis.users.set(login, {\n\t\t\t\t\t\tdone: true,\n\t\t\t\t\t\tvalue: null,\n\t\t\t\t\t\ttime: Date.now()\n\t\t\t\t\t});\n\t\t\t\t\tthrow err;\n\t\t\t\t})\n\t\t\t\t.finally(done));\n\n\t\tthis.users.set(login, {\n\t\t\tdone: false,\n\t\t\tpromise\n\t\t});\n\n\t\treturn promise;\n\t}\n\n\tasync _getUser(token) {\n\t\tconst data = await get(`users/browser-ext/${token}`);\n\t\tif ( ! data.userId )\n\t\t\treturn null;\n\n\t\treturn data;\n\t}\n\n\tasync loadTHBadges() {\n\t\tconst data = await get('badges');\n\t\tthis.thbadges = {};\n\t\tif ( ! data )\n\t\t\treturn;\n\n\t\tconst obj = data.reduce((acc, item) => {\n\t\t\tacc[item._id] = {\n\t\t\t\t...item,\n\t\t\t};\n\t\t\treturn acc;\n\t\t\t}, {})\n\n\t\tthis.thbadges = obj;\n\t}\n\n\tclearUserData() {\n\t\tfor(const user of this.chat.iterateUsers())\n\t\t\tuser.removeAllBadges('thehitless-badges');\n\n\t\tthis.users.clear();\n\t}\n\n\n\tupdateBadge(badge) {\n\t\tconst badgeId = `addon-thehitless-badges-${badge._id}`;\n\n\t\tconst badgeData = {\n\t\t\tid: badgeId,\n\t\t\ttooltipExtra: () => {\n\t\t\t\tif (!badge.name) return;\n\n\t\t\t\treturn `\\nTheHitless Badge - ${badge.name}`;\n\t\t\t},\n\t\t\tslot: 333,\n\t\t\timage: badge.url,\n\t\t\turls: {\n\t\t\t\t1: badge.url,\n\t\t\t\t2: badge.url,\n\t\t\t\t3: badge.url,\n\t\t\t\t4: badge.url,\n\t\t\t},\n\t\t\tsvg: false,\n\t\t\tclick_url: `https://thehitless.com/`,\n\t\t};\n\t\tthis.badges.loadBadgeData(badgeId, badgeData);\n\t\treturn badgeId;\n\t}\n\n\t\n\tbuildBadges() {\n\t\tconst old_badges = this.old_badges;\n\n\t\tfor(const [_id, badge] of Object.entries(this.thbadges)) {\n\t\t\tif ( old_badges && old_badges.has(_id) )\n\t\t\t\told_badges.delete(_id);\n\t\t\telse\n\t\t\t\tthis.updateBadge(badge);\n\t\t}\n\n\t\tif ( old_badges )\n\t\t\tfor(const _id of old_badges){\n\t\t\t\tconst badgeId = `addon-thehitless-badges-${_id}`;\n\t\t\t\tthis.badges.removeBadge(badgeId, false);\n\n\t\t\t}\n\n\t\tthis.old_badges = new Set(Object.keys(this.thbadges));\n\t\tthis.badges.buildBadgeCSS();\n\t}\n\n\tremoveBadges() {\n\t\tfor(const key of Object.keys(this.thbadges)) {\n\t\t\tconst badgeId = `addon-thehitless-badges-${key}`;\n\n\t\t\tthis.badges.removeBadge(badgeId, false);\n\t\t}\n\n\t\tthis.old_badges = new Set();\n\t\tthis.badges.buildBadgeCSS();\n\t}\n}\n\nTheHitlessBadges.register();"],"names":["createElement","setChildren","Mutex","get","endpoint","options","resp","args","process","tokens","msg","user","login","ret","ext","badge","badgeId","multiple_waits","cache","promise","done","value","err","token","data","obj","acc","item","badgeData","old_badges","_id","key","TheHitlessBadges"],"sourceRoot":""}