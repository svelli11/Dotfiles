{"version":3,"file":"repetition-detector/script.js","mappings":"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","sources":["webpack://ffz-addons/./src/repetition-detector/index.jsx"],"sourcesContent":["'use strict'\n\nclass RepetitionDetector extends Addon {\n\n\tcache = new Map();\n\n\tcacheEvictionTimer = null;\n\n\tconstructor(...args) {\n\t\tsuper(...args);\n\t\tthis.inject('chat');\n\n\t\tthis.settings.add('addon.repetition_detector.similarity_threshold', {\n\t\t\tdefault: 80,\n\t\t\tui: {\n\t\t\t\tpath: 'Add-Ons > Chat Repetition Detector >> General Settings',\n\t\t\t\ttitle: 'Similarity threshold in %',\n\t\t\t\tdescription: 'Minimum similarity between 2 messages to count them as repetitions',\n\t\t\t\tcomponent: 'setting-text-box',\n\t\t\t\tprocess: 'to_int',\n\t\t\t\tbounds: [0, 100]\n\t\t\t}\n\t\t});\n\n\t\tthis.settings.add('addon.repetition_detector.repetitions_threshold', {\n\t\t\tdefault: 2,\n\t\t\tui: {\n\t\t\t\tpath: 'Add-Ons > Chat Repetition Detector >> General Settings',\n\t\t\t\ttitle: 'Repetition threshold',\n\t\t\t\tdescription: 'Amount of repetitions before the message is marked',\n\t\t\t\tcomponent: 'setting-text-box',\n\t\t\t\tprocess: 'to_int',\n\t\t\t\tbounds: [0]\n\t\t\t}\n\t\t});\n\n\t\tthis.settings.add('addon.repetition_detector.ignore_mods', {\n\t\t\tdefault: true,\n\t\t\tui: {\n\t\t\t\tpath: 'Add-Ons > Chat Repetition Detector >> General Settings',\n\t\t\t\ttitle: 'Ignore mods',\n\t\t\t\tdescription: 'Do not check messages by mods or the broadcaster',\n\t\t\t\tcomponent: 'setting-check-box'\n\t\t\t}\n\t\t});\n\t\tthis.settings.add('addon.repetition_detector.enable_only_as_mod', {\n\t\t\tdefault: true,\n\t\t\tui: {\n\t\t\t\tpath: 'Add-Ons > Chat Repetition Detector >> General Settings',\n\t\t\t\ttitle: 'Only as Moderator',\n\t\t\t\tdescription: 'Enable only in channels you are a moderator in',\n\t\t\t\tcomponent: 'setting-check-box'\n\t\t\t}\n\t\t});\n\n\t\tthis.settings.add('addon.repetition_detector.cache_ttl', {\n\t\t\tdefault: 600,\n\t\t\tui: {\n\t\t\t\tpath: 'Add-Ons > Chat Repetition Detector >> Cache Settings',\n\t\t\t\ttitle: 'Cache TTL',\n\t\t\t\tdescription: 'Amount of seconds for messages to stay in the cache. A long TTL leads to high RAM usage, especially in bigger channels',\n\t\t\t\tcomponent: 'setting-text-box',\n\t\t\t\tprocess: 'to_int',\n\t\t\t\tbounds: [1]\n\t\t\t},\n\t\t\t//Cache eviction will happen 10x per TTL, at least once every 10s, max once per second\n\t\t\tchanged: () => this.startCacheEvictionTimer(Math.min(Math.floor(this.settings.get('addon.repetition_detector.cache_ttl')/10), 10))\n\t\t});\n\n\t\tthis.settings.add('addon.repetition_detector.text_color', {\n\t\t\tdefault: '#FF0000',\n\t\t\tui: {\n\t\t\t\tpath: 'Add-Ons > Chat Repetition Detector >> Style',\n\t\t\t\ttitle: 'Text Color',\n\t\t\t\tdescription: 'Text color used to display repetitions in chat',\n\t\t\t\tcomponent: 'setting-color-box'\n\t\t\t}\n\t\t});\n\n\t\tthis.settings.addUI('addon.repetition_detector.pad-bottom', {\n\t\t\tpath: 'Add-Ons > Chat Repetition Detector',\n\t\t\tsort: 1000,\n\t\t\tcomponent: 'setting-spacer',\n\t\t\ttop: '30rem',\n\t\t\tforce_seen: true\n\t\t});\n\n\t\tconst chatContext = this.chat.context;\n\n\t\tconst checkRepetitionAndCache = (username, message) => {\n\t\t\tconst cacheTtl = this.settings.get('addon.repetition_detector.cache_ttl') * 1000;\n\t\t\tconst simThreshold = this.settings.get('addon.repetition_detector.similarity_threshold');\n\t\t\tif(this.cache.has(username)) {\n\t\t\t\tthis.cache.get(username).expire = Date.now() + cacheTtl;\n\t\t\t\tlet n = 1;\n\t\t\t\tconst messagesInCache = this.cache.get(username).messages;\n\t\t\t\tfor(let i = 0; i < messagesInCache.length; i++) {\n\t\t\t\t\tif(compareTwoStrings(message, messagesInCache[i].msg) > simThreshold / 100) {\n\t\t\t\t\t\tn++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.cache.get(username).messages.push({msg: message, expire: Date.now() + cacheTtl});\n\t\t\t\treturn n;\n\t\t\t} else {\n\t\t\t\tthis.cache.set(username, {\n\t\t\t\t\tmessages:[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmsg: message, expire: Date.now() + cacheTtl\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\texpire: Date.now() + cacheTtl\n\t\t\t\t});\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\n\t\tconst RepetitionCounter = {\n\t\t\ttype: 'repetition_counter',\n\t\t\tpriority: -1000,\n\n\t\t\trender(token, createElement) {\n\t\t\t\tif (!token.repetitionCount)\n\t\t\t\t\treturn null;\n\n\t\t\t\tconst textColor = this.settings.get('addon.repetition_detector.text_color');\n\t\t\t\treturn (<span style={{'color': textColor, 'margin-left': '1.5rem'}}>{`x${token.repetitionCount}`}</span>)\n\t\t\t},\n\n\t\t\tprocess(tokens, msg) {\n\n\t\t\t\tif(!msg.message || msg.message === '') return tokens; // ignore the message if its empty\n\n\t\t\t\t// ignore the message if is configured to it\n\t\t\t\tif(!chatContext.get('context.moderator') &&\n\t\t\t\t\t\tthis.settings.get('addon.repetition_detector.enable_only_as_mod')) return tokens;\n\t\t\t\tif(this.settings.get('addon.repetition_detector.ignore_mods') &&\n\t\t\t\t\t\t(msg.badges.moderator || msg.badges.broadcaster)) return tokens;\n\t\t\t\t// counts the message repetition\n\t\t\t\tif(!msg.repetitionCount && msg.repetitionCount !== 0) {\n\t\t\t\t\tmsg.repetitionCount = checkRepetitionAndCache(msg.user.id, msg.message);\n\t\t\t\t}\n\t\t\t\t// if the message repetition count is higher than the threthold, updates the repetition count\n\t\t\t\tif(msg.repetitionCount >= this.settings.get('addon.repetition_detector.repetitions_threshold')) {\n\t\t\t\t\ttokens.push({\n\t\t\t\t\t\ttype: 'repetition_counter',\n\t\t\t\t\t\trepetitionCount: msg.repetitionCount\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn tokens;\n\t\t\t}\n\t\t}\n\n\t\tthis.chat.addTokenizer(RepetitionCounter);\n\n\t}\n\n\tonEnable() {\n\t\tthis.log.info('Enabled!');\n\t\t//Cache eviction will happen 10x per TTL, at least once every 10s, max once per second\n\t\tthis.startCacheEvictionTimer(Math.min(Math.floor(this.settings.get('addon.repetition_detector.cache_ttl')/10), 10));\n\t}\n\n\tstartCacheEvictionTimer(intervalSeconds) {\n\t\tif(this.cacheEvictionTimer) {\n\t\t\tclearInterval(this.cacheEvictionTimer);\n\t\t}\n\t\tthis.cacheEvictionTimer = setInterval(() => {\n\t\t\tthis.log.debug('Running cache eviction cycle');\n\t\t\tfor(const [username, val] of this.cache) {\n\t\t\t\tif(val.expire < Date.now()) {\n\t\t\t\t\tthis.cache.delete(username);\n\t\t\t\t} else {\n\t\t\t\t\tval.messages = val.messages.filter(msg => msg.expire > Date.now());\n\t\t\t\t\tif(val.messages.length === 0) {\n\t\t\t\t\t\tthis.cache.delete(username);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, intervalSeconds * 1000);\n\t}\n\n\tonDisable() {\n\t\tif(this.cacheEvictionTimer) {\n\t\t\tclearInterval(this.cacheEvictionTimer);\n\t\t}\n\t\tthis.cache.clear();\n\t}\n\n\n}\nRepetitionDetector.register();\n\n/**\n * Calculates the degree of similarity of 2 strings based on Dices Coefficient\n * @param {string} first  First string for comparison\n * @param {string} second Second string for comparison\n * @returns {number} Degree of similarity in the range [0,1]\n * @see Original source code {@link https://github.com/aceakash/string-similarity}, MIT License\n */\nfunction compareTwoStrings(first, second) {\n\tfirst = first.replace(/\\s+/g, '')\n\tsecond = second.replace(/\\s+/g, '')\n\n\tif (!first.length && !second.length) return 1;\n\tif (!first.length || !second.length) return 0;\n\tif (first === second) return 1;\n\tif (first.length === 1 && second.length === 1)\n\t\treturn first === second ? 1 : 0;\n\tif (first.length < 2 || second.length < 2) return 0;\n\n\tconst firstBigrams = new Map();\n\tfor (let i = 0; i < first.length - 1; i++) {\n\t\tconst bigram = first.substring(i, i + 2);\n\t\tconst count = firstBigrams.has(bigram) ? firstBigrams.get(bigram) + 1 : 1;\n\n\t\tfirstBigrams.set(bigram, count);\n\t}\n\n\tlet intersectionSize = 0;\n\tfor (let i = 0; i < second.length - 1; i++) {\n\t\tconst bigram = second.substring(i, i + 2);\n\t\tconst count = firstBigrams.has(bigram) ? firstBigrams.get(bigram) : 0;\n\n\t\tif (count > 0) {\n\t\t\tfirstBigrams.set(bigram, count - 1);\n\t\t\tintersectionSize++;\n\t\t}\n\t}\n\n\treturn (2.0 * intersectionSize) / (first.length + second.length - 2);\n}"],"names":["args","chatContext","checkRepetitionAndCache","username","message","cacheTtl","simThreshold","n","messagesInCache","i","compareTwoStrings","RepetitionCounter","token","createElement","textColor","tokens","msg","intervalSeconds","val","RepetitionDetector","first","second","firstBigrams","bigram","count","intersectionSize"],"sourceRoot":""}