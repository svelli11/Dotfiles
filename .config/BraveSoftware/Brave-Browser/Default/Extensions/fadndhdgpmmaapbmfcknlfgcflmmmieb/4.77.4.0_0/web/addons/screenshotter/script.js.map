{"version":3,"file":"screenshotter/script.js","mappings":"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","sources":["webpack://ffz-addons/./src/screenshotter/index.js"],"sourcesContent":["const { createElement } = FrankerFaceZ.utilities.dom\nconst { isValidShortcut } = FrankerFaceZ.utilities.object\n\nconst BAD_SHORTCUTS = [\n\t'f',\n\t'space',\n\t'k',\n\t'shift+up',\n\t'shift+down',\n\t'esc',\n\t'm',\n\t'?',\n\t'alt+t',\n\t'alt+x'\n]\n\nclass Screenshotter extends Addon {\n\tconstructor(...args) {\n\t\tsuper(...args)\n\n\t\tthis.inject('site.fine')\n\t\tthis.inject('site.player')\n\t\tthis.inject('site.web_munch')\n\t\tthis.inject('settings') // Who knows bro\n\n\t\tthis.onShortcut = this.onShortcut.bind(this)\n\n\t\tthis.settingsNamespace = 'addon.screenshotter'\n\n\t\tthis.settings.add(`${this.settingsNamespace}.copy`, {\n\t\t\tdefault: true,\n\t\t\tui: {\n\t\t\t\tpath: 'Add-Ons > Screenshotter >> Behavior',\n\t\t\t\ttitle: 'Copy to clipboard',\n\t\t\t\tdescription: 'Enable this to copy the screenshot to the clipboard (if supported by your browser).',\n\t\t\t\tcomponent: 'setting-check-box'\n\t\t\t}\n\t\t});\n\n\t\tthis.settings.add(`${this.settingsNamespace}.download`, {\n\t\t\tdefault: false,\n\t\t\tui: {\n\t\t\t\tpath: 'Add-Ons > Screenshotter >> Behavior',\n\t\t\t\ttitle: 'Save as file',\n\t\t\t\tdescription: 'Enable this if you wish to download the screenshot as a file.',\n\t\t\t\tcomponent: 'setting-check-box'\n\t\t\t}\n\t\t});\n\n\t\tthis.settings.add(`${this.settingsNamespace}.shortcut`, {\n\t\t\tdefault: 'ctrl+alt+shift+q',\n\t\t\tui: {\n\t\t\t\tpath: 'Add-Ons > Screenshotter >> Behavior',\n\t\t\t\ttitle: 'Shortcut Key',\n\t\t\t\tdescription: 'This key sequence can be used to take a screenshot.',\n\t\t\t\tcomponent: 'setting-hotkey'\n\t\t\t},\n\t\t\tchanged: () => {\n\t\t\t\tthis.updateShortcut()\n\t\t\t\tthis.updateButtons()\n\t\t\t}\n\t\t})\n\t}\n\n\tonEnable() {\n\t\tthis.on('site.player:update-gui', this.updateButton, this)\n\n\t\tthis.updateButtons()\n\t\tthis.updateShortcut()\n\t\tthis.createTooltip()\n\t}\n\n\tonDisable() {\n\t\tthis.destroyButtons()\n\t\tthis.destroyTooltip()\n\t}\n\n\tcreateTooltip() {\n\t\tif (this.tooltip) this.destroyTooltip()\n\n\t\tthis.tooltip = document.createElement('span')\n\t\tthis.tooltip.id = 'ffz-screenshotter-tooltip'\n\t\tthis.tooltip.style = `\n\t\t\tcolor: var(--color-text-pill);\n\t\t\tbackground-color: var(--color-background-pill-subtle);\n\t\t\tdisplay: inline-block;\n\t\t\tposition: absolute;\n\t\t\tright: 15px;\n\t\t\tbottom: 45px;\n\t\t\tline-height: initial;\n\t\t\ttext-align: center;\n\t\t\twhite-space: nowrap;\n\t\t\tborder-radius: 1000px;\n\t\t\tpadding: 0.3rem 0.8em;\n\t\t\tfont-weight: bold;\n\t\t\topacity: 0;\n\t\t\tpointer-events: none;\n\n\t\t\ttransition: opacity .1s;\n\t\t`\n\t\tthis.tooltip.textContent = 'Copied to clipboard!'\n\n\t\tconst parent = document.querySelector('div.video-player')\n\t\tparent.appendChild(this.tooltip)\n\t}\n\n\tshowTooltip() {\n\t\tthis.tooltip.style.opacity = 1\n\t\tsetTimeout(() => {\n\t\t\tthis.tooltip.style.opacity = 0\n\t\t}, 2000)\n\t}\n\n\tdestroyTooltip() {\n\t\tthis.tooltip?.remove()\n\t}\n\n\tdestroyButtons() {\n\t\tfor (const inst of this.player.Player.instances) {\n\t\t\tthis.destroyButton(inst)\n\t\t}\n\t}\n\n\tdestroyButton(inst) {\n\t\tconst button = document.querySelector('.ffz--player-screenshotter')\n\t\tbutton?.remove()\n\t}\n\n\tupdateShortcut() {\n\t\tconst Mousetrap = this.Mousetrap = this.Mousetrap || this.web_munch.getModule('mousetrap') || window.Mousetrap\n\t\tif (!Mousetrap || !Mousetrap.bind)\n\t\t\treturn\n\n\t\tif (this._shortcut_bound) {\n\t\t\tMousetrap.unbind(this._shortcut_bound)\n\t\t\tthis._shortcut_bound = null\n\t\t}\n\n\t\tconst key = this.settings.get(`${this.settingsNamespace}.shortcut`)\n\t\tif (key && isValidShortcut(key)) {\n\t\t\tMousetrap.bind(key, this.onShortcut)\n\t\t\tthis._shortcut_bound = key\n\t\t}\n\t}\n\n\tupdateButtons() {\n\t\tfor (const inst of this.player.Player.instances) {\n\t\t\tthis.updateButton(inst)\n\t\t}\n\t}\n\n\t// TODO: more robust check for clips vs streams\n\tisClip(video) {\n\t\treturn video.src?.includes('.clips.twitchcdn')\n\t}\n\n\tupdateButton(inst) {\n\t\tconst outer = inst.props.containerRef || this.fine.getChildNode(inst)\n\t\tconst container = outer?.querySelector?.(this.player.RIGHT_CONTROLS || '.video-player__default-player .player-controls__right-control-group')\n\t\tconst button = container?.querySelector('.ffz--player-screenshotter')\n\n\t\tconst video = outer?.querySelector('video')\n\t\tif (!video || !container) return\n\n\t\tif (button) button.remove()\n\t\tif (this.isClip(video)) return // We don't work with clips\n\n\t\tlet icon, tip, btn, cont = container.querySelector('.ffz--player-screenshotter')\n\n\t\tcont = (<div class=\"ffz--player-screenshotter tw-inline-flex tw-relative ffz-il-tooltip__container\">\n\t\t\t{btn = (<button\n\t\t\t\tclass=\"tw-align-items-center tw-align-middle tw-border-bottom-left-radius-medium tw-border-bottom-right-radius-medium tw-border-top-left-radius-medium tw-border-top-right-radius-medium tw-button-icon tw-button-icon--overlay ffz-core-button ffz-core-button--border ffz-core-button--overlay tw-inline-flex tw-interactive tw-justify-content-center tw-overflow-hidden tw-relative\"\n\t\t\t\ttype=\"button\"\n\t\t\t\tdata-a-target=\"ffz-player-screenshotter-button\"\n\t\t\t\tonClick={this.onButtonClick.bind(this, inst)} // eslint-disable-line react/jsx-no-bind\n\t\t\t>\n\t\t\t\t<div class=\"tw-align-items-center tw-flex tw-flex-grow-0\">\n\t\t\t\t\t<div class=\"tw-button-icon__icon\">\n\t\t\t\t\t\t{icon = (<figure class=\"ffz-fa-photo ffz-i-camera\" />)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</button>)}\n\t\t\t{tip = (<div class=\"ffz-il-tooltip ffz-il-tooltip--align-right ffz-il-tooltip--up\" role=\"tooltip\" />)}\n\t\t</div>)\n\n\t\tconst thing = container.querySelector('button[data-a-target=\"player-fullscreen-button\"]')\n\t\tif (thing) {\n\t\t\tcontainer.insertBefore(cont, thing.parentElement)\n\t\t} else {\n\t\t\tcontainer.appendChild(cont)\n\t\t}\n\n\t\tlet label = 'Take screenshot'\n\n\t\tconst key = this.settings.get(`${this.settingsNamespace}.shortcut`)\n\t\tif (key && isValidShortcut(key))\n\t\t\tlabel = `${label} (${key})`\n\n\t\tbtn.setAttribute('aria-label', label)\n\t\ttip.textContent = label\n\t}\n\n\tonShortcut() {\n\t\tthis.takeScreenshot()\n\t}\n\n\tonButtonClick() {\n\t\tthis.takeScreenshot()\n\t}\n\n\tsaveToClipboard(blob) {\n\t\ttry {\n\t\t\tnavigator.clipboard.write([\n\t\t\t\tnew ClipboardItem({\n\t\t\t\t\t'image/png': blob\n\t\t\t\t})\n\t\t\t])\n\n\t\t\tthis.showTooltip()\n\t\t} catch (err) {\n\t\t\tthis.log.error('Clipboard is not accessible, saving to file instead', err)\n\t\t\tthis.saveToFile(blob)\n\t\t}\n\t}\n\n\tsaveToFile(blob) {\n\t\ttry {\n\t\t\tconst nickname = document.querySelector('h1.tw-title')\n\n\t\t\tconst now = new Date()\n\t\t\tconst currentTime = `${now.toDateString()}_${now.toLocaleTimeString()}`\n\n\t\t\tconst link = document.createElement('a')\n\t\t\tlink.href = URL.createObjectURL(blob)\n\t\t\tlink.download = `${nickname.textContent ?? 'stream'}_${currentTime}.png`.replaceAll(' ', '-')\n\t\t\tlink.click()\n\t\t\tURL.revokeObjectURL(link.href)\n\t\t} catch (err) {\n\t\t\tthis.log.error('Save to file was unsuccessful', err)\n\t\t}\n\t}\n\n\ttakeScreenshot() {\n\t\tconst video = document.querySelector('video')\n\t\tif (!video || this.isClip(video)) return\n\n\t\tconst canvas = document.createElement('canvas')\n\t\tconst context = canvas.getContext('2d')\n\n\t\tcanvas.width = video.videoWidth\n\t\tcanvas.height = video.videoHeight\n\n\t\tcontext.drawImage(video, 0, 0, canvas.width, canvas.height)\n\n\t\tcanvas.toBlob((blob) => {\n\t\t\tconst shouldDownload = this.settings.get(`${this.settingsNamespace}.download`);\n\t\t\tconst shouldCopy = this.settings.get(`${this.settingsNamespace}.copy`);\n\t\t\n\t\t\tif (!shouldDownload && !shouldCopy) return this.saveToClipboard(blob);\n\t\t\n\t\t\tif (shouldDownload) {\n\t\t\t\tthis.saveToFile(blob);\n\t\t\t}\n\t\t\n\t\t\tif (shouldCopy) {\n\t\t\t\tif (shouldDownload) {\n\t\t\t\t\t// use a timeout or some mechanism to delay clipboard copy after download\n\t\t\t\t\tsetTimeout(() => this.saveToClipboard(blob), 100);\n\t\t\t\t} else {\n\t\t\t\t\tthis.saveToClipboard(blob);\n\t\t\t\t}\n\t\t\t}\n\t\t});\t\t\n\n\t\tcanvas.remove()\n\t}\n}\n\nScreenshotter.register()\n"],"names":["createElement","isValidShortcut","BAD_SHORTCUTS","args","inst","Mousetrap","key","video","outer","container","button","icon","tip","btn","cont","thing","label","blob","err","nickname","now","currentTime","link","canvas","context","shouldDownload","shouldCopy","Screenshotter"],"sourceRoot":""}