{"version":3,"file":"496.js","mappings":"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","sources":["webpack://ffz-addons/./node_modules/.pnpm/reconnecting-websocket@4.4.0/node_modules/reconnecting-websocket/dist/reconnecting-websocket-mjs.js"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nfunction __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\n\nvar Event = /** @class */ (function () {\r\n    function Event(type, target) {\r\n        this.target = target;\r\n        this.type = type;\r\n    }\r\n    return Event;\r\n}());\r\nvar ErrorEvent = /** @class */ (function (_super) {\r\n    __extends(ErrorEvent, _super);\r\n    function ErrorEvent(error, target) {\r\n        var _this = _super.call(this, 'error', target) || this;\r\n        _this.message = error.message;\r\n        _this.error = error;\r\n        return _this;\r\n    }\r\n    return ErrorEvent;\r\n}(Event));\r\nvar CloseEvent = /** @class */ (function (_super) {\r\n    __extends(CloseEvent, _super);\r\n    function CloseEvent(code, reason, target) {\r\n        if (code === void 0) { code = 1000; }\r\n        if (reason === void 0) { reason = ''; }\r\n        var _this = _super.call(this, 'close', target) || this;\r\n        _this.wasClean = true;\r\n        _this.code = code;\r\n        _this.reason = reason;\r\n        return _this;\r\n    }\r\n    return CloseEvent;\r\n}(Event));\n\n/*!\r\n * Reconnecting WebSocket\r\n * by Pedro Ladaria <pedro.ladaria@gmail.com>\r\n * https://github.com/pladaria/reconnecting-websocket\r\n * License MIT\r\n */\r\nvar getGlobalWebSocket = function () {\r\n    if (typeof WebSocket !== 'undefined') {\r\n        // @ts-ignore\r\n        return WebSocket;\r\n    }\r\n};\r\n/**\r\n * Returns true if given argument looks like a WebSocket class\r\n */\r\nvar isWebSocket = function (w) { return typeof w !== 'undefined' && !!w && w.CLOSING === 2; };\r\nvar DEFAULT = {\r\n    maxReconnectionDelay: 10000,\r\n    minReconnectionDelay: 1000 + Math.random() * 4000,\r\n    minUptime: 5000,\r\n    reconnectionDelayGrowFactor: 1.3,\r\n    connectionTimeout: 4000,\r\n    maxRetries: Infinity,\r\n    maxEnqueuedMessages: Infinity,\r\n    startClosed: false,\r\n    debug: false,\r\n};\r\nvar ReconnectingWebSocket = /** @class */ (function () {\r\n    function ReconnectingWebSocket(url, protocols, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        this._listeners = {\r\n            error: [],\r\n            message: [],\r\n            open: [],\r\n            close: [],\r\n        };\r\n        this._retryCount = -1;\r\n        this._shouldReconnect = true;\r\n        this._connectLock = false;\r\n        this._binaryType = 'blob';\r\n        this._closeCalled = false;\r\n        this._messageQueue = [];\r\n        /**\r\n         * An event listener to be called when the WebSocket connection's readyState changes to CLOSED\r\n         */\r\n        this.onclose = null;\r\n        /**\r\n         * An event listener to be called when an error occurs\r\n         */\r\n        this.onerror = null;\r\n        /**\r\n         * An event listener to be called when a message is received from the server\r\n         */\r\n        this.onmessage = null;\r\n        /**\r\n         * An event listener to be called when the WebSocket connection's readyState changes to OPEN;\r\n         * this indicates that the connection is ready to send and receive data\r\n         */\r\n        this.onopen = null;\r\n        this._handleOpen = function (event) {\r\n            _this._debug('open event');\r\n            var _a = _this._options.minUptime, minUptime = _a === void 0 ? DEFAULT.minUptime : _a;\r\n            clearTimeout(_this._connectTimeout);\r\n            _this._uptimeTimeout = setTimeout(function () { return _this._acceptOpen(); }, minUptime);\r\n            _this._ws.binaryType = _this._binaryType;\r\n            // send enqueued messages (messages sent before websocket open event)\r\n            _this._messageQueue.forEach(function (message) { return _this._ws.send(message); });\r\n            _this._messageQueue = [];\r\n            if (_this.onopen) {\r\n                _this.onopen(event);\r\n            }\r\n            _this._listeners.open.forEach(function (listener) { return _this._callEventListener(event, listener); });\r\n        };\r\n        this._handleMessage = function (event) {\r\n            _this._debug('message event');\r\n            if (_this.onmessage) {\r\n                _this.onmessage(event);\r\n            }\r\n            _this._listeners.message.forEach(function (listener) { return _this._callEventListener(event, listener); });\r\n        };\r\n        this._handleError = function (event) {\r\n            _this._debug('error event', event.message);\r\n            _this._disconnect(undefined, event.message === 'TIMEOUT' ? 'timeout' : undefined);\r\n            if (_this.onerror) {\r\n                _this.onerror(event);\r\n            }\r\n            _this._debug('exec error listeners');\r\n            _this._listeners.error.forEach(function (listener) { return _this._callEventListener(event, listener); });\r\n            _this._connect();\r\n        };\r\n        this._handleClose = function (event) {\r\n            _this._debug('close event');\r\n            _this._clearTimeouts();\r\n            if (_this._shouldReconnect) {\r\n                _this._connect();\r\n            }\r\n            if (_this.onclose) {\r\n                _this.onclose(event);\r\n            }\r\n            _this._listeners.close.forEach(function (listener) { return _this._callEventListener(event, listener); });\r\n        };\r\n        this._url = url;\r\n        this._protocols = protocols;\r\n        this._options = options;\r\n        if (this._options.startClosed) {\r\n            this._shouldReconnect = false;\r\n        }\r\n        this._connect();\r\n    }\r\n    Object.defineProperty(ReconnectingWebSocket, \"CONNECTING\", {\r\n        get: function () {\r\n            return 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket, \"OPEN\", {\r\n        get: function () {\r\n            return 1;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket, \"CLOSING\", {\r\n        get: function () {\r\n            return 2;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket, \"CLOSED\", {\r\n        get: function () {\r\n            return 3;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"CONNECTING\", {\r\n        get: function () {\r\n            return ReconnectingWebSocket.CONNECTING;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"OPEN\", {\r\n        get: function () {\r\n            return ReconnectingWebSocket.OPEN;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"CLOSING\", {\r\n        get: function () {\r\n            return ReconnectingWebSocket.CLOSING;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"CLOSED\", {\r\n        get: function () {\r\n            return ReconnectingWebSocket.CLOSED;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"binaryType\", {\r\n        get: function () {\r\n            return this._ws ? this._ws.binaryType : this._binaryType;\r\n        },\r\n        set: function (value) {\r\n            this._binaryType = value;\r\n            if (this._ws) {\r\n                this._ws.binaryType = value;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"retryCount\", {\r\n        /**\r\n         * Returns the number or connection retries\r\n         */\r\n        get: function () {\r\n            return Math.max(this._retryCount, 0);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"bufferedAmount\", {\r\n        /**\r\n         * The number of bytes of data that have been queued using calls to send() but not yet\r\n         * transmitted to the network. This value resets to zero once all queued data has been sent.\r\n         * This value does not reset to zero when the connection is closed; if you keep calling send(),\r\n         * this will continue to climb. Read only\r\n         */\r\n        get: function () {\r\n            var bytes = this._messageQueue.reduce(function (acc, message) {\r\n                if (typeof message === 'string') {\r\n                    acc += message.length; // not byte size\r\n                }\r\n                else if (message instanceof Blob) {\r\n                    acc += message.size;\r\n                }\r\n                else {\r\n                    acc += message.byteLength;\r\n                }\r\n                return acc;\r\n            }, 0);\r\n            return bytes + (this._ws ? this._ws.bufferedAmount : 0);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"extensions\", {\r\n        /**\r\n         * The extensions selected by the server. This is currently only the empty string or a list of\r\n         * extensions as negotiated by the connection\r\n         */\r\n        get: function () {\r\n            return this._ws ? this._ws.extensions : '';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"protocol\", {\r\n        /**\r\n         * A string indicating the name of the sub-protocol the server selected;\r\n         * this will be one of the strings specified in the protocols parameter when creating the\r\n         * WebSocket object\r\n         */\r\n        get: function () {\r\n            return this._ws ? this._ws.protocol : '';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"readyState\", {\r\n        /**\r\n         * The current state of the connection; this is one of the Ready state constants\r\n         */\r\n        get: function () {\r\n            if (this._ws) {\r\n                return this._ws.readyState;\r\n            }\r\n            return this._options.startClosed\r\n                ? ReconnectingWebSocket.CLOSED\r\n                : ReconnectingWebSocket.CONNECTING;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"url\", {\r\n        /**\r\n         * The URL as resolved by the constructor\r\n         */\r\n        get: function () {\r\n            return this._ws ? this._ws.url : '';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Closes the WebSocket connection or connection attempt, if any. If the connection is already\r\n     * CLOSED, this method does nothing\r\n     */\r\n    ReconnectingWebSocket.prototype.close = function (code, reason) {\r\n        if (code === void 0) { code = 1000; }\r\n        this._closeCalled = true;\r\n        this._shouldReconnect = false;\r\n        this._clearTimeouts();\r\n        if (!this._ws) {\r\n            this._debug('close enqueued: no ws instance');\r\n            return;\r\n        }\r\n        if (this._ws.readyState === this.CLOSED) {\r\n            this._debug('close: already closed');\r\n            return;\r\n        }\r\n        this._ws.close(code, reason);\r\n    };\r\n    /**\r\n     * Closes the WebSocket connection or connection attempt and connects again.\r\n     * Resets retry counter;\r\n     */\r\n    ReconnectingWebSocket.prototype.reconnect = function (code, reason) {\r\n        this._shouldReconnect = true;\r\n        this._closeCalled = false;\r\n        this._retryCount = -1;\r\n        if (!this._ws || this._ws.readyState === this.CLOSED) {\r\n            this._connect();\r\n        }\r\n        else {\r\n            this._disconnect(code, reason);\r\n            this._connect();\r\n        }\r\n    };\r\n    /**\r\n     * Enqueue specified data to be transmitted to the server over the WebSocket connection\r\n     */\r\n    ReconnectingWebSocket.prototype.send = function (data) {\r\n        if (this._ws && this._ws.readyState === this.OPEN) {\r\n            this._debug('send', data);\r\n            this._ws.send(data);\r\n        }\r\n        else {\r\n            var _a = this._options.maxEnqueuedMessages, maxEnqueuedMessages = _a === void 0 ? DEFAULT.maxEnqueuedMessages : _a;\r\n            if (this._messageQueue.length < maxEnqueuedMessages) {\r\n                this._debug('enqueue', data);\r\n                this._messageQueue.push(data);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Register an event handler of a specific event type\r\n     */\r\n    ReconnectingWebSocket.prototype.addEventListener = function (type, listener) {\r\n        if (this._listeners[type]) {\r\n            // @ts-ignore\r\n            this._listeners[type].push(listener);\r\n        }\r\n    };\r\n    ReconnectingWebSocket.prototype.dispatchEvent = function (event) {\r\n        var e_1, _a;\r\n        var listeners = this._listeners[event.type];\r\n        if (listeners) {\r\n            try {\r\n                for (var listeners_1 = __values(listeners), listeners_1_1 = listeners_1.next(); !listeners_1_1.done; listeners_1_1 = listeners_1.next()) {\r\n                    var listener = listeners_1_1.value;\r\n                    this._callEventListener(event, listener);\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (listeners_1_1 && !listeners_1_1.done && (_a = listeners_1.return)) _a.call(listeners_1);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Removes an event listener\r\n     */\r\n    ReconnectingWebSocket.prototype.removeEventListener = function (type, listener) {\r\n        if (this._listeners[type]) {\r\n            // @ts-ignore\r\n            this._listeners[type] = this._listeners[type].filter(function (l) { return l !== listener; });\r\n        }\r\n    };\r\n    ReconnectingWebSocket.prototype._debug = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (this._options.debug) {\r\n            // not using spread because compiled version uses Symbols\r\n            // tslint:disable-next-line\r\n            console.log.apply(console, __spread(['RWS>'], args));\r\n        }\r\n    };\r\n    ReconnectingWebSocket.prototype._getNextDelay = function () {\r\n        var _a = this._options, _b = _a.reconnectionDelayGrowFactor, reconnectionDelayGrowFactor = _b === void 0 ? DEFAULT.reconnectionDelayGrowFactor : _b, _c = _a.minReconnectionDelay, minReconnectionDelay = _c === void 0 ? DEFAULT.minReconnectionDelay : _c, _d = _a.maxReconnectionDelay, maxReconnectionDelay = _d === void 0 ? DEFAULT.maxReconnectionDelay : _d;\r\n        var delay = 0;\r\n        if (this._retryCount > 0) {\r\n            delay =\r\n                minReconnectionDelay * Math.pow(reconnectionDelayGrowFactor, this._retryCount - 1);\r\n            if (delay > maxReconnectionDelay) {\r\n                delay = maxReconnectionDelay;\r\n            }\r\n        }\r\n        this._debug('next delay', delay);\r\n        return delay;\r\n    };\r\n    ReconnectingWebSocket.prototype._wait = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            setTimeout(resolve, _this._getNextDelay());\r\n        });\r\n    };\r\n    ReconnectingWebSocket.prototype._getNextUrl = function (urlProvider) {\r\n        if (typeof urlProvider === 'string') {\r\n            return Promise.resolve(urlProvider);\r\n        }\r\n        if (typeof urlProvider === 'function') {\r\n            var url = urlProvider();\r\n            if (typeof url === 'string') {\r\n                return Promise.resolve(url);\r\n            }\r\n            if (!!url.then) {\r\n                return url;\r\n            }\r\n        }\r\n        throw Error('Invalid URL');\r\n    };\r\n    ReconnectingWebSocket.prototype._connect = function () {\r\n        var _this = this;\r\n        if (this._connectLock || !this._shouldReconnect) {\r\n            return;\r\n        }\r\n        this._connectLock = true;\r\n        var _a = this._options, _b = _a.maxRetries, maxRetries = _b === void 0 ? DEFAULT.maxRetries : _b, _c = _a.connectionTimeout, connectionTimeout = _c === void 0 ? DEFAULT.connectionTimeout : _c, _d = _a.WebSocket, WebSocket = _d === void 0 ? getGlobalWebSocket() : _d;\r\n        if (this._retryCount >= maxRetries) {\r\n            this._debug('max retries reached', this._retryCount, '>=', maxRetries);\r\n            return;\r\n        }\r\n        this._retryCount++;\r\n        this._debug('connect', this._retryCount);\r\n        this._removeListeners();\r\n        if (!isWebSocket(WebSocket)) {\r\n            throw Error('No valid WebSocket class provided');\r\n        }\r\n        this._wait()\r\n            .then(function () { return _this._getNextUrl(_this._url); })\r\n            .then(function (url) {\r\n            // close could be called before creating the ws\r\n            if (_this._closeCalled) {\r\n                return;\r\n            }\r\n            _this._debug('connect', { url: url, protocols: _this._protocols });\r\n            _this._ws = _this._protocols\r\n                ? new WebSocket(url, _this._protocols)\r\n                : new WebSocket(url);\r\n            _this._ws.binaryType = _this._binaryType;\r\n            _this._connectLock = false;\r\n            _this._addListeners();\r\n            _this._connectTimeout = setTimeout(function () { return _this._handleTimeout(); }, connectionTimeout);\r\n        });\r\n    };\r\n    ReconnectingWebSocket.prototype._handleTimeout = function () {\r\n        this._debug('timeout event');\r\n        this._handleError(new ErrorEvent(Error('TIMEOUT'), this));\r\n    };\r\n    ReconnectingWebSocket.prototype._disconnect = function (code, reason) {\r\n        if (code === void 0) { code = 1000; }\r\n        this._clearTimeouts();\r\n        if (!this._ws) {\r\n            return;\r\n        }\r\n        this._removeListeners();\r\n        try {\r\n            this._ws.close(code, reason);\r\n            this._handleClose(new CloseEvent(code, reason, this));\r\n        }\r\n        catch (error) {\r\n            // ignore\r\n        }\r\n    };\r\n    ReconnectingWebSocket.prototype._acceptOpen = function () {\r\n        this._debug('accept open');\r\n        this._retryCount = 0;\r\n    };\r\n    ReconnectingWebSocket.prototype._callEventListener = function (event, listener) {\r\n        if ('handleEvent' in listener) {\r\n            // @ts-ignore\r\n            listener.handleEvent(event);\r\n        }\r\n        else {\r\n            // @ts-ignore\r\n            listener(event);\r\n        }\r\n    };\r\n    ReconnectingWebSocket.prototype._removeListeners = function () {\r\n        if (!this._ws) {\r\n            return;\r\n        }\r\n        this._debug('removeListeners');\r\n        this._ws.removeEventListener('open', this._handleOpen);\r\n        this._ws.removeEventListener('close', this._handleClose);\r\n        this._ws.removeEventListener('message', this._handleMessage);\r\n        // @ts-ignore\r\n        this._ws.removeEventListener('error', this._handleError);\r\n    };\r\n    ReconnectingWebSocket.prototype._addListeners = function () {\r\n        if (!this._ws) {\r\n            return;\r\n        }\r\n        this._debug('addListeners');\r\n        this._ws.addEventListener('open', this._handleOpen);\r\n        this._ws.addEventListener('close', this._handleClose);\r\n        this._ws.addEventListener('message', this._handleMessage);\r\n        // @ts-ignore\r\n        this._ws.addEventListener('error', this._handleError);\r\n    };\r\n    ReconnectingWebSocket.prototype._clearTimeouts = function () {\r\n        clearTimeout(this._connectTimeout);\r\n        clearTimeout(this._uptimeTimeout);\r\n    };\r\n    return ReconnectingWebSocket;\r\n}());\n\nexport default ReconnectingWebSocket;\n"],"names":["extendStatics","d","b","p","__extends","__","__values","o","m","i","__read","n","ar","e","error","__spread","Event","type","target","ErrorEvent","_super","_this","CloseEvent","code","reason","getGlobalWebSocket","isWebSocket","w","DEFAULT","ReconnectingWebSocket","url","protocols","options","event","_a","minUptime","message","listener","value","bytes","acc","data","maxEnqueuedMessages","e_1","listeners","listeners_1","listeners_1_1","e_1_1","l","args","_i","_b","reconnectionDelayGrowFactor","_c","minReconnectionDelay","_d","maxReconnectionDelay","delay","resolve","urlProvider","maxRetries","connectionTimeout","WebSocket"],"sourceRoot":""}