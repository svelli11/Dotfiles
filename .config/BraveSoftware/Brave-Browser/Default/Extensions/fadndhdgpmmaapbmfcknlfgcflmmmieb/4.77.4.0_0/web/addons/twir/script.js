(()=>{var R=Object.defineProperty;var e=(B,o)=>R(B,"name",{value:o,configurable:!0});(()=>{"use strict";var B={};const g=class g extends FrankerFaceZ.utilities.module.Module{constructor(...t){super(...t),this.inject(r),this.inject(d),this.apiBase="https://twir.app/api/v1/public"}async request(t){try{const s=await fetch(`${this.apiBase}/${t}`);if(s.ok)return await s.json()}catch(s){this.log.error(s)}return[]}};e(g,"Api");let o=g;const l=class l extends FrankerFaceZ.utilities.module.Module{getChannelCommands(t){return this.parent.request(`channels/${t}/commands`)}};e(l,"Commands");let r=l;const p=class p extends FrankerFaceZ.utilities.module.Module{getBadges(){return this.parent.request("badges")}};e(p,"Badges");let d=p;const n={commandDescription:"addon.twir.command_description",userBadges:"addon.twir.user_badges"},j=870280719,f=class f extends FrankerFaceZ.utilities.module.Module{constructor(...t){super(...t),this.inject("settings"),this.settings.add(n.commandDescription,{default:!0,ui:{path:"Add-Ons > Twir >> Commands",title:"Description",description:"Show command description or responses.",component:"setting-check-box"}}),this.settings.add(n.userBadges,{default:!0,ui:{path:"Add-Ons > Twir >> User Cosmetics",title:"Badges",description:`Show user badges.

(Per-badge visibilty can be set in [Chat >> Badges > Visibilty > Add-Ons](~chat.badges.tabs.visibility))`,component:"setting-check-box"}}),this.settings.getChanges(n.userBadges,s=>{this.parent.twir_badges.toggleBadges(s)})}};e(f,"Settings");let c=f;const b=class b extends FrankerFaceZ.utilities.module.Module{constructor(...t){super(...t),this.inject("chat"),this.inject("settings"),this.roomCommands=new Map}onEnable(){this.on("chat:room-add",this.registerRoomCommands,this),this.on("chat:room-remove",this.unregisterRoomCommands,this);for(const t of this.chat.iterateRooms())t&&this.registerRoomCommands(t);this.on("chat:get-tab-commands",this.getTabCommands,this)}onDisable(){this.off("chat:room-add",this.registerRoomCommands,this),this.off("chat:room-remove",this.unregisterRoomCommands,this);for(const t of this.roomCommands.keys())this.unregisterRoomCommands({id:t});this.off("chat:get-tab-commands",this.getTabCommands,this)}getTabCommands(t){for(const s of this.chat.iterateRooms())if(s){const i=this.getRoomCommands(s);i&&t.commands.push(...i)}}async registerRoomCommands(t){const s=await this.parent.twir_api.commands.getChannelCommands(t.id);this.roomCommands.set(t.id,s)}unregisterRoomCommands(t){this.roomCommands.delete(t.id)}getRoomCommands(t){const s=this.roomCommands.get(t.id);if(!s)return;const i=this.settings.get(n.commandDescription);return s.map(a=>{const k=a.description||a.responses?.map(F=>F.text).join(" | ");return{prefix:"!",name:a.name,description:i?k:"",permissionLevel:0,ffz_group:`Twir (${a.group??a.module})`}})}};e(b,"commands_Commands");let m=b;const w=class w extends FrankerFaceZ.utilities.module.Module{constructor(...t){super(...t),this.inject("chat"),this.inject("chat.badges"),this.inject("settings"),this.badgeIds=new Set,this.chat.getUser(j).addBadge("ffz",2)}onDisable(){this.unloadBadges()}toggleBadges(t){t?this.loadBadges():this.unloadBadges()}unloadBadges(){for(const t of this.badgeIds.values())this.badges.removeBadge(t);this.emit("chat:update-lines")}async loadBadges(){const t=await this.parent.twir_api.badges.getBadges();for(const s of t){if(!s.users.length)return;const i=this.registerBadge(s);this.badges.setBulk("addon.twir",i,s.users)}this.emit("chat:update-lines")}registerBadge(t){const s=`addon.twir.badge_${t.id}`;return this.badgeIds.add(s),this.badges.loadBadgeData(s,{id:s,name:t.name,title:t.name,click_url:"https://twir.app",image:t.url,urls:{1:t.url,2:t.url,3:t.url},slot:t.ffzSlot}),s}};e(w,"badges_Badges");let h=w;const C=class C extends FrankerFaceZ.utilities.addon.Addon{constructor(...t){super(...t),this.injectAs("twir_api",o),this.injectAs("twir_commands",m),this.injectAs("twir_badges",h),this.injectAs("twir_settings",c)}};e(C,"Twir");let u=C;u.register("twir",null,"1.1.1")})();})();

//# sourceMappingURL=script.js.map