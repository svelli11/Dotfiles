{"version":3,"file":"ffzap-bttv/script.js","mappings":"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","sources":["webpack://ffz-addons/./src/ffzap-bttv/socket.js","webpack://ffz-addons/./src/ffzap-bttv/pro_user.js","webpack://ffz-addons/./src/ffzap-bttv/index.js"],"sourcesContent":["export default class Socket {\n\tconstructor(parent, events) {\n\t\tthis.parent = parent;\n\n\t\tthis.socket = false;\n\t\tthis._connected = false;\n\t\tthis._connecting = false;\n\t\tthis._connect_attempts = 1;\n\t\tthis._joined_channels = {};\n\t\tthis._connection_buffer = [];\n\t\tthis._events = events;\n\t}\n\n\tconnect() {\n\t\tif (!this.parent.site.getUser()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._connected || this._connecting) {\n\t\t\treturn;\n\t\t}\n\t\tthis._connecting = true;\n\n\t\tthis.parent.log.info('Socket: Connecting to socket server...');\n\n\t\tthis.socket = new WebSocket('wss://sockets.betterttv.net/ws');\n\n\t\tthis.socket.onopen = () => {\n\t\t\tthis.parent.log.info('Socket: Connected to socket server.');\n\n\t\t\tthis._connected = true;\n\t\t\tthis._connect_attempts = 1;\n\n\t\t\tif (this._connection_buffer.length > 0) {\n\t\t\t\tlet i = this._connection_buffer.length;\n\t\t\t\twhile (i--) {\n\t\t\t\t\tconst channel = this._connection_buffer[i];\n\t\t\t\t\tthis.joinChannel(channel);\n\t\t\t\t}\n\t\t\t\tthis._connection_buffer = [];\n\t\t\t}\n\n\t\t\tif (this.reconnecting) {\n\t\t\t\tthis.reconnecting = false;\n\t\t\t\t// api.iterate_rooms();\n\t\t\t}\n\t\t};\n\n\t\tthis.socket.onerror = () => {\n\t\t\tthis.parent.log.error('Socket: Error from socket server.');\n\n\t\t\tthis._connect_attempts++;\n\t\t\tthis.reconnect();\n\t\t};\n\n\t\tthis.socket.onclose = () => {\n\t\t\tif (!this._connected || !this.socket) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.parent.log.info('Socket: Lost connection to socket server...');\n\n\t\t\tthis._connect_attempts++;\n\t\t\tthis.reconnect();\n\t\t};\n\n\t\tthis.socket.onmessage = message => {\n\t\t\tlet evt;\n\n\t\t\ttry {\n\t\t\t\tevt = JSON.parse(message.data);\n\t\t\t} catch (e) {\n\t\t\t\tthis.parent.log.error('Socket: Error parsing message', e);\n\t\t\t}\n\n\t\t\tif (!evt || !(this._events[evt.name])) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.parent.log.debug('Socket: Received event', evt);\n\n\t\t\tthis._events[evt.name](evt.data);\n\t\t};\n\t}\n\n\treconnect() {\n\t\tthis.disconnect();\n\n\t\tif (this._connecting === false) {\n\t\t\treturn;\n\t\t}\n\t\tthis._connecting = false;\n\n\t\tthis.parent.log.info('Socket: Trying to reconnect to socket server...');\n\n\t\tsetTimeout(() => {\n\t\t\tthis.reconnecting = true;\n\t\t\tthis.connect();\n\t\t}, Math.random() * (Math.pow(2, this._connect_attempts) - 1) * 10000);\n\t}\n\n\tdisconnect() {\n\t\tif (this.socket) {\n\t\t\ttry {\n\t\t\t\tthis.socket.close();\n\t\t\t} catch (e) {\n\t\t\t\t// Error\n\t\t\t}\n\t\t}\n\n\t\tdelete this.socket;\n\n\t\tthis._connected = false;\n\t\tthis._connecting = false;\n\t}\n\n\tdisconnectInternal() {\n\t\tthis.disconnect();\n\n\t\tthis.parent.log.info('Socket: Disconnected from socket server.');\n\t}\n\n\temit(event, data) {\n\t\tif (!this._connected || !this.socket) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.socket.send(JSON.stringify({\n\t\t\tname: event,\n\t\t\tdata,\n\t\t}));\n\t}\n\n\tbroadcastMe(channel) {\n\t\tif (!this._connected) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this.parent.site.getUser()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.emit('broadcast_me', {\n\t\t\tprovider: \"twitch\",\n\t\t\tproviderId: this.parent.site.getUser().id,\n\t\t\tchannel,\n\t\t});\n\t}\n\n\tjoinChannel(channel) {\n\t\tif (!this._connected) {\n\t\t\tif (!this._connection_buffer.includes(channel)) {\n\t\t\t\tthis._connection_buffer.push(channel);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (!channel || !channel.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._joined_channels[channel]) {\n\t\t\tthis.partChannel(channel);\n\t\t}\n\n\t\tthis.emit('join_channel', {\n\t\t\tname: channel,\n\t\t});\n\t\tthis._joined_channels[channel] = true;\n\n\t\tthis.broadcastMe(channel);\n\t}\n\n\tpartChannel(channel) {\n\t\tif (!this._connected) {\n\t\t\treturn;\n\t\t}\n\t\tif (!channel.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._joined_channels[channel]) {\n\t\t\tthis.emit('part_channel', {\n\t\t\t\tname: channel,\n\t\t\t});\n\t\t}\n\t\tdelete this._joined_channels[channel];\n\t}\n}\n","export default class ProUser {\n\tconstructor(parent, userID, badge, emotes) {\n\t\tthis.parent = parent;\n\n\t\tthis.userID = userID;\n\t\tthis.badge = badge;\n\n\t\tthis.setID = `addon--ffzap.betterttv--emotes-pro-${this.userID}`;\n\t\tthis.emotes = emotes || [];\n\n\t\tthis.loadBadge(badge, true);\n\t\tthis.loadEmotes(emotes, true);\n\t}\n\n\tisBadgeEqual(badge = null) {\n\t\treturn this.badge?.url == badge?.url && this.badge?.startedAt == badge?.startedAt;\n\t}\n\n\tareEmotesEqual(emotes = []) {\n\t\treturn this.emotes.length === emotes.length &&\n\t\t\temotes.every(emote => this.emotes.includes(emote.id));\n\t}\n\n\tloadBadge(badge = null, skipCheck = false) {\n\t\tif (window.BetterTTV) return false;\n\n\t\tif (!skipCheck && this.isBadgeEqual(badge)) return false;\n\n\t\tthis.badge = badge;\n\n\t\tif (badge) {\n\t\t\tconst extraData = {\n\t\t\t\timage: badge.url,\n\t\t\t\ttitle: `BetterTTV Pro\\n(Since ${this.parent.i18n.formatDate(new Date(badge.startedAt))})`\n\t\t\t};\n\n\t\t\tthis.parent.chat.getUser(this.userID).addBadge('addon--ffzap.betterttv', this.parent.getProBadgeID(), extraData);\n\t\t}\n\t\telse {\n\t\t\tthis.parent.chat.getUser(this.userID).removeBadge('addon--ffzap.betterttv', this.parent.getProBadgeID());\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tloadEmotes(_emotes = [], skipCheck = false) {\n\t\tif (!skipCheck && this.areEmotesEqual(_emotes)) return false;\n\n\t\tthis.emotes = _emotes.map(emote => emote.id);\n\n\t\tconst emotes = [];\n\n\t\tfor (let i = 0; i < _emotes.length; i++) {\n\t\t\temotes.push(this.parent.convertBTTVEmote(_emotes[i]));\n\t\t}\n\n\t\tconst set = {\n\t\t\temotes,\n\t\t\tpersonal: true,\n\t\t\ttitle: 'Personal Emotes',\n\t\t\tsource: 'BetterTTV',\n\t\t\ticon: 'https://betterttv.com/favicon.png',\n\t\t};\n\n\t\tif (emotes.length) {\n\t\t\tthis.parent.emotes.loadSetData(this.setID, set, true);\n\t\t\tthis.parent.chat\n\t\t\t\t.getUser(this.userID)\n\t\t\t\t.addSet('addon--ffzap.betterttv', this.setID);\n\t\t}\n\t\telse {\n\t\t\tthis.unload();\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tunload() {\n\t\tthis.parent.emotes.unloadSet(this.setID, true);\n\t}\n}\n","import Socket from './socket';\nimport ProUser from './pro_user';\n\nclass BetterTTV extends Addon {\n\tconstructor(...args) {\n\t\tsuper(...args);\n\n\t\tthis.inject('settings');\n\t\tthis.inject('chat');\n\t\tthis.inject('chat.emotes');\n\t\tthis.inject('chat.badges');\n\t\tthis.inject('site');\n\t\tthis.inject('i18n');\n\t\tthis.inject('load_tracker');\n\n\t\tthis.settings.add('ffzap.betterttv.global_emoticons', {\n\t\t\tdefault: true,\n\n\t\t\tui: {\n\t\t\t\tpath: 'Add-Ons > BetterTTV Emotes >> Emotes',\n\t\t\t\ttitle: 'Global Emotes',\n\t\t\t\tdescription: 'Enable to show global BetterTTV emoticons.',\n\t\t\t\tcomponent: 'setting-check-box',\n\t\t\t},\n\t\t});\n\n\t\tthis.settings.add('ffzap.betterttv.arbitrary_emoticons', {\n\t\t\tdefault: true,\n\n\t\t\tui: {\n\t\t\t\tpath: 'Add-Ons > BetterTTV Emotes >> Emotes',\n\t\t\t\ttitle: 'Arbitrary Emotes',\n\t\t\t\tdescription: 'Enable to show arbitrary emoticons (like D:, :tf: and similar).',\n\t\t\t\tcomponent: 'setting-check-box',\n\t\t\t},\n\t\t});\n\n\t\tthis.settings.add('ffzap.betterttv.channel_emoticons', {\n\t\t\tdefault: true,\n\n\t\t\tui: {\n\t\t\t\tpath: 'Add-Ons > BetterTTV Emotes >> Emotes',\n\t\t\t\ttitle: 'Channel Emotes',\n\t\t\t\tdescription: 'Enable to show per-channel BetterTTV emoticons.',\n\t\t\t\tcomponent: 'setting-check-box',\n\t\t\t},\n\t\t});\n\n\t\tthis.settings.add('ffzap.betterttv.update_messages', {\n\t\t\tdefault: true,\n\t\t\tui: {\n\t\t\t\tpath: 'Add-Ons > BetterTTV Emotes >> Emotes > Live Emote Updates',\n\t\t\t\ttitle: 'Show update messages',\n\t\t\t\tdescription: 'Show messages in chat when emotes are updated in the current channel.',\n\t\t\t\tcomponent: 'setting-check-box',\n\t\t\t}\n\t\t});\n\n\t\tthis.settings.add('ffzap.betterttv.pro_badges', {\n\t\t\tdefault: true,\n\n\t\t\tui: {\n\t\t\t\tpath: 'Add-Ons > BetterTTV Emotes >> Pro',\n\t\t\t\ttitle: 'Pro Badges',\n\t\t\t\tdescription: 'Enable to show BetterTTV Pro badges.',\n\t\t\t\tcomponent: 'setting-check-box',\n\t\t\t},\n\t\t});\n\n\t\tthis.settings.add('ffzap.betterttv.pro_emoticons', {\n\t\t\tdefault: true,\n\n\t\t\tui: {\n\t\t\t\tpath: 'Add-Ons > BetterTTV Emotes >> Pro',\n\t\t\t\ttitle: 'Pro Emoticons',\n\t\t\t\tdescription: 'Enable to show BetterTTV Pro emoticons.',\n\t\t\t\tcomponent: 'setting-check-box',\n\t\t\t},\n\t\t});\n\t\t\n\t\tthis.chat.context.on('changed:ffzap.betterttv.global_emoticons', this.updateEmotes, this);\n\t\tthis.chat.context.on('changed:ffzap.betterttv.arbitrary_emoticons', this.updateEmotes, this);\n\t\tthis.chat.context.on('changed:ffzap.betterttv.channel_emoticons', this.updateEmotes, this);\n\t\tthis.chat.context.on('changed:ffzap.betterttv.pro_badges', () => {\n\t\t\tthis.addProBadge();\n\t\t\tthis.updateProStatus();\n\t\t\tthis.emit('chat:update-lines');\n\t\t}, this);\n\t\tthis.chat.context.on('changed:ffzap.betterttv.pro_emoticons', this.updateProStatus, this);\n\n\t\tthis.pro_users = {};\n\t\tthis.night_subs = {};\n\t\tthis.socket = false;\n\n\t\tthis.room_emotes = {};\n\n\t\tthis.on('chat:reload-data', flags => {\n\t\t\tif (!flags || flags.badges) {\n\t\t\t\tthis.addBadges();\n\t\t\t}\n\n\t\t\tif (!flags || flags.emotes) {\n\t\t\t\tthis.updateGlobalEmotes();\n\n\t\t\t\tfor (const room of this.chat.iterateRooms()) {\n\t\t\t\t\tif (room) this.updateChannel(room);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tonEnable() {\n\t\tthis.log.debug('FFZ:AP\\'s BetterTTV Emotes module was enabled successfully.');\n\n\t\tthis.emotes.setProvider('addon--ffzap.betterttv', {\n\t\t\tname: this.addon_manifest.name,\n\t\t\ticon: this.addon_manifest.icon,\n\t\t});\n\n\t\tthis.on('chat:room-add', this.roomAdd);\n\t\tthis.on('chat:room-remove', this.roomRemove);\n\t\tthis.on('chat:receive-message', this.onReceiveMessage);\n\n\t\tthis.addBadges();\n\n\t\tthis.socket = new Socket(this, this.getSocketEvents());\n\t\tthis.updateGlobalEmotes();\n\n\t\tif (this.shouldSocketBeConnected()) {\n\t\t\tthis.socket.connect();\n\t\t}\n\n\t\tfor (const room of this.chat.iterateRooms()) {\n\t\t\tif (room) this.updateChannel(room);\n\t\t}\n\n\t\tthis.addProBadge();\n\t}\n\n\troomAdd(room) {\n\t\tthis.updateChannel(room);\n\t}\n\n\troomRemove(room) {\n\t\tthis.updateChannel(room);\n\n\t\tif (this.shouldSocketBeConnected()) {\n\t\t\tthis.socket.partChannel(room.id);\n\t\t}\n\t}\n\n\tonReceiveMessage(msg) {\n\t\tconst user = this.resolve('site').getUser();\n\t\tif (user) {\n\t\t\tconst msg_user_id = msg.message.user.id;\n\t\t\tif (user.id === msg_user_id) {\n\t\t\t\tthis.socket.broadcastMe(`twitch:${msg.channelID}`);\n\t\t\t}\n\t\t}\n\t}\n\n\taddEmoteUpdateMessage(bttvChannel, message) {\n\t\tconst channelId = bttvChannel.replace('twitch:', '');\n\t\tconst channel = this.chat.getRoom(channelId);\n\n\t\tthis.addChatNotice(channel, message);\n\t}\n\n\taddChatNotice(channel, message, tokenize = true) {\n\t\tif (!channel.login) return;\n\n\t\tif (!this.settings.get('ffzap.betterttv.update_messages')) return;\n\t\t\n\t\tthis.resolve('site.chat').addNotice(channel.login, {\n\t\t\tmessage,\n\t\t\ticon: new URL('https://betterttv.com/favicon.png'),\n\t\t\ttokenize\n\t\t});\n\t}\n\n\tgetSocketEvents() {\n\t\treturn {\n\t\t\tlookup_user: data => {\n\t\t\t\tlet emotesChanged = false;\n\t\t\t\tlet badgesChanged = false;\n\n\t\t\t\tif (data.subscribed) { // Night's subs\n\t\t\t\t\tif (!this.night_subs[data.providerId]) {\n\t\t\t\t\t\tthis.night_subs[data.providerId] = true;\n\t\t\t\t\t\tthis.chat.getUser(data.providerId).addSet('addon--ffzap.betterttv', 'addon--ffzap.betterttv--emotes-special-night');\n\n\t\t\t\t\t\temotesChanged = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (data.pro) {\n\t\t\t\t\tlet pro_user = this.pro_users[data.providerId];\n\t\t\t\t\tif (!pro_user) {\n\t\t\t\t\t\tpro_user = this.pro_users[data.providerId] = new ProUser(this, data.providerId, data.badge, data.emotes);\n\n\t\t\t\t\t\temotesChanged = true;\n\t\t\t\t\t\tbadgesChanged = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// BetterTTV Personal Emotes\n\t\t\t\t\tif (this.chat.context.get('ffzap.betterttv.pro_emoticons') && pro_user.loadEmotes(data.emotes)) {\n\t\t\t\t\t\temotesChanged = true;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// BetterTTV Pro Badge\n\t\t\t\t\tif (pro_user.loadBadge(data.badge)) {\n\t\t\t\t\t\tbadgesChanged = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (emotesChanged || badgesChanged) {\n\t\t\t\t\tthis.emit('chat:update-lines-by-user', data.providerId, data.name, emotesChanged, badgesChanged);\n\t\t\t\t}\n\t\t\t},\n\t\t\temote_create: ({ channel, emote: createdEmote }) => {\n\t\t\t\tthis.log.info(channel, createdEmote);\n\t\t\t\tconst emotes = this.room_emotes[channel];\n\t\t\t\tif (!emotes) return;\n\n\t\t\t\tconst emoteExists = emotes.some(e => e.id === createdEmote.id);\n\t\t\t\tif (emoteExists) return;\n\n\t\t\t\tconst emote = this.convertBTTVEmote(createdEmote);\n\t\t\t\temotes.push(emote);\n\n\t\t\t\tthis.emotes.addEmoteToSet(this.getChannelSetID(channel, false), emote);\n\n\t\t\t\tthis.addEmoteUpdateMessage(channel, `Added the emote ${emote.name} (${emote.name})`);\n\t\t\t},\n\t\t\temote_delete: ({ channel, emoteId }) => {\n\t\t\t\tconst emotes = this.room_emotes[channel];\n\t\t\t\tif (!emotes) return;\n\n\t\t\t\tconst existingEmote = emotes.find(e => e.id === emoteId);\n\t\t\t\tif (!existingEmote) return;\n\n\t\t\t\tthis.room_emotes[channel] = emotes.filter(e => e.id !== emoteId);\n\n\t\t\t\tthis.emotes.removeEmoteFromSet(this.getChannelSetID(channel, false), emoteId);\n\n\t\t\t\tthis.addEmoteUpdateMessage(channel, `Removed the emote ${existingEmote.name}`);\n\t\t\t},\n\t\t\temote_update: ({ channel, ...payload }) => {\n\t\t\t\tconst updatedEmote = payload.emote;\n\n\t\t\t\tconst emotes = this.room_emotes[channel];\n\t\t\t\tif (!emotes) return;\n\n\t\t\t\tconst emote = emotes.find(e => e.id === updatedEmote.id);\n\t\t\t\tif (!emote) return;\n\n\t\t\t\tconst oldName = emote.name;\n\t\t\t\temote.name = updatedEmote.code;\n\n\t\t\t\tthis.emotes.addEmoteToSet(this.getChannelSetID(channel, false), emote);\n\n\t\t\t\tthis.addEmoteUpdateMessage(channel, `Renamed the emote ${oldName} to ${emote.name} (${emote.name})`);\n\t\t\t}\n\t\t};\n\t}\n\n\tgetProBadgeID() {\n\t\treturn 'addon--ffzap.betterttv--badges-bttv-pro';\n\t}\n\n\taddProBadge() {\n\t\tconst wanted = this.chat.context.get('ffzap.betterttv.pro_badges') && ! window.BetterTTV;\n\n\t\tthis.removeProBadge(!wanted);\n\t\tif (!wanted)\n\t\t\treturn;\n\n\t\tconst badgeData = {\n\t\t\tid: `bttv-pro`,\n\t\t\tslot: 21,\n\t\t\ttitle: 'BetterTTV Pro',\n\t\t\tno_invert: true,\n\t\t\timage: 'https://cdn.betterttv.net/badges/pro/0b58eba8-e49c-4ed7-ae7d-be0b524502e6.png'\n\t\t};\n\n\t\tthis.badges.loadBadgeData(this.getProBadgeID(), badgeData);\n\t}\n\n\tremoveProBadge(generate_css = true) {\n\t\tthis.badges.deleteBulk('addon.ffzap-bttv', this.getProBadgeID());\n\t\tthis.badges.removeBadge(this.getProBadgeID(), generate_css);\n\t}\n\n\tasync addBadges(attempts = 0) {\n\t\tif (window.BetterTTV) {\n\t\t\tthis.log.info('Not adding BTTV badges because BTTV is present.');\n\t\t\treturn;\n\t\t}\n\n\t\tconst response = await fetch('https://api.betterttv.net/3/cached/badges');\n\t\tif (response.ok) {\n\t\t\tconst data = await response.json();\n\n\t\t\tconst types = [];\n\n\t\t\tconst reg = new RegExp(/\\/badges\\/(\\w+)\\.svg/);\n\n\t\t\tlet i = data.length;\n\t\t\twhile (i--) {\n\t\t\t\tconst bData = data[i];\n\n\t\t\t\tif (!reg.test(bData.badge.svg)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst name = reg.exec(bData.badge.svg)[1];\n\n\t\t\t\tif (!types[name]) {\n\t\t\t\t\tconst badgeData = {\n\t\t\t\t\t\tid: `bttv-${name}`,\n\t\t\t\t\t\tslot: 21,\n\t\t\t\t\t\timage: bData.badge.svg,\n\t\t\t\t\t\tsvg: true,\n\t\t\t\t\t\ttitle: bData.badge.description,\n\t\t\t\t\t\tno_invert: true,\n\t\t\t\t\t};\n\n\t\t\t\t\ttypes[name] = true;\n\n\t\t\t\t\tthis.badges.loadBadgeData(`addon--ffzap.betterttv--badges-bttv-${name}`, badgeData);\n\t\t\t\t}\n\n\t\t\t\tthis.chat.getUser(bData.providerId).addBadge('addon--ffzap.betterttv', `addon--ffzap.betterttv--badges-bttv-${name}`);\n\t\t\t}\n\t\t} else {\n\t\t\tif (response.status === 404) return;\n\n\t\t\tconst newAttempts = (attempts || 0) + 1;\n\t\t\tif (newAttempts < 12) {\n\t\t\t\tthis.log.error('Failed to fetch badges. Trying again in 5 seconds.');\n\t\t\t\tsetTimeout(this.addBadges.bind(this, newAttempts), 5000);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync updateGlobalEmotes(attempts = 0) {\n\t\tthis.load_tracker.schedule('chat-data', 'ffzap-bttv-global');\n\n\t\tconst realID = 'addon--ffzap.betterttv--emotes-global';\n\t\tthis.emotes.removeDefaultSet('addon--ffzap.betterttv', realID);\n\t\tthis.emotes.unloadSet(realID);\n\n\t\tconst effectsID = 'addon--ffzap.betterttv--global-effects';\n\t\tthis.emotes.removeDefaultSet('addon--ffzap.betterttv', effectsID);\n\t\tthis.emotes.unloadSet(effectsID);\n\n\t\tif (!this.chat.context.get('ffzap.betterttv.global_emoticons')) {\n\t\t\tthis.load_tracker.notify('chat-data', 'ffzap-bttv-global', false);\n\t\t\treturn;\n\t\t}\n\n\t\tconst response = await fetch('https://api.betterttv.net/3/cached/emotes/global');\n\t\tif (response.ok) {\n\t\t\tconst emotes = await response.json();\n\n\t\t\tconst globalBttv = [];\n\t\t\tconst arbitraryEmotes = [];\n\t\t\tconst nightSubEmotes = [];\n\t\t\tconst effectEmotes = [];\n\n\t\t\tlet knownEffects = {};\n\n\t\t\tif ( this.emotes?.ModifierFlags?.Hidden ) {\n\t\t\t\tconst Flags = this.emotes.ModifierFlags;\n\t\t\t\tknownEffects = {\n\t\t\t\t\t'c!': Flags.Hidden | Flags.Cursed,\n\t\t\t\t\t'w!': Flags.Hidden | Flags.GrowX,\n\t\t\t\t\t'z!': Flags.Hidden | Flags.NoSpace,\n\t\t\t\t\t'v!': Flags.Hidden | Flags.FlipY,\n\t\t\t\t\t'h!': Flags.Hidden | Flags.FlipX,\n\t\t\t\t\t'l!': Flags.Hidden | (Flags.Rotate90 ?? 0),\n\t\t\t\t\t'r!': Flags.Hidden | (Flags.Rotate270 ?? 0)\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst overlayEmotes = {\n\t\t\t\t'cvMask': '3px 0 0 0',\n\t\t\t\t'cvHazmat': '3px 0 0 0',\n\n\t\t\t\t// Christmas emotes\n\t\t\t\t'SoSnowy': '2px 0 0 0',\n\t\t\t\t'IceCold': '2px 0 0 0',\n\t\t\t\t'TopHat': null,\n\t\t\t\t'SantaHat': null,\n\t\t\t\t'ReinDeer': null,\n\t\t\t\t'CandyCane': null,\n\t\t\t};\n\n\t\t\tlet i = emotes.length;\n\t\t\twhile (i--) {\n\t\t\t\tlet emote = emotes[i];\n\n\t\t\t\tif ( knownEffects[emote.code] ) {\n\t\t\t\t\temote.modifier = true;\n\t\t\t\t\temote.modifier_flags = knownEffects[emote.code];\n\t\t\t\t\temote.modifier_prefix = true;\n\t\t\t\t}\n\n\t\t\t\temote = this.convertBTTVEmote(emote);\n\n\t\t\t\temote.modifier |= Object.prototype.hasOwnProperty.call(overlayEmotes, emote.name);\n\t\t\t\temote.modifier_offset = overlayEmotes[emote.name];\n\n\t\t\t\tconst arbitraryEmote = /[^A-Za-z0-9]/.test(emote.name);\n\n\t\t\t\tif (emote.channel && emote.channel === 'night') {\n\t\t\t\t\tnightSubEmotes.push(emote);\n\t\t\t\t} else {\n\t\t\t\t\tif (emote.modifier_flags) {\n\t\t\t\t\t\teffectEmotes.push(emote);\n\t\t\t\t\t}\n\t\t\t\t\telse if (arbitraryEmote) {\n\t\t\t\t\t\tarbitraryEmotes.push(emote);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tglobalBttv.push(emote);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet set;\n\t\t\tif (nightSubEmotes.length > 0) {\n\t\t\t\tset = {\n\t\t\t\t\temotes: nightSubEmotes,\n\t\t\t\t\ttitle: 'Night (Legacy)',\n\t\t\t\t\tsource: 'BetterTTV',\n\t\t\t\t\ticon: 'https://betterttv.com/favicon.png',\n\t\t\t\t\tsort: 50,\n\t\t\t\t};\n\n\t\t\t\tthis.emotes.loadSetData('addon--ffzap.betterttv--emotes-special-night', set);\n\t\t\t}\n\n\t\t\tlet setEmotes = [];\n\t\t\tsetEmotes = setEmotes.concat(globalBttv);\n\n\t\t\tif (this.chat.context.get('ffzap.betterttv.arbitrary_emoticons')) {\n\t\t\t\tsetEmotes = setEmotes.concat(arbitraryEmotes);\n\t\t\t}\n\n\t\t\tif (setEmotes.length === 0 && effectEmotes.length === 0) {\n\t\t\t\tthis.load_tracker.notify('chat-data', 'ffzap-bttv-global', false);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tset = {\n\t\t\t\temotes: setEmotes,\n\t\t\t\ttitle: 'Global Emotes',\n\t\t\t\tsource: 'BetterTTV',\n\t\t\t\ticon: 'https://betterttv.com/favicon.png',\n\t\t\t\t_type: 1,\n\t\t\t};\n\n\t\t\tthis.emotes.addDefaultSet('addon--ffzap.betterttv', realID, set);\n\n\t\t\tset = {\n\t\t\t\temotes: effectEmotes,\n\t\t\t\ttitle: 'Global Effects',\n\t\t\t\tsource: 'BetterTTV',\n\t\t\t\ticon: 'https://betterttv.com/favicon.png',\n\t\t\t\t_type: 1,\n\t\t\t};\n\n\t\t\tthis.emotes.addDefaultSet('addon--ffzap.betterttv', effectsID, set);\n\n\t\t\tthis.load_tracker.notify('chat-data', 'ffzap-bttv-global', true);\n\t\t} else {\n\t\t\tif (response.status === 404) return;\n\n\t\t\tconst newAttempts = (attempts || 0) + 1;\n\t\t\tif (newAttempts < 12) {\n\t\t\t\tthis.log.error('Failed to fetch global emotes. Trying again in 5 seconds.');\n\t\t\t\tsetTimeout(this.updateGlobalEmotes.bind(this, newAttempts), 5000);\n\t\t\t}\n\t\t}\n\t}\n\n\tgetChannelSetID(roomID, appendTwitch = true) {\n\t\treturn `addon--ffzap.betterttv--channel-${appendTwitch ? this.getBTTVRoomID(roomID) : roomID}`\n\t}\n\n\tgetBTTVRoomID(roomID) {\n\t\treturn `twitch:${roomID}`;\n\t}\n\n\tconvertBTTVEmote({id, code, user, animated, width, height, modifier, modifier_flags, modifier_prefix}) {\n\t\tconst require_spaces = /[^A-Za-z0-9]/.test(code);\n\n\t\tconst emote = {\n\t\t\turls: {\n\t\t\t\t1: `https://cdn.betterttv.net/emote/${id}/1x.webp`,\n\t\t\t\t2: `https://cdn.betterttv.net/emote/${id}/2x.webp`,\n\t\t\t\t4: `https://cdn.betterttv.net/emote/${id}/3x.webp`,\n\t\t\t},\n\t\t\tid,\n\t\t\tname: code,\n\t\t\twidth: width || 28,\n\t\t\theight: height || 28,\n\t\t\tmodifier,\n\t\t\tmodifier_flags,\n\t\t\tmodifier_prefix,\n\t\t\towner: {\n\t\t\t\tdisplay_name: (user && user.displayName),\n\t\t\t\tname: (user && user.name),\n\t\t\t},\n\t\t\trequire_spaces,\n\t\t\tclick_url: `https://betterttv.com/emotes/${id}`\n\t\t};\n\n\t\tif (animated) {\n\t\t\temote.animated = emote.urls;\n\t\t\temote.urls = {\n\t\t\t\t1: `https://cdn.betterttv.net/emote/${id}/static/1x.webp`,\n\t\t\t\t2: `https://cdn.betterttv.net/emote/${id}/static/2x.webp`,\n\t\t\t\t4: `https://cdn.betterttv.net/emote/${id}/static/3x.webp`,\n\t\t\t};\n\t\t}\n\n\t\treturn emote;\n\t}\n\n\tasync updateChannel(room, attempts = 0) {\n\t\tthis.load_tracker.schedule('chat-data', `ffzap-bttv-channel-${room.id}`);\n\n\t\tconst realID = this.getChannelSetID(room.id);\n\t\troom.removeSet('addon--ffzap.betterttv', realID);\n\n\t\tconst bttvRoomID = this.getBTTVRoomID(room.id);\n\n\t\tif (this.shouldSocketBeConnected()) {\n\t\t\tthis.socket.joinChannel(bttvRoomID);\n\t\t}\n\n\t\tif (!this.chat.context.get('ffzap.betterttv.channel_emoticons')) {\n\t\t\tthis.load_tracker.notify('chat-data', `ffzap-bttv-channel-${room.id}`, false);\n\t\t\treturn;\n\t\t}\n\n\t\tconst response = await fetch(`https://api.betterttv.net/3/cached/users/twitch/${room.id}`);\n\t\tif (response.ok) {\n\t\t\tconst emotes = this.room_emotes[bttvRoomID] = [];\n\t\t\tconst { channelEmotes, sharedEmotes, bots } = await response.json();\n\n\t\t\tconst _emotes = channelEmotes.concat(sharedEmotes);\n\n\t\t\tfor (const bot of bots) {\n\t\t\t\tconst botUser = room.getUser(null, bot);\n\t\t\t\tif (botUser) {\n\t\t\t\t\tbotUser.addBadge('ffz', 2);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet i = _emotes.length;\n\t\t\twhile (i--) {\n\t\t\t\t_emotes[i].user = _emotes[i].user || room && { displayName: room.login, name: room.login };\n\n\t\t\t\temotes.push(this.convertBTTVEmote(_emotes[i]));\n\t\t\t}\n\n\t\t\tif (!emotes.length) {\n\t\t\t\tthis.load_tracker.notify('chat-data', `ffzap-bttv-channel-${room.id}`, false);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tconst set = {\n\t\t\t\temotes,\n\t\t\t\ttitle: 'Channel Emotes',\n\t\t\t\ttitle_is_channel: true,\n\t\t\t\tsource: 'BetterTTV',\n\t\t\t\ticon: 'https://betterttv.com/favicon.png',\n\t\t\t\t_type: 1,\n\t\t\t};\n\n\t\t\tif (emotes.length) {\n\t\t\t\tthis.emotes.loadSetData(realID, set, false);\n\t\t\t\troom.addSet('addon--ffzap.betterttv', realID);\n\t\t\t}\n\t\t\telse {\n\t\t\t\troom.removeSet('addon--ffzap.betterttv', realID);\n\t\t\t}\n\n\t\t\tthis.load_tracker.notify('chat-data', `ffzap-bttv-channel-${room.id}`, true);\n\t\t} else {\n\t\t\tif (response.status === 404) {\n\t\t\t\tthis.load_tracker.notify('chat-data', `ffzap-bttv-channel-${room.id}`, false);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst newAttempts = (attempts || 0) + 1;\n\t\t\tif (newAttempts < 12) {\n\t\t\t\tthis.log.error('Failed to fetch channel emotes. Trying again in 5 seconds.');\n\t\t\t\tsetTimeout(this.updateChannel.bind(this, room, newAttempts), 5000);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.log.error('Failed to fetch channel emotes.');\n\t\t\t\tthis.load_tracker.notify('chat-data', `ffzap-bttv-channel-${room.id}`, false);\n\t\t\t}\n\t\t}\n\t}\n\n\tupdateEmotes() {\n\t\tthis.updateGlobalEmotes();\n\n\t\tfor (const room of this.chat.iterateRooms()) {\n\t\t\tif (room) this.updateChannel(room);\n\t\t}\n\t}\n\n\tshouldSocketBeConnected() {\n\t\treturn this.chat.context.get('ffzap.betterttv.pro_badges')\n\t\t\t|| this.chat.context.get('ffzap.betterttv.pro_emoticons');\n\t}\n\n\tupdateProStatus() {\n\t\tif (this.shouldSocketBeConnected()) {\n\t\t\tthis.socket.connect();\n\t\t\t\n\t\t\tfor (const room of this.chat.iterateRooms()) {\n\t\t\t\tif (room) this.updateChannel(room);\n\t\t\t}\n\t\t} else {\n\t\t\tfor (const key in this.ProUsers) {\n\t\t\t\tif ({}.hasOwnProperty.call(this.ProUsers, key)) {\n\t\t\t\t\tthis.ProUsers[key].unload();\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.ProUsers = {};\n\t\t\t\n\t\t\tthis.socket.disconnectInternal();\n\t\t}\n\t}\n}\n\nBetterTTV.register();"],"names":["parent","events","i","channel","message","evt","e","event","data","Socket","userID","badge","emotes","emote","skipCheck","extraData","_emotes","set","ProUser","args","flags","room","msg","user","msg_user_id","bttvChannel","channelId","tokenize","emotesChanged","badgesChanged","pro_user","createdEmote","emoteId","existingEmote","payload","updatedEmote","oldName","wanted","badgeData","generate_css","attempts","response","types","reg","bData","name","newAttempts","realID","effectsID","globalBttv","arbitraryEmotes","nightSubEmotes","effectEmotes","knownEffects","Flags","overlayEmotes","arbitraryEmote","setEmotes","roomID","appendTwitch","id","code","animated","width","height","modifier","modifier_flags","modifier_prefix","require_spaces","bttvRoomID","channelEmotes","sharedEmotes","bots","bot","botUser","key","BetterTTV"],"sourceRoot":""}