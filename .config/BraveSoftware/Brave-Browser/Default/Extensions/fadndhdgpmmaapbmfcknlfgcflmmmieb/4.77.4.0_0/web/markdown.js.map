{"version":3,"file":"markdown.js","mappings":"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","sources":["webpack://frankerfacez/./node_modules/.pnpm/linkify-it@3.0.3/node_modules/linkify-it/index.js","webpack://frankerfacez/./node_modules/.pnpm/linkify-it@3.0.3/node_modules/linkify-it/lib/re.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it-link-attributes@3.0.0/node_modules/markdown-it-link-attributes/index.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/index.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/common/entities.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/common/html_blocks.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/common/html_re.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/common/utils.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/helpers/index.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/helpers/parse_link_destination.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/helpers/parse_link_label.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/helpers/parse_link_title.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/index.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/parser_block.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/parser_core.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/parser_inline.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/presets/commonmark.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/presets/default.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/presets/zero.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/renderer.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/ruler.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/rules_block/blockquote.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/rules_block/code.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/rules_block/fence.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/rules_block/heading.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/rules_block/hr.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/rules_block/html_block.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/rules_block/lheading.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/rules_block/list.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/rules_block/paragraph.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/rules_block/reference.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/rules_block/state_block.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/rules_block/table.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/rules_core/block.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/rules_core/inline.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/rules_core/linkify.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/rules_core/normalize.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/rules_core/replacements.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/rules_core/smartquotes.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/rules_core/state_core.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/rules_inline/autolink.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/rules_inline/backticks.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/rules_inline/balance_pairs.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/rules_inline/emphasis.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/rules_inline/entity.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/rules_inline/escape.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/rules_inline/html_inline.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/rules_inline/image.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/rules_inline/link.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/rules_inline/newline.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/rules_inline/state_inline.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/rules_inline/strikethrough.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/rules_inline/text.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/rules_inline/text_collapse.js","webpack://frankerfacez/./node_modules/.pnpm/markdown-it@12.2.0/node_modules/markdown-it/lib/token.js","webpack://frankerfacez/./node_modules/.pnpm/mdurl@1.0.1/node_modules/mdurl/decode.js","webpack://frankerfacez/./node_modules/.pnpm/mdurl@1.0.1/node_modules/mdurl/encode.js","webpack://frankerfacez/./node_modules/.pnpm/mdurl@1.0.1/node_modules/mdurl/format.js","webpack://frankerfacez/./node_modules/.pnpm/mdurl@1.0.1/node_modules/mdurl/index.js","webpack://frankerfacez/./node_modules/.pnpm/mdurl@1.0.1/node_modules/mdurl/parse.js","webpack://frankerfacez/./node_modules/.pnpm/punycode@2.1.1/node_modules/punycode/punycode.es6.js","webpack://frankerfacez/./node_modules/.pnpm/uc.micro@1.0.6/node_modules/uc.micro/categories/Cc/regex.js","webpack://frankerfacez/./node_modules/.pnpm/uc.micro@1.0.6/node_modules/uc.micro/categories/Cf/regex.js","webpack://frankerfacez/./node_modules/.pnpm/uc.micro@1.0.6/node_modules/uc.micro/categories/P/regex.js","webpack://frankerfacez/./node_modules/.pnpm/uc.micro@1.0.6/node_modules/uc.micro/categories/Z/regex.js","webpack://frankerfacez/./node_modules/.pnpm/uc.micro@1.0.6/node_modules/uc.micro/index.js","webpack://frankerfacez/./node_modules/.pnpm/uc.micro@1.0.6/node_modules/uc.micro/properties/Any/regex.js"],"sourcesContent":["'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n","'use strict';\n\n\nmodule.exports = function (opts) {\n  var re = {};\n\n  // Use direct extract instead of `regenerate` to reduse browserified size\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc  = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z   = require('uc.micro/categories/Z/regex').source;\n  re.src_P   = require('uc.micro/categories/P/regex').source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [ re.src_Z, re.src_Cc ].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  var text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter       = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth    = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')(?!-|_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-]).|' +  // allow `I'm_king` if no pair found\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in \"google search\" links (#66, #81).\n                                     // github has ... in commit range links,\n                                     // Restrict to\n                                     // - english\n                                     // - percent-encoded\n                                     // - parts of file path\n                                     // - params separator\n                                     // until more examples found.\n          '\\\\.(?!' + re.src_ZCc + '|[.]).|' +\n          (opts && opts['---'] ?\n            '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            :\n            '\\\\-+|'\n          ) +\n          ',(?!' + re.src_ZCc + ').|' +       // allow `,,,` in paths\n          ';(?!' + re.src_ZCc + ').|' +       // allow `;` if not followed by space-like char\n          '\\\\!+(?!' + re.src_ZCc + '|[!]).|' +  // allow `!!!` in paths, but not at the end\n          '\\\\?(?!' + re.src_ZCc + '|[?]).' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/*_root*/ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re;\n};\n","'use strict'\n\n// Adapted from https://github.com/markdown-it/markdown-it/blob/fbc6b0fed563ba7c00557ab638fd19752f8e759d/docs/architecture.md\n\nfunction findFirstMatchingConfig (link, configs) {\n  var i, config\n  var href = link.attrs[link.attrIndex('href')][1]\n\n  for (i = 0; i < configs.length; ++i) {\n    config = configs[i]\n\n    // if there is no pattern, config matches for all links\n    // otherwise, only return config if href matches the pattern set\n    if (!config.pattern || new RegExp(config.pattern).test(href)) {\n      return config\n    }\n  }\n}\n\nfunction applyAttributes (idx, tokens, attributes) {\n  Object.keys(attributes).forEach(function (attr) {\n    var attrIndex\n    var value = attributes[attr]\n\n    if (attr === 'className') {\n      // when dealing with applying classes\n      // programatically, some programmers\n      // may prefer to use the className syntax\n      attr = 'class'\n    }\n\n    attrIndex = tokens[idx].attrIndex(attr)\n\n    if (attrIndex < 0) { // attr doesn't exist, add new attribute\n      tokens[idx].attrPush([attr, value])\n    } else { // attr already exists, overwrite it\n      tokens[idx].attrs[attrIndex][1] = value // replace value of existing attr\n    }\n  })\n}\n\nfunction markdownitLinkAttributes (md, configs) {\n  if (!configs) {\n    configs = []\n  } else {\n    configs = Array.isArray(configs) ? configs : [configs]\n  }\n\n  Object.freeze(configs)\n\n  var defaultRender = md.renderer.rules.link_open || this.defaultRender\n\n  md.renderer.rules.link_open = function (tokens, idx, options, env, self) {\n    var config = findFirstMatchingConfig(tokens[idx], configs)\n    var attributes = config && config.attrs\n\n    if (attributes) {\n      applyAttributes(idx, tokens, attributes)\n    }\n\n    // pass token to default renderer.\n    return defaultRender(tokens, idx, options, env, self)\n  }\n}\n\nmarkdownitLinkAttributes.defaultRender = function (tokens, idx, options, env, self) {\n  return self.renderToken(tokens, idx, options)\n}\n\nmodule.exports = markdownitLinkAttributes\n","'use strict';\n\n\nmodule.exports = require('./lib/');\n","// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/lib/maps/entities.json');\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n","// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?][\\\\s\\\\S]*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n","// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","// Just a shortcut for bulk export\n'use strict';\n\n\nexports.parseLinkLabel       = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle       = require('./parse_link_title');\n","// Parse link destination\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code, level,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return result; }\n      if (code === 0x3C /* < */) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break; }\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n      if (level > 32) { return result; }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break; }\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n  if (level !== 0) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n","// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x28 /* ( */ && marker === 0x29 /* ) */) {\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n","// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  default: require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%');\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers);\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) { break; }\n    }\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  [ 'text_collapse',   require('./rules_inline/text_collapse') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) { break; }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) { break; }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n","// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(tokens[idx].content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      langAttrs = '',\n      highlighted, i, arr, tmpAttrs, tmpToken;\n\n  if (info) {\n    arr = info.split(/(\\s+)/g);\n    langName = arr[0];\n    langAttrs = arr.slice(2).join('');\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice();\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    } else if (tokens[i].type === 'softbreak') {\n      result += '\\n';\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n","// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      isOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // set offset past spaces and \">\"\n  initial = offset = state.sCount[startLine] + 1;\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n    // ' >   test '\n    //     ^ -- position start of line here:\n    pos++;\n    initial++;\n    offset++;\n    adjustTab = false;\n    spaceAfterMarker = true;\n  } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n    spaceAfterMarker = true;\n\n    if ((state.bsCount[startLine] + offset) % 4 === 3) {\n      // '  >\\t  test '\n      //       ^ -- position start of line here (tab has width===1)\n      pos++;\n      initial++;\n      offset++;\n      adjustTab = false;\n    } else {\n      // ' >\\t  test '\n      //    ^ -- position start of line here + shift bsCount slightly\n      //         to make extra space appear\n      adjustTab = true;\n    }\n  } else {\n    spaceAfterMarker = false;\n  }\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  oldBSCount = [ state.bsCount[startLine] ];\n  state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n  lastLineEmpty = pos >= max;\n\n  oldSCount = [ state.sCount[startLine] ];\n  state.sCount[startLine] = offset - initial;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    isOutdented = state.sCount[nextLine] < state.blkIndent;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      initial = offset = state.sCount[nextLine] + 1;\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        offset++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + offset) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          offset++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n';\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n","// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n","// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      nextLine,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[startLine] - state.listIndent >= 4 &&\n      state.sCount[startLine] < state.blkIndent) {\n    return false;\n  }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.tShift[startLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false;\n  }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ startLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ startLine, 0 ];\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1);\n    }\n\n    // change current state, then restore it after parser subcall\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n\n    state.tight = true;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine/*, endLine*/) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n","// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent (for example, if we are\n                       // inside a list, it would be positioned after list marker)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n\n  return state.src.substr(pos, max - pos);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      isEscaped = false,\n      lastPos = 0,\n      current = '';\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos));\n        current = '';\n        lastPos = pos + 1;\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1);\n        lastPos = pos;\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */);\n    pos++;\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(current + str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, l, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines, oldParentType, terminate,\n      terminatorRules, firstCh, secondCh;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  firstCh = state.src.charCodeAt(pos++);\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false; }\n\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  secondCh = state.src.charCodeAt(pos++);\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false;\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  columnCount = columns.length;\n  if (columnCount === 0 || columnCount !== aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'table';\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) { break; }\n    lineText = getLine(state, nextLine).trim();\n    if (!lineText) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    if (nextLine === startLine + 2) {\n      token     = state.push('tbody_open', 'tbody', 1);\n      token.map = tbodyLines = [ startLine + 2, 0 ];\n    }\n\n    token     = state.push('tr_open', 'tr', 1);\n    token.map = [ nextLine, nextLine + 1 ];\n\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  if (tbodyLines) {\n    token = state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n};\n","'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        for (ln = 0; ln < links.length; ln++) {\n\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n","// Normalize input string\n\n'use strict';\n\n\n// https://spec.commonmark.org/0.29/#line-ending\nvar NEWLINES_RE  = /\\r\\n?|\\n/g;\nvar NULL_RE      = /\\0/g;\n\n\nmodule.exports = function normalize(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - miltiplication 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r|p)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  p: '§',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.substr(0, index) + ch + str.substr(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n","// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\nvar AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var url, fullUrl, token, ch, start, max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  start = state.pos;\n  max = state.posMax;\n\n  for (;;) {\n    if (++pos >= max) return false;\n\n    ch = state.src.charCodeAt(pos);\n\n    if (ch === 0x3C /* < */) return false;\n    if (ch === 0x3E /* > */) break;\n  }\n\n  url = state.src.slice(start + 1, pos);\n\n  if (AUTOLINK_RE.test(url)) {\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  if (EMAIL_RE.test(url)) {\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  return false;\n};\n","// Parse backticks\n\n'use strict';\n\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, token, matchStart, matchEnd, openerLength, closerLength,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n  openerLength = marker.length;\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker;\n    state.pos += openerLength;\n    return true;\n  }\n\n  matchStart = matchEnd = pos;\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    closerLength = matchEnd - matchStart;\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        token     = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart;\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true;\n\n  if (!silent) state.pending += marker;\n  state.pos += openerLength;\n  return true;\n};\n","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(state, delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1, -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)];\n\n    openerIdx = closerIdx - closer.jump - 1;\n\n    // avoid crash if `closer.jump` is pointing outside of the array, see #742\n    if (openerIdx < -1) openerIdx = -1;\n\n    newMinOpenerIdx = openerIdx;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= opener.jump + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (opener.open && opener.end < 0) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            delimiters[openerIdx - 1].jump + 1 :\n            0;\n\n          closer.jump  = closerIdx - openerIdx + lastJump;\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.jump  = lastJump;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // An amount of characters before this one that's equivalent to\n      // current one. In plain English: if this delimiter does not open\n      // an emphasis, neither do previous `jump` characters.\n      //\n      // Used to skip sequences like \"*****\" in one step, for 1st asterisk\n      // value will be 0, for 2nd it's 1 and so on.\n      //\n      jump:   i,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               delimiters[startDelim.end + 1].token === endDelim.token + 1 &&\n               delimiters[i - 1].marker === startDelim.marker;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) { return false; }\n\n  if (pos + 1 < max) {\n    ch = state.src.charCodeAt(pos + 1);\n\n    if (ch === 0x23 /* # */) {\n      match = state.src.slice(pos).match(DIGITAL_RE);\n      if (match) {\n        if (!silent) {\n          code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n          state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    } else {\n      match = state.src.slice(pos).match(NAMED_RE);\n      if (match) {\n        if (has(entities, match[1])) {\n          if (!silent) { state.pending += entities[match[1]]; }\n          state.pos += match[0].length;\n          return true;\n        }\n      }\n    }\n  }\n\n  if (!silent) { state.pending += '&'; }\n  state.pos++;\n  return true;\n};\n","// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) { return false; }\n\n  pos++;\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch < 256 && ESCAPED[ch] !== 0) {\n      if (!silent) { state.pending += state.src[pos]; }\n      state.pos += 2;\n      return true;\n    }\n\n    if (ch === 0x0A) {\n      if (!silent) {\n        state.push('hardbreak', 'br', 0);\n      }\n\n      pos++;\n      // skip leading whitespaces from next line\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n\n      state.pos = pos;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += '\\\\'; }\n  state.pos++;\n  return true;\n};\n","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos;\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (!isSpace(code) && code !== 0x0A) { break; }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.md.inline.tokenize(state);\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        state.pending = state.pending.replace(/ +$/, '');\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {};\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = [];\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = [];\n\n  // backtick length => last seen position\n  this.backticks = {};\n  this.backticksScanned = false;\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n    this._prev_delimiters.push(this.delimiters);\n    this.delimiters = [];\n    token_meta = { delimiters: this.delimiters };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n","// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      jump:   i / 2, // for `~~` 1 marker = 2 characters\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\n\nmodule.exports = function text_collapse(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n","// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n","\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n","'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n","'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7E]/; // non-ASCII chars\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, fn) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = fn(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n\tconst parts = string.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tstring = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tstring = string.replace(regexSeparators, '\\x2E');\n\tconst labels = string.split('.');\n\tconst encoded = map(labels, fn).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = array => String.fromCodePoint(...array);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint - 0x30 < 0x0A) {\n\t\treturn codePoint - 0x16;\n\t}\n\tif (codePoint - 0x41 < 0x1A) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint - 0x61 < 0x1A) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tlet oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tlet inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tlet basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue == n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.1.0',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport { ucs2decode, ucs2encode, decode, encode, toASCII, toUnicode };\nexport default punycode;\n","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/"],"names":["assign","obj","sources","source","key","_class","isString","isObject","isRegExp","isFunction","escapeRE","str","defaultOptions","isOptionsObj","acc","k","defaultSchemas","text","pos","self","tail","tlds_2ch_src_re","tlds_default","resetScanCache","createValidator","re","createNormalizer","match","compile","tlds","untpl","tpl","aliases","schemaError","name","val","compiled","alias","slist","Match","shift","start","end","createMatch","LinkifyIt","schemas","options","schema","definition","m","ml","me","len","next","tld_pos","at_pos","result","list","keepOld","el","idx","arr","module","opts","text_separators","findFirstMatchingConfig","link","configs","i","config","href","applyAttributes","tokens","attributes","attr","attrIndex","value","markdownitLinkAttributes","md","defaultRender","env","attr_name","unquoted","single_quoted","double_quoted","attr_value","attribute","open_tag","close_tag","comment","processing","declaration","cdata","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","_hasOwnProperty","has","object","arrayReplaceAt","src","newElements","isValidEntityCode","c","fromCodePoint","surrogate1","surrogate2","UNESCAPE_MD_RE","ENTITY_RE","UNESCAPE_ALL_RE","DIGITAL_ENTITY_TEST_RE","entities","replaceEntityPattern","code","unescapeMd","unescapeAll","escaped","entity","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","ch","escapeHtml","REGEXP_ESCAPE_RE","isSpace","isWhiteSpace","UNICODE_PUNCT_RE","isPunctChar","isMdAsciiPunct","normalizeReference","exports","max","level","lines","state","disableNested","found","marker","prevPos","labelEnd","oldPos","utils","helpers","Renderer","ParserCore","ParserBlock","ParserInline","mdurl","punycode","BAD_PROTO_RE","GOOD_DATA_RE","validateLink","url","RECODE_HOSTNAME_FOR","normalizeLink","parsed","normalizeLinkText","MarkdownIt","presetName","presets","ignoreInvalid","chain","missed","plugin","args","Ruler","_rules","startLine","endLine","ok","rules","line","hasEmptyLines","maxNesting","outTokens","Core","l","_rules2","cache","default_rules","slf","token","info","langName","langAttrs","highlighted","tmpAttrs","tmpToken","nextToken","needLf","type","chains","rule","altName","fn","index","opt","beforeName","ruleName","afterName","chainName","silent","adjustTab","initial","lastLineEmpty","nextLine","offset","oldBMarks","oldBSCount","oldIndent","oldParentType","oldSCount","oldTShift","spaceAfterMarker","terminate","terminatorRules","isOutdented","oldLineMax","last","params","mem","markup","haveEndMarker","tmp","cnt","block_names","HTML_SEQUENCES","lineText","content","skipBulletListMarker","skipOrderedListMarker","markTightParagraphs","contentStart","indent","indentAfterMarker","isOrdered","itemLines","listLines","listTokIdx","markerCharCode","markerValue","oldListIndent","oldTight","posAfterMarker","prevEmptyEnd","isTerminatingParagraph","tight","_endLine","destEndPos","destEndLineNo","label","res","title","Token","StateBlock","s","indent_found","tag","nesting","from","min","begin","keepLastLF","lineIndent","first","queue","lineStart","getLine","escapedSplit","isEscaped","lastPos","current","columns","columnCount","aligns","t","tableLines","tbodyLines","firstCh","secondCh","tok","isLinkOpen","isLinkClose","j","currentToken","nodes","ln","htmlLinkLevel","fullUrl","urlText","blockTokens","links","NEWLINES_RE","NULL_RE","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","blkIdx","QUOTE_TEST_RE","QUOTE_RE","APOSTROPHE","replaceAt","process_inlines","thisLevel","item","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","canOpen","canClose","isSingle","stack","openQuote","closeQuote","OUTER","StateCore","EMAIL_RE","AUTOLINK_RE","matchStart","matchEnd","openerLength","closerLength","processDelimiters","delimiters","closerIdx","openerIdx","closer","opener","minOpenerIdx","newMinOpenerIdx","isOddMatch","lastJump","openersBottom","curr","tokens_meta","scanned","postProcess","startDelim","endDelim","isStrong","DIGITAL_RE","NAMED_RE","ESCAPED","isLetter","lc","attrs","labelStart","ref","parseReference","pmax","StateInline","token_meta","canSplitWord","count","can_open","can_close","left_flanking","right_flanking","loneMarkers","isTerminatorChar","attrData","decodeCache","getDecodeCache","exclude","decode","string","seq","b1","b2","b3","b4","chr","encodeCache","getEncodeCache","encode","keepEscaped","nextCode","Url","protocolPattern","portPattern","simplePathPattern","delims","unwise","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","hostlessProtocol","slashedProtocol","urlParse","slashesDenoteHost","u","lowerProto","hec","slashes","rest","simplePath","proto","hostEnd","auth","atSign","host","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","hash","qm","port","maxInt","base","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","errors","baseMinusTMin","floor","stringFromCharCode","error","map","array","length","mapDomain","parts","labels","encoded","ucs2decode","output","counter","extra","ucs2encode","basicToDigit","codePoint","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","input","inputLength","n","bias","basic","oldi","w","baseMinusT","out","currentValue","basicLength","handledCPCount","handledCPCountPlusOne","q","qMinusT","toUnicode","toASCII"],"sourceRoot":""}