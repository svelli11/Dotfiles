(()=>{var n=Object.defineProperty;var r=(d,a)=>n(d,"name",{value:a,configurable:!0});(()=>{var d={};const i=class i extends FrankerFaceZ.utilities.addon.Addon{constructor(...e){super(...e),this.inject("chat.badges"),this.domain="https://modchecker.com",this.apiBase=`${this.domain}/api/v1`,this.badgeBase=this.domain,this.clickRedirectLink=this.domain,this.namespace="addon.modchecker",this.badgeIds=new Set}onEnable(){this.loadBadges()}onDisable(){this.unloadBadges()}async loadBadges(){const e=await this.fetchBadgeData();for(const t of e){const s=this.registerBadge(t);this.badges.setBulk(this.namespace,s,t.users)}this.emit("chat:update-lines")}unloadBadges(){for(const e of this.badgeIds.values())this.badges.removeBadge(e);this.emit("chat:update-lines")}createBadgeId(e){e=e.toLowerCase().replace(/\s*modchecker\s*/g,"").replace(/\s+/g,"-");const t=`${this.namespace}.badge-${e}`;return this.badgeIds.add(t),t}registerBadge(e){const t=this.createBadgeId(e.name);return this.badges.loadBadgeData(t,{id:t,name:e.name,title:e.name,click_url:this.clickRedirectLink,image:e.path,urls:{1:e.path,2:e.path,3:e.path},slot:e.ffzSlot}),t}fetchBadgeData(){return this.request("chatBadges")}async request(e,t=[]){try{const s=await fetch(`${this.apiBase}/${e}`);if(s.ok)return await s.json()}catch(s){this.log.error(s)}return t}};r(i,"Modchecker");let a=i;a.register("modchecker",null,"1.0")})();})();

//# sourceMappingURL=script.js.map