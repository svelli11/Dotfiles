{"version":3,"file":"unread-mentions-counter/script.js","mappings":"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","sources":["webpack://ffz-addons/./src/unread-mentions-counter/index.js"],"sourcesContent":["class UnreadMentionsCounter extends Addon {\n\tconstructor( ...args ) {\n\t\tsuper( ...args );\n\n\t\tthis.mentionCounterRegExp = /\\(@[0-9]*\\)/;\n\t\tthis.titleObserver        = new MutationObserver( this.monitorTitle );\n\t\tthis.counterLocation      = this.settings.get( 'addon.unread-mentions-counter.counter-location' ) || 'icon';\n\t\tthis.favicon              = {\n\t\t\telement:  {\n\t\t\t\t16: document.querySelector( 'link[rel=\"icon\"][sizes=\"16x16\"]' ),\n\t\t\t\t32: document.querySelector( 'link[rel=\"icon\"][sizes=\"32x32\"]' )\n\t\t\t},\n\t\t\toriginal: {\n\t\t\t\t16: null,\n\t\t\t\t32: null\n\t\t\t}\n\t  \t};\n\n\t\tthis.favicon.original[16] = this.favicon.element[16].href;\n\t\tthis.favicon.original[32] = this.favicon.element[32].href;\n\n\t\tthis.inject( 'chat' );\n\n\t\tthis.initializeSettings();\n\t}\n\n\t/**\n\t * Initialize add-on settings\n\t */\n\tinitializeSettings() {\n\t\tthis.settings.add( 'addon.unread-mentions-counter.counter-location', {\n\t\t\tdefault: 'icon',\n\t\t\tui: {\n\t\t\t\tpath:        'Add-Ons > Unread Mentions Counter >> Behavior',\n\t\t\t\ttitle:       'Counter Location',\n\t\t\t\tdescription: 'Will not take effect until counter changes or page is refreshed.',\n\t\t\t\tcomponent:   'setting-select-box',\n\t\t\t\tdata:        [\n\t\t\t\t\t{ value: 'icon',      title: 'Icon' },\n\t\t\t\t\t{ value: 'tab-title', title: 'Tab Title' },\n\t\t\t\t\t{ value: 'both',      title: 'Icon + Tab Title' }\n\t\t\t\t]\n\t\t\t}\n\t\t} );\n\n\t\tthis.settings.add( 'addon.unread-mentions-counter.ping-types', {\n\t\t\tdefault: [ 'mention' ],\n\t\t\ttype: 'basic_array_merge',\n\t\t\tui: {\n\t\t\t\tpath:        'Add-Ons > Unread Mentions Counter >> Behavior',\n\t\t\t\ttitle:       'Ping Types',\n\t\t\t\tdescription: 'Surprise! This add-on isn\\'t *just* for mentions. Select which types of pings/highlights to count.',\n\t\t\t\tcomponent:   'setting-select-box',\n\t\t\t\tmultiple:    true,\n\t\t\t\tdata:        () => this.chat.getHighlightReasons()\n\t\t\t}\n\t\t} );\n\n\t\tthis.settings.add( 'addon.unread-mentions-counter.browser-notifications.enabled', {\n\t\t\tdefault: false,\n\t\t\tui:      {\n\t\t\t\tpath:        'Add-Ons > Unread Mentions Counter >> Browser Notifications',\n\t\t\t\ttitle:       'Enable Browser Notifications',\n\t\t\t\tdescription: 'Enable browser notifications for new unread mentions/pings.\\n\\n**NOTE:** This requires enabling browser notifications on Twitch as a whole so if you don\\'t want to receive browser notifications from Twitch itself be sure to disable those in the Notification Settings of your Twitch account.',\n\t\t\t\tcomponent:  'setting-check-box',\n\t\t\t\tonUIChange: ( val ) => val && this.requestNotificationsPermission() // For some reason this works but setting changed: on this setting doesn't\n\t\t\t}\n\t\t} );\n\n\t\tthis.settings.add( 'addon.unread-mentions-counter.browser-notifications.interact-to-close', {\n\t\t\tdefault: false,\n\t\t\tui:      {\n\t\t\t\tpath:        'Add-Ons > Unread Mentions Counter >> Browser Notifications',\n\t\t\t\ttitle:       'Interact To Close',\n\t\t\t\tdescription: 'If enabled, notifications will only close when you manually close them. Otherwise, notifications will automatically close after several seconds.',\n\t\t\t\tcomponent:   'setting-check-box'\n\t\t\t}\n\t\t} );\n\n\t\tthis.settings.add( 'addon.unread-mentions-counter.browser-notifications.icon-photo', {\n\t\t\tdefault: 'channel',\n\t\t\tui:      {\n\t\t\t\tpath:        'Add-Ons > Unread Mentions Counter >> Browser Notifications',\n\t\t\t\ttitle:       'Notification Icon Photo',\n\t\t\t\tdescription: 'Choose whose profile photo should be displayed in the notification.',\n\t\t\t\tcomponent:   'setting-select-box',\n\t\t\t\tdata:        [\n\t\t\t\t\t{ value: 'channel',        title: 'Channel' },\n\t\t\t\t\t{ value: 'message-author', title: 'Message Author' }\n\t\t\t\t]\n\t\t\t}\n\t\t} );\n\n\t\tthis.settings.add( 'addon.unread-mentions-counter.icon.bg-color', {\n\t\t\tdefault: 'rgba(255, 0, 0, 1.0)',\n\t\t\tui:      {\n\t\t\t\tpath:        'Add-Ons > Unread Mentions Counter >> Icon Counter Appearance',\n\t\t\t\ttitle:       'Background Color',\n\t\t\t\tdescription: 'This is the color of the icon counter\\'s circular background.',\n\t\t\t\tcomponent:   'setting-color-box',\n\t\t\t\talpha:       true,\n\t\t\t\topenUp:      true\n\t\t\t},\n\t\t\tchanged: () => { this.insertIconCounter(); }\n\t\t} );\n\n\t\tthis.settings.add( 'addon.unread-mentions-counter.icon.text-color', {\n\t\t\tdefault: 'rgba(255, 255, 255, 1.0)',\n\t\t\tui:      {\n\t\t\t\tpath:        'Add-Ons > Unread Mentions Counter >> Icon Counter Appearance',\n\t\t\t\ttitle:       'Text Color',\n\t\t\t\tdescription: 'This is the color of the icon counter\\'s text (i.e. the number of unread mentions/pings).',\n\t\t\t\tcomponent:  'setting-color-box',\n\t\t\t\talpha:       true,\n\t\t\t\topenUp:      true\n\t\t\t},\n\t\t\tchanged: () => { this.insertIconCounter(); }\n\t\t} );\n\t}\n\n\t/**\n\t * Monitor new messages and detect user mentions/pings\n\t */\n\tcountMentions( event ) {\n\t\tconst \tmsg              = event.message,\n\t\t\t\tpingTypes        = this.settings.get( 'addon.unread-mentions-counter.ping-types' ),\n\t\t\t\tmatchedPings     = pingTypes.filter( ( value ) => msg.highlights?.has( value ) ),\n\t\t\t\tnotificationIcon = this.settings.get( 'addon.unread-mentions-counter.browser-notifications.icon-photo' ) === 'channel' ? msg.roomID : msg.user.id;\n\n\t\tlet pingAction = 'Mention';\n\n\t\t// Only count if the chat/browser window are inactive and the chat message is new, active, and actually contains a mention/ping of the user\n\t\tif ( ( document.visibilityState === 'visible' && document.hasFocus() ) || msg.deleted || msg.isHistorical || msg.ffz_removed || ! msg.mentioned ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( msg.mentioned && matchedPings.length > 0 ) {\n\t\t\tthis.mentionCount++;\n\n\t\t\tthis.insertCounters();\n\n\t\t\tif ( ! matchedPings.includes( 'mention' ) ) {\n\t\t\t\tpingAction = 'Ping';\n\t\t\t}\n\n\t\t\tif ( this.settings.get( 'addon.unread-mentions-counter.browser-notifications.enabled' ) ) {\n\t\t\t\tconst notification = new Notification( `${pingAction}ed by ${msg.user.displayName} in ${msg.roomLogin}'s chat`, {\n\t\t\t\t\tbody: `${msg.user.displayName}: ${msg.message}`,\n\t\t\t\t\ticon: `https://cdn.frankerfacez.com/avatar/twitch/${notificationIcon}`,\n\t\t\t\t\trequireInteraction: this.settings.get( 'addon.unread-mentions-counter.browser-notifications.interact-to-close' )\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t}\n\n\tcreateIcon() {\n\t\tfor ( const size of [ 16, 32 ] ) {\n\t\t\tconst \tcanvas  = document.createElement( 'canvas' ),\n\t\t\t\t\tcontext = canvas.getContext( '2d' ),\n\t\t\t\t\timg     = new Image();\n\n\t\t\tcanvas.width  = size;\n\t\t\tcanvas.height = size;\n\n\t\t\timg.crossOrigin = 'anonymous';\n\n\t\t\timg.onload = () => {\n\t\t\t\tcontext.drawImage( img, 0, 0, size, size );\n\n\t\t\t\t// Icon Counter Background\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.arc( canvas.width - size / 3, size / 3, size / 3, 0, 2 * Math.PI );\n\t\t\t\tcontext.fillStyle = this.settings.get( 'addon.unread-mentions-counter.icon.bg-color' );\n\t\t\t\tcontext.fill();\n\n\t\t\t\t// Icon Counter Text\n\t\t\t\tcontext.font         = Math.ceil( size / 1.78 ) + 'px Inter, \"Helvetica Neue\", Helvetica, Arial, sans-serif';\n\t\t\t\tcontext.textAlign    = 'center';\n\t\t\t\tcontext.textBaseline = 'middle';\n\t\t\t\tcontext.fillStyle    = this.settings.get( 'addon.unread-mentions-counter.icon.text-color' );\n\t\t\t\tcontext.fillText( this.mentionCount, canvas.width - size / 3, size / 2.75 );\n\n\t\t\t\tthis.favicon.element[ size ].href = canvas.toDataURL();\n\t\t\t};\n\n\t\t\timg.src = '/favicon.ico';\n\t\t}\n\t}\n\n\tinsertCounters() {\n\t\tthis.insertIconCounter();\n\n\t\tthis.insertTitleCounter();\n\t}\n\n\tinsertIconCounter() {\n\t\tif ( this.mentionCount > 0 && [ 'both', 'icon' ].includes( this.counterLocation ) ) {\n\t\t\tthis.createIcon();\n\t\t} else {\n\t\t\tthis.resetIcon();\n\t\t}\n\t}\n\n\tinsertTitleCounter() {\n\t\tif ( this.mentionCount === 0 || ! [ 'both', 'tab-title' ].includes( this.counterLocation ) ) {\n\t\t\tthis.resetTitle();\n\n\t\t\treturn;\n\t\t}\n\n\t\tif ( document.title.match( this.mentionCounterRegExp ) ) {\n\t\t\tdocument.title = document.title.replace( this.mentionCounterRegExp, `(@${this.mentionCount})` );\n\t\t} else {\n\t\t\tdocument.title = `(@${this.mentionCount}) ${document.title}`;\n\t\t}\n\t}\n\n\t/**\n\t * Try to monitor when Twitch changes the title (e.g. adding a \"(1)\", etc. when receiving a gift sub or similar event) and re-add counter if it existed before the change\n\t */\n\tmonitorTitle( mutations ) {\n\t\tif ( ! mutations[0].target.textContent.match( this.mentionCounterRegExp ) && this.mentionCount > 0 ) {\n\t\t\tthis.insertTitleCounter();\n\t\t}\n\t}\n\n\tonDisable() {\n\t\tthis.stopCounting();\n\t}\n\n\tonEnable() {\n\t\tthis.mentionCount = 0;\n\n\t\tthis.toggleCounting( this );\n\n\t\t// Detect if tab/browser window is active or inactive and start/stop counter accordingly\n\t\tdocument.addEventListener( 'visibilitychange', () => { this.toggleCounting( this ); }, false );\n\t\twindow.addEventListener( 'blur', () => { this.toggleCounting( this ); }, false );\n\t\twindow.addEventListener( 'focus', () => { this.toggleCounting( this ); }, false );\n\n\t\tthis.log.info( 'Unread Mentions Counter add-on successfully enabled.' );\n\t}\n\n\trequestNotificationsPermission() {\n\t\tNotification.requestPermission().then( ( permission ) => {\n\t\t\tif ( permission === 'granted' ) {\n\t\t\t\tthis.log.info( 'Browser notification permission has been granted by the user.' );\n\t\t\t} else {\n\t\t\t\tthis.log.info( 'Browser notification permission has been denied by the user.' );\n\t\t\t}\n\t\t} );\n\t}\n\n\tresetIcon() {\n\t\tthis.favicon.element[16].href = this.favicon.original[16];\n\t\tthis.favicon.element[32].href = this.favicon.original[32];\n\t}\n\n\tresetTitle() {\n\t\tdocument.title = document.title.replace( this.mentionCounterRegExp, '' ).trim();\n\t}\n\n\tstopCounting() {\n\t\tthis.mentionCount   = 0;\n\t\tthis.observingTitle = false;\n\n\t\tthis.resetTitle();\n\n\t\tthis.resetIcon();\n\n\t\tthis.titleObserver.disconnect();\n\n\t\tthis.off( 'chat:buffer-message', this.countMentions, this );\n\t}\n\n\t/**\n\t * \n\t * @param {UnreadMentionsCounter} umcClass The UnreadMentionCounter class itself normally assigned to `this`\n\t */\n\ttoggleCounting( umcClass ) {\n\t\tif ( document.visibilityState === 'hidden' || ( document.visibilityState === 'visible' && ! document.hasFocus() ) ) {\n\t\t\tif ( this.observingTitle ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.titleObserver.observe( document.getElementsByTagName( 'title' )[0], { subtree: true,characterData: true, childList: true } );\n\n\t\t\tthis.observingTitle = true;\n\n\t\t\tumcClass.on( 'chat:buffer-message', umcClass.countMentions, umcClass );\n\t\t} else {\n\t\t\tumcClass.stopCounting();\n\t\t}\n\t}\n}\n\nUnreadMentionsCounter.register();\n"],"names":["args","val","event","msg","pingTypes","matchedPings","value","notificationIcon","pingAction","notification","size","canvas","context","img","mutations","permission","umcClass","UnreadMentionsCounter"],"sourceRoot":""}