!function(){try{var t="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:{},e=(new t.Error).stack;e&&(t._sentryDebugIds=t._sentryDebugIds||{},t._sentryDebugIds[e]="7d9f78c0-beb8-46b7-8a55-c3a5bd03bcb6",t._sentryDebugIdIdentifier="sentry-dbid-7d9f78c0-beb8-46b7-8a55-c3a5bd03bcb6")}catch(t){}}();var _global="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:{};_global.SENTRY_RELEASE={id:"5.4.5"},(globalThis.webpackChunkfloccus=globalThis.webpackChunkfloccus||[]).push([[936],{9767:(t,e,a)=>{"use strict";a.r(e),a.d(e,{default:()=>m}),a(33110),a(3362);var o=a(7737),r=a(3363),l=a.n(r),i=a(21406),n=a(49845),c=a.n(n),s=a(2142),d=a(18465),k=a.n(d),u=a(29242);const w=new(k());class m{constructor(t){this.accountId=t}static async changeEntry(t,e,a){await w.acquire(t,(async()=>{let r=await m.getEntry(t,a);r=e(r),await o.default.storage.local.set({[t]:JSON.stringify(r)})}))}static async getEntry(t,e){let a=await o.default.storage.local.get(t);try{if(a[t]){for(;"string"==typeof a[t];)a[t]=JSON.parse(a[t]);return a[t]}return e}catch(t){return u.default.log("Error while parsing BrowserAccountStorage entry value "+t.message),console.error(t),e}}static deleteEntry(t){return o.default.storage.local.remove(t)}static async getAllAccounts(){let t=await m.getEntry("accounts",{});return Object.keys(t)}async getAccountData(t){let e=(await m.getEntry("accounts",{}))[this.accountId];return t&&(e.iv?(e.password=await i.A.decryptAES(t,e.iv,e.password),delete e.iv):(e.password=await l().decryptAES(t,e.password,e.username),e.passphrase&&(e.passphrase=await l().decryptAES(t,e.passphrase,e.username)))),e}async setAccountData(t,e){let a=t;return e&&(t.iv&&delete t.iv,a={...t,password:await l().encryptAES(e,t.password,t.username),...t.passphrase&&{passphrase:await l().encryptAES(e,t.passphrase,t.username)}}),m.changeEntry("accounts",(t=>(t[this.accountId]=a,t)),{})}async deleteAccountData(){await m.changeEntry("accounts",(t=>(delete t[this.accountId],t))),await this.deleteCache(),await this.deleteMappings()}async initCache(){await m.changeEntry(`bookmarks[${this.accountId}].cache`,(()=>({})))}async getCache(){const t=await m.getEntry(`bookmarks[${this.accountId}].cache`);return s.Folder.hydrate(t&&Object.keys(t).length?t:{location:s.ItemLocation.LOCAL})}async setCache(t){await m.changeEntry(`bookmarks[${this.accountId}].cache`,(()=>t))}async deleteCache(){await m.deleteEntry(`bookmarks[${this.accountId}].cache`)}async initMappings(){await m.changeEntry(`bookmarks[${this.accountId}].mappings`,(()=>({})))}async getMappings(){const t=await m.getEntry(`bookmarks[${this.accountId}].mappings`);return new(c())(this,t&&Object.keys(t).length?t:{bookmarks:{ServerToLocal:{},LocalToServer:{}},folders:{ServerToLocal:{},LocalToServer:{}}})}async setMappings(t){await m.changeEntry(`bookmarks[${this.accountId}].mappings`,(()=>t))}async deleteMappings(){await m.deleteEntry(`bookmarks[${this.accountId}].mappings`)}async getCurrentContinuation(){return m.getEntry(`bookmarks[${this.accountId}].continuation`)}async setCurrentContinuation(t){await m.changeEntry(`bookmarks[${this.accountId}].continuation`,(e=>({...t,createdAt:Date.now()})),null)}}},51786:()=>{},82585:(t,e,a)=>{"use strict";a.r(e),a(78350),a(23792),a(26910),a(30237),a(17427),a(87607),a(3362),a(98992),a(54520),a(72577),a(30670),a(3949),a(81454),a(37550),a(62953),a(3296),a(27208),a(48408);var o=a(4820),r=a(15553),l=a.n(r),i=a(534),n=a.n(i),c=a(7391),s=a.n(c),d=a(15879),k=a.n(d),u=a(2142),w=a(7737),m=a(3363),f=a.n(m),h=a(89185),p=a(21406),g=a(7486),b=a.n(g),y=a(89648),I=a(67083),v=a.n(I);o.Ay.use(l());const T=o.Ay.expect;let B=function(t,e,a){F(t,e,0,a,!(arguments.length>3&&void 0!==arguments[3])||arguments[3])},F=function(t,e,a,o,r){try{if(T(t.title).to.equal(e.title),e.url)T(t.url).to.equal(e.url);else{!1===r&&(e.children.sort(((t,e)=>t.title<e.title?-1:t.title>e.title?1:0)),t.children.sort(((t,e)=>t.title<e.title?-1:t.title>e.title?1:0)));let l=o?t.children.filter((t=>!D(t))):t.children,i=o?e.children.filter((t=>!D(t))):e.children;T(l).to.have.length(i.length),i.forEach(((t,e)=>{F(l[e],t,a+1,o,r)}))}}catch(l){throw console.log(`Trees are not equal: (recDepth: ${a}, checkOrder: ${r}, ignoreEmptyFolders: ${o})\n`,"Tree 1:\n"+t.inspect(0)+"\n","Tree 2:\n"+e.inspect(0)),l}};function D(t){return!(t instanceof u.Bookmark||t.children.some((t=>!D(t))))}async function S(t){let e;return await R(t,(async()=>{e=await t.server.getBookmarksTree(!0)})),e}async function R(t,e){const a=t.server;a.onSyncStart&&await a.onSyncStart(),await e(),a.onSyncComplete&&await a.onSyncComplete()}async function E(t,e,a,o){for(let r=0;r<o;r++){let o,r,l,i,c,s;try{if(o=a[n().int(0,a.length-1)],r=e[n().int(0,e.length-1)],await w.default.bookmarks.move(o.id,{parentId:r.id}),console.log("Move "+o.title+" to "+r.id),l=e[n().int(0,e.length-1)],i=e[n().int(0,e.length-1)],l===i)continue;const d=(await w.default.bookmarks.getSubTree(l.id))[0],k=(await w.default.bookmarks.getSubTree(t.getData().localRoot))[0];if(u.Folder.hydrate(d).findFolder(i.id))continue;if(!u.Folder.hydrate(k).findFolder(i.id))continue;await w.default.bookmarks.move(l.id,{parentId:i.id}),console.log("Move #"+l.id+"["+l.title+"] to "+i.id),c=e[n().int(0,e.length-1)];const m=await w.default.bookmarks.create({title:"newFolder"+Math.random(),parentId:c.id});e.push(m),console.log("Created #"+m.id+"["+m.title+"] in "+c.id),s=e[n().int(0,e.length-1)];const f=await w.default.bookmarks.create({title:"newBookmark"+Math.random(),url:"http://ur.l/"+s.id+"/"+Math.random(),parentId:s.id});a.push(f),console.log("Created #"+f.id+"["+f.title+"] in "+s.id)}catch(t){console.log(t)}}}async function C(t,e,a,o){for(let r=0;r<o;r++){let o,r,l,i,c,s;try{o=a[n().int(0,a.length-1)],await w.default.bookmarks.remove(o.id),a.splice(a.indexOf(o),1),console.log("Remove "+o.title),o=a[n().int(0,a.length-1)];const d="renamed"+Math.random();if(await w.default.bookmarks.update(o.id,{title:d}),console.log("Rename #"+o.id+"["+o.title+"] to "+d),r=e[n().int(0,e.length-1)],await w.default.bookmarks.removeTree(r.id),e.splice(e.indexOf(r),1),console.log("Removed #"+r.id+"["+r.title+"]"),o=a[n().int(0,a.length-1)],r=e[n().int(0,e.length-1)],await w.default.bookmarks.move(o.id,{parentId:r.id}),console.log("Move "+o.title+" to "+r.id),l=e[n().int(0,e.length-1)],i=e[n().int(0,e.length-1)],l===i)continue;const k=(await w.default.bookmarks.getSubTree(l.id))[0],m=(await w.default.bookmarks.getSubTree(t.getData().localRoot))[0];if(u.Folder.hydrate(k).findFolder(i.id))continue;if(!u.Folder.hydrate(m).findFolder(i.id))continue;await w.default.bookmarks.move(l.id,{parentId:i.id}),console.log("Move #"+l.id+"["+l.title+"] to "+i.id),c=e[n().int(0,e.length-1)];const f=await w.default.bookmarks.create({title:"newFolder"+Math.random(),parentId:c.id});e.push(f),console.log("Created #"+f.id+"["+f.title+"] in "+c.id),s=e[n().int(0,e.length-1)];const h=await w.default.bookmarks.create({title:"newBookmark"+Math.random(),url:"http://ur.l/"+s.id+"/"+Math.random(),parentId:s.id});a.push(h),console.log("Created #"+h.id+"["+h.title+"] in "+s.id)}catch(t){console.log(t)}}}async function _(t){await t.sync();try{T(t.getData().error).to.not.be.ok}catch(e){if(!t.getData().error.includes("E026")&&!t.getData().error.includes("E027"))throw e;console.log(t.getData().error),t.lockTimeout=0,await _(t)}}function x(t){return`${t.type}${(t.noCache?"-noCache":"")+(void 0!==t.bookmark_file_type?"-"+t.bookmark_file_type:"")+("google-drive"===t.type&&t.password||"webdav"===t.type&&t.passphrase?"-encrypted":"")}`}function O(){return Promise.race([new Promise((t=>{w.default.tabs.onUpdated.addListener((()=>{w.default.tabs.onUpdated.removeListener(t),setTimeout((()=>t()),1e3)}))})),new Promise((t=>setTimeout(t,1100)))])}describe("Floccus",(function(){this.timeout(12e4),this.slow(2e4);const t=new URL(window.location.href).searchParams;let e,a,o,r,l,i,c;e=t.get("server")||"http://localhost",a={username:t.get("username")||"admin",password:t.get("password")||"admin"},r=t.get("app_version")||"stable",i=t.get("browser")||"firefox",l=new URL(window.location.href).searchParams.get("seed")||Math.random()+"",console.log("RANDOMNESS SEED",l),n().use(s()(l)),c=35,o=[y.default.getDefaultValues(),{...y.default.getDefaultValues(),noCache:!0},{type:"nextcloud-bookmarks",url:e,...a},{type:"nextcloud-bookmarks",url:e,serverRoot:"/my folder/some subfolder",...a},{type:"webdav",url:`${e}/remote.php/webdav/`,bookmark_file:"bookmarks.xbel",bookmark_file_type:"xbel",...a},{type:"webdav",url:`${e}/remote.php/webdav/`,bookmark_file:"bookmarks.xbel",bookmark_file_type:"xbel",passphrase:n().float(),...a},{type:"webdav",url:`${e}/remote.php/webdav/`,bookmark_file:"bookmarks.html",bookmark_file_type:"html",...a},{type:"webdav",url:`${e}/remote.php/webdav/`,bookmark_file:"bookmarks.html",bookmark_file_type:"html",passphrase:n().float(),...a},{type:"git",url:`${e}/test.git`,branch:"main",bookmark_file:"bookmarks.xbel",bookmark_file_type:"xbel",...a},{type:"git",url:`${e}/test.git`,branch:"main",bookmark_file:"bookmarks.html",bookmark_file_type:"html",...a},{type:"google-drive",bookmark_file:Math.random()+".xbel",password:"",refreshToken:a.password},{type:"google-drive",bookmark_file:Math.random()+".xbel",password:n().float(),refreshToken:a.password},{type:"linkwarden",url:e,serverFolder:"Floccus-"+Math.random(),...a}],before((async function(){(await b().getSingleton()).setEnabled(!1)})),after((async function(){(await b().getSingleton()).setEnabled(!0)})),describe("Crypto",(function(){it("should encrypt and decrypt correctly",(async function(){const t="test",e="blah",a="I don't know",o=await f().encryptAES(t,a,e);console.log(o);const r=await f().decryptAES(t,o,e);T(r).to.equal(a),console.log(r),console.log(a)})),it("should encrypt and decrypt correctly (even with defunct crypto)",(async function(){const t="test",e="I don't know",a=await p.A.encryptAES(t,p.A.iv,e);console.log(a);const o=await p.A.decryptAES(t,p.A.iv,a);T(o).to.equal(e),console.log(o),console.log(e)}))})),o.forEach((t=>{describe(`${x(t)} test ${t.serverRoot?"subfolder":"root"} Account`,(function(){let e;beforeEach("set up account",(async function(){e=await k().create(t)})),afterEach("clean up account",(async function(){if(e){let t=e.getData().localRoot;t&&await w.default.bookmarks.removeTree(t),await e.delete()}})),it("should create an account",(async function(){const t=await k().get(e.id);T(t.getData()).to.deep.equal(e.getData())})),it("should save and restore an account",(async function(){await e.setData(t),T(e.getData()).to.deep.equal({...e.getData(),...t});const a=await k().get(e.id);T(a.getData()).to.deep.equal({...a.getData(),...t})})),it("should delete an account",(async function(){await e.delete(),T(k().get(e.id)).to.be.rejected,e=null})),it("should not be initialized upon creation",(async function(){T(await e.isInitialized()).to.be.false}))})),describe(`${x(t)} test ${t.serverRoot?"subfolder":"root"} Sync`,(function(){context("with one client",(function(){let e;beforeEach("set up account",(async function(){e=await k().create(t),"fake"===t.type&&(e.server.bookmarksCache=new u.Folder({id:"",title:"root",location:"Server"})),await e.init(),t.noCache&&(e.storage.setCache=()=>{},e.storage.setMappings=()=>{})})),afterEach("clean up account",(async function(){if(e){try{await w.default.bookmarks.removeTree(e.getData().localRoot)}catch(t){console.error(t)}if("git"===t.type)await e.server.clearServer();else if("fake"!==t.type){await e.setData({serverRoot:null}),e.lockTimeout=0;const t=await S(e);await R(e,(async()=>{await h.each(t.children,(async t=>{t instanceof u.Folder?await e.server.removeFolder(t):await e.server.removeBookmark(t)}))}))}if("google-drive"===t.type){const t=(await e.server.listFiles("name = '"+e.server.bookmark_file+"'")).files;for(const a of t)await e.server.deleteFile(a.id);if(t.length>1)throw new Error("Google Drive sync left more than one file behind")}await e.delete()}})),it("should create local bookmarks on the server",(async function(){const t=e.getData().localRoot,a=await w.default.bookmarks.create({title:"foo",parentId:t}),o=await w.default.bookmarks.create({title:"bar",parentId:a.id}),r=await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:o.id});await e.sync(),T(e.getData().error).to.not.be.ok;const l=await S(e);B(l,new u.Folder({title:l.title,children:[new u.Folder({title:"foo",children:[new u.Folder({title:"bar",children:[new u.Bookmark({title:"url",url:r.url})]})]})]}),!1)})),it("should create empty local folders on the server",(async function(){const t=e.getData().localRoot,a=await w.default.bookmarks.create({title:"foo",parentId:t});await w.default.bookmarks.create({title:"bar",parentId:a.id}),await e.sync(),T(e.getData().error).to.not.be.ok;const o=await S(e);B(o,new u.Folder({title:o.title,children:[new u.Folder({title:"foo",children:[new u.Folder({title:"bar",children:[]})]})]}),!1)})),it("should create local javascript bookmarks on the server",(async function(){const t=e.getData().localRoot,a=await w.default.bookmarks.create({title:"foo",parentId:t}),o=await w.default.bookmarks.create({title:"bar",parentId:a.id}),r=await w.default.bookmarks.create({title:"url",url:"javascript:void(0)",parentId:o.id});await e.sync(),T(e.getData().error).to.not.be.ok;const l=await S(e);B(l,new u.Folder({title:l.title,children:[new u.Folder({title:"foo",children:[new u.Folder({title:"bar",children:[new u.Bookmark({title:"url",url:r.url})]})]})]}),!1,Boolean(e.server.orderFolder));const i=await w.default.bookmarks.create({title:"url2",url:"javascript:void(1)",parentId:o.id});await e.sync(),T(e.getData().error).to.not.be.ok;const n=await S(e);B(n,new u.Folder({title:l.title,children:[new u.Folder({title:"foo",children:[new u.Folder({title:"bar",children:[new u.Bookmark({title:"url",url:r.url}),new u.Bookmark({title:"url2",url:i.url})]})]})]}),!1,Boolean(e.server.orderFolder))})),it("should update the server on local changes",(async function(){if(t.noCache)return this.skip();const a=e.getData().localRoot,o=await w.default.bookmarks.create({title:"foo",parentId:a}),r=await w.default.bookmarks.create({title:"bar",parentId:o.id}),l=await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:r.id});await e.sync(),T(e.getData().error).to.not.be.ok;const i={title:"blah"};await w.default.bookmarks.update(l.id,i),await e.sync(),T(e.getData().error).to.not.be.ok;const n=await S(e);B(n,new u.Folder({title:n.title,children:[new u.Folder({title:"foo",children:[new u.Folder({title:"bar",children:[new u.Bookmark({title:i.title,url:l.url})]})]})]}),!1)})),it("should update the server on local changes of duplicates",(async function(){if(t.noCache)return this.skip();const a=e.getData().localRoot,o=await w.default.bookmarks.create({title:"foo",parentId:a}),r=await w.default.bookmarks.create({title:"bar",parentId:o.id}),l=await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:o.id}),i=await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:r.id});await e.sync(),T(e.getData().error).to.not.be.ok;const n={title:"blah"};await w.default.bookmarks.update(i.id,n),await e.sync(),T(e.getData().error).to.not.be.ok;const c=await S(e);B(c,new u.Folder({title:c.title,children:[new u.Folder({title:"foo",children:[new u.Folder({title:"bar",children:[new u.Bookmark({title:n.title,url:l.url})]}),new u.Bookmark({title:"nextcloud-bookmarks"===t.type?n.title:i.title,url:l.url})]})]}),!1)})),it("should update the server on local changes of url collisions",(async function(){if(t.noCache)return this.skip();const a=e.getData().localRoot,o=await w.default.bookmarks.create({title:"foo",parentId:a}),r=await w.default.bookmarks.create({title:"bar",parentId:o.id}),l=await w.default.bookmarks.create({title:"ur1l",url:"http://ur1.l/",parentId:o.id}),i=await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:r.id});await e.sync(),T(e.getData().error).to.not.be.ok;const n={url:"http://ur.l/"};await w.default.bookmarks.update(l.id,n),await e.sync(),T(e.getData().error).to.not.be.ok;const c=await S(e);B(c,new u.Folder({title:c.title,children:[new u.Folder({title:"foo",children:[new u.Folder({title:"bar",children:[new u.Bookmark({title:i.title,url:i.url})]}),new u.Bookmark({title:"nextcloud-bookmarks"===t.type?i.title:l.title,url:n.url})]})]}),!1)})),it("should update the server on local removals",(async function(){if(t.noCache)return this.skip();const a=e.getData().localRoot,o=await w.default.bookmarks.create({title:"foo",parentId:a}),r=await w.default.bookmarks.create({title:"bar",parentId:o.id}),l=await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:r.id});await e.sync(),T(e.getData().error).to.not.be.ok,await w.default.bookmarks.remove(l.id),await e.sync(),T(e.getData().error).to.not.be.ok;const i=await S(e);B(i,new u.Folder({title:i.title,children:[new u.Folder({title:"foo",children:[new u.Folder({title:"bar",children:[]})]})]}),!1)})),it("should update the server on local removals and recreations",(async function(){if(t.noCache)return this.skip();T((await S(e)).children).to.have.lengthOf(0);const a=e.getData().localRoot,o=await w.default.bookmarks.create({title:"foo",parentId:a}),r=await w.default.bookmarks.create({title:"bar",parentId:o.id}),l=await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:r.id});await e.sync(),T(e.getData().error).to.not.be.ok,await w.default.bookmarks.remove(l.id),await e.sync(),T(e.getData().error).to.not.be.ok;const i=await S(e);B(i,new u.Folder({title:i.title,children:[new u.Folder({title:"foo",children:[new u.Folder({title:"bar",children:[]})]})]}),!1);const n=await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:r.id});await e.sync(),T(e.getData().error).to.not.be.ok;const c=await S(e);B(c,new u.Folder({title:c.title,children:[new u.Folder({title:"foo",children:[new u.Folder({title:"bar",children:[new u.Bookmark({url:n.url,title:n.title})]})]})]}),!1)})),it("should update the server on local folder moves",(async function(){const t=e.getData().localRoot,a=await w.default.bookmarks.create({title:"foo",parentId:t});await w.default.bookmarks.create({title:"test",url:"http://ureff.l/",parentId:a.id});const o=await w.default.bookmarks.create({title:"bar",parentId:a.id});await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:o.id}),await e.sync(),T(e.getData().error).to.not.be.ok,await w.default.bookmarks.move(o.id,{parentId:t}),await e.sync(),T(e.getData().error).to.not.be.ok;const r=await S(e);B(r,new u.Folder({title:r.title,children:[new u.Folder({title:"foo",children:[new u.Bookmark({title:"test",url:"http://ureff.l/"})]}),new u.Folder({title:"bar",children:[new u.Bookmark({title:"url",url:"http://ur.l/"})]})]}),!1)})),it("should create server bookmarks locally",(async function(){const t=e.server,a=await S(e);let o,r,l;await R(e,(async()=>{o=await t.createFolder(new u.Folder({parentId:a.id,title:"foo"})),r=await t.createFolder(new u.Folder({parentId:o,title:"bar"})),l={title:"url",url:"http://ur.l/",parentId:r},await t.createBookmark(new u.Bookmark(l))})),await e.sync(),T(e.getData().error).to.not.be.ok;const i=await S(e);B(i,new u.Folder({title:i.title,children:[new u.Folder({title:"foo",children:[new u.Folder({title:"bar",children:[new u.Bookmark({title:l.title,url:l.url})]})]})]}),!1)})),it("should create empty server folders locally",(async function(){const t=e.server,a=await S(e);await R(e,(async()=>{const e=await t.createFolder(new u.Folder({parentId:a.id,title:"foo"}));await t.createFolder(new u.Folder({parentId:e,title:"bar"}))})),await e.sync(),T(e.getData().error).to.not.be.ok;const o=await S(e);B(o,new u.Folder({title:o.title,children:[new u.Folder({title:"foo",children:[new u.Folder({title:"bar",children:[]})]})]}),!1)})),it("should update local bookmarks on server changes",(async function(){if(t.noCache)return this.skip();const a=e.server,o=await S(e);let r,l,i,n;await R(e,(async()=>{r=await a.createFolder(new u.Folder({parentId:o.id,title:"foo"})),l=await a.createFolder(new u.Folder({parentId:r,title:"bar"})),n={title:"url",url:"http://ur.l/",parentId:l},i=await a.createBookmark(new u.Bookmark(n))})),await e.sync(),T(e.getData().error).to.not.be.ok;const c={...n,title:"blah",id:i};await R(e,(async()=>{await a.updateBookmark(new u.Bookmark(c))})),await e.sync(),T(e.getData().error).to.not.be.ok;const s=await S(e);B(s,new u.Folder({title:s.title,children:[new u.Folder({title:"foo",children:[new u.Folder({title:"bar",children:[new u.Bookmark({title:c.title,url:c.url})]})]})]}),!1)})),it("should update local bookmarks on server removals",(async function(){if(t.noCache)return this.skip();const a=e.server,o=await S(e);a.onSyncStart&&await a.onSyncStart();const r=await a.createFolder(new u.Folder({parentId:o.id,title:"foo"})),l={title:"url",url:"http://ur.l/",parentId:await a.createFolder(new u.Folder({parentId:r,title:"bar"}))},i=await a.createBookmark(new u.Bookmark(l));a.onSyncComplete&&await a.onSyncComplete(),await e.sync(),T(e.getData().error).to.not.be.ok,await R(e,(async()=>{await a.removeBookmark({...l,id:i})})),await e.sync(),T(e.getData().error).to.not.be.ok;const n=await S(e);B(n,new u.Folder({title:n.title,children:[new u.Folder({title:"foo",children:[new u.Folder({title:"bar",children:[]})]})]}),!1)})),it("should not delete additions while sync is running",(async function(){const t=e.getData().localRoot,a=await w.default.bookmarks.create({title:"foo",parentId:t}),o=await w.default.bookmarks.create({title:"bar",parentId:a.id});await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:o.id});const r=e.sync();await new Promise((t=>setTimeout(t,1e3))),await w.default.bookmarks.create({title:"url2",url:"http://secondur.l/",parentId:a.id}),await r,await e.sync(),T(e.getData().error).to.not.be.ok;const l=await S(e);B(l,new u.Folder({title:l.title,children:[new u.Folder({title:"foo",children:[new u.Folder({title:"bar",children:[new u.Bookmark({title:"url",url:"http://ur.l/"})]}),new u.Bookmark({title:"url2",url:"http://secondur.l/"})]})]}),!1)})),it("should be able to handle duplicates",(async function(){const t=e.getData().localRoot,a={title:"url",url:"http://ur.l/"},o=await w.default.bookmarks.create({title:"foo",parentId:t});await w.default.bookmarks.create({...a,parentId:o.id});const r=await w.default.bookmarks.create({title:"bar",parentId:o.id});await w.default.bookmarks.create({...a,parentId:r.id}),await e.sync(),T(e.getData().error).to.not.be.ok,await w.default.bookmarks.move(r.id,{parentId:t}),await e.sync(),T(e.getData().error).to.not.be.ok;const l=await S(e);B(l,new u.Folder({title:l.title,children:[new u.Folder({title:"foo",children:[new u.Bookmark(a)]}),new u.Folder({title:"bar",children:[new u.Bookmark(a)]})]}),!1,Boolean(e.server.orderFolder))})),it("should deduplicate unnormalized URLs",(async function(){const t=e.server,a=await S(e);t.onSyncStart&&await t.onSyncStart();const o=await t.createFolder(new u.Folder({parentId:a.id,title:"foo",location:u.ItemLocation.SERVER})),r={title:"url",url:"http://ur.l/foo/bar?a=b&foo=b%C3%A1r+foo",location:u.ItemLocation.SERVER},l={title:"url2",url:"http://ur2.l/foo/bar?a=b&foo=b%C3%A1r+foo",location:u.ItemLocation.SERVER};await t.createBookmark(new u.Bookmark({...r,parentId:o})),await t.createBookmark(new u.Bookmark({...l,parentId:o})),t.onSyncComplete&&await t.onSyncComplete();const i=e.getData().localRoot,n=await w.default.bookmarks.create({title:"foo",parentId:i});await w.default.bookmarks.create({title:"url",url:"http://ur.l/foo/bar?a=b&foo=bár+foo",parentId:n.id}),await w.default.bookmarks.create({title:"url2",url:"http://ur2.l/foo/bar?a=b&foo=bár+foo",parentId:n.id}),await e.sync(),T(e.getData().error).to.not.be.ok,await e.sync(),T(e.getData().error).to.not.be.ok;const c=await S(e);B(c,new u.Folder({title:c.title,children:[new u.Folder({title:"foo",children:[new u.Bookmark(r),new u.Bookmark(l)]})]}),!1,Boolean(e.server.orderFolder))})),it("should deduplicate unnormalized URLs without getting stuck",(async function(){"nextcloud-bookmarks"===t.type&&"stable"!==r&&"master"!==r&&"stable3"!==r&&this.skip();const a=e.getData().localRoot,o={title:"url",url:"http://nextcloud.com/"},l={title:"url2",url:"https://nextcloud.com"},i=await w.default.bookmarks.create({title:"foo",parentId:a});await w.default.bookmarks.create({...o,parentId:i.id}),await w.default.bookmarks.create({...l,parentId:i.id}),await e.sync(),T(e.getData().error).to.not.be.ok,T(e.getData().error).to.not.be.ok,await e.sync(),T(e.getData().error).to.not.be.ok,await e.sync(),T(e.getData().error).to.not.be.ok;const n=await S(e);B(n,new u.Folder({title:n.title,children:[new u.Folder({title:"foo",children:[new u.Bookmark(o),new u.Bookmark(l)]})]}),!1,Boolean(e.server.orderFolder))})),it("should not fail when moving both folders and contents",(async function(){if(t.noCache)return this.skip();const a=e.getData().localRoot,o=await w.default.bookmarks.create({title:"foo",parentId:a}),r=await w.default.bookmarks.create({title:"test",url:"http://ureff.l/",parentId:o.id}),l=await w.default.bookmarks.create({title:"bar",parentId:o.id});await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:l.id}),await e.sync(),T(e.getData().error).to.not.be.ok,await w.default.bookmarks.move(l.id,{parentId:a}),await w.default.bookmarks.move(o.id,{parentId:l.id}),await w.default.bookmarks.move(r.id,{parentId:l.id}),await e.sync(),T(e.getData().error).to.not.be.ok;const i=await S(e);B(i,new u.Folder({title:i.title,children:[new u.Folder({title:"bar",children:[new u.Bookmark({title:"url",url:"http://ur.l/"}),new u.Folder({title:"foo",children:[]}),new u.Bookmark({title:"test",url:"http://ureff.l/"})]})]}),!1,Boolean(e.server.orderFolder))})),it("should not fail when both moving folders and deleting their contents",(async function(){if(t.noCache)return this.skip();const a=e.getData().localRoot,o=await w.default.bookmarks.create({title:"foo",parentId:a}),r=await w.default.bookmarks.create({title:"test",url:"http://ureff.l/",parentId:o.id}),l=await w.default.bookmarks.create({title:"url",url:"http://uawdgr.l/",parentId:o.id}),i=await w.default.bookmarks.create({title:"bar",parentId:o.id}),n=await w.default.bookmarks.create({title:"url",url:"http://urzur.l/",parentId:i.id}),c=await w.default.bookmarks.create({title:"url",url:"http://uadgr.l/",parentId:i.id});await e.sync(),T(e.getData().error).to.not.be.ok,await w.default.bookmarks.move(i.id,{parentId:a}),await w.default.bookmarks.move(o.id,{parentId:i.id}),await w.default.bookmarks.remove(n.id),await e.sync(),T(e.getData().error).to.not.be.ok;const s=await S(e);B(s,new u.Folder({title:s.title,children:[new u.Folder({title:"bar",children:[new u.Bookmark(c),new u.Folder({title:"foo",children:[new u.Bookmark(r),new u.Bookmark(l)]})]})]}),!1,Boolean(e.server.orderFolder))})),it("should handle strange characters well",(async function(){const t=e.getData().localRoot,a=await w.default.bookmarks.create({title:'foo!"§$%&/()=?"',parentId:t}),o=await w.default.bookmarks.create({title:"bar=?*'Ä_:-^;<script>",parentId:a.id}),r=await w.default.bookmarks.create({title:'url|!"=)/§_:;Ä\'*ü"',url:"http://ur.l/?a&b=<script>",parentId:o.id});await e.sync(),T(e.getData().error).to.not.be.ok,await e.sync(),T(e.getData().error).to.not.be.ok;const l=await S(e);B(l,new u.Folder({title:l.title,children:[new u.Folder({title:'foo!"§$%&/()=?"',children:[new u.Folder({title:"bar=?*'Ä_:-^;<script>",children:[new u.Bookmark({title:'url|!"=)/§_:;Ä\'*ü"',url:r.url})]})]})]}),!1)})),it("should be able to delete a server folder",(async function(){if(t.noCache)return this.skip();const a=e.getData().localRoot,o=await w.default.bookmarks.create({title:"foo",parentId:a}),r=await w.default.bookmarks.create({title:"bar",parentId:o.id});await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:r.id}),await e.sync(),T(e.getData().error).to.not.be.ok,await w.default.bookmarks.removeTree(o.id),await e.sync(),T(e.getData().error).to.not.be.ok;const l=await S(e);B(l,new u.Folder({title:l.title,children:[]}),!1)})),it("should be able to delete a local folder",(async function(){if(t.noCache)return this.skip();const a=e.server,o=e.getData().localRoot,r=await w.default.bookmarks.create({title:"foo",parentId:o}),l=await w.default.bookmarks.create({title:"bar",parentId:r.id});await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:l.id}),await e.sync(),T(e.getData().error).to.not.be.ok;let i=await S(e);await R(e,(async()=>{await a.removeFolder({id:i.children[0].id})})),await e.sync(),T(e.getData().error).to.not.be.ok,i=await S(e),B(i,new u.Folder({title:i.title,children:[]}),!1)})),it("should be ok if both server and local bookmark are removed",(async function(){const t=e.server;let a=await S(e);t.onSyncStart&&await t.onSyncStart();const o=await t.createFolder(new u.Folder({parentId:a.id,title:"foo",location:u.ItemLocation.SERVER})),r={title:"url",url:"http://ur.l/",parentId:await t.createFolder(new u.Folder({parentId:o,title:"bar",location:u.ItemLocation.SERVER})),location:u.ItemLocation.SERVER},l=await t.createBookmark(new u.Bookmark(r));t.onSyncComplete&&await t.onSyncComplete(),await e.sync(),T(e.getData().error).to.not.be.ok,await R(e,(async()=>{await t.removeBookmark({...r,id:l})})),await e.sync(),T(e.getData().error).to.not.be.ok;const i=await e.localTree.getBookmarksTree(!0);a=await S(e),i.title=a.title,B(i,a)})),it("should ignore duplicates in the same folder",(async function(){if("nextcloud-bookmarks"!==t.type)return this.skip();const a=e.getData().localRoot,o=await w.default.bookmarks.create({title:"bar",parentId:a});await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:o.id}),await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:o.id}),await e.sync(),T(e.getData().error).to.not.be.ok;const r=await S(e);B(r,new u.Folder({title:r.title,children:[new u.Folder({title:"bar",children:[new u.Bookmark({title:"url",url:"http://ur.l/"})]})]}),!1);const l=await e.localTree.getBookmarksTree(!0);B(l,new u.Folder({title:l.title,children:[new u.Folder({title:"bar",children:[new u.Bookmark({title:"url",url:"http://ur.l/"}),new u.Bookmark({title:"url",url:"http://ur.l/"})]})]}),!1)})),it("should move items successfully even into new folders",(async function(){const t=e.getData().localRoot,a=await w.default.bookmarks.create({title:"bar",parentId:t}),o=await w.default.bookmarks.create({title:"foo",parentId:t}),r=await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:a.id});await e.sync(),T(e.getData().error).to.not.be.ok;const l=await w.default.bookmarks.create({title:"sub",parentId:o.id});await w.default.bookmarks.move(r.id,{parentId:l.id}),await e.sync(),T(e.getData().error).to.not.be.ok;const i=await S(e);B(i,new u.Folder({title:i.title,children:[new u.Folder({title:"bar",children:[]}),new u.Folder({title:"foo",children:[new u.Folder({title:"sub",children:[new u.Bookmark({title:"url",url:"http://ur.l/"})]})]})]}),!1,Boolean(e.server.orderFolder));const n=await e.localTree.getBookmarksTree(!0);B(n,new u.Folder({title:n.title,children:[new u.Folder({title:"bar",children:[]}),new u.Folder({title:"foo",children:[new u.Folder({title:"sub",children:[new u.Bookmark({title:"url",url:"http://ur.l/"})]})]})]}),!1,Boolean(e.server.orderFolder))})),it("should move items successfully when mixing creation and moving (1)",(async function(){const t=e.getData().localRoot,a=await w.default.bookmarks.create({title:"bar",parentId:t}),o=await w.default.bookmarks.create({title:"foo",parentId:t});await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:a.id}),await e.sync(),T(e.getData().error).to.not.be.ok;const r=await w.default.bookmarks.create({title:"top",parentId:t}),l=await w.default.bookmarks.create({title:"sub",parentId:r.id});await w.default.bookmarks.move(o.id,{parentId:l.id}),await w.default.bookmarks.move(a.id,{parentId:o.id}),await e.sync(),T(e.getData().error).to.not.be.ok;const i=await S(e);B(i,new u.Folder({title:i.title,children:[new u.Folder({title:"top",children:[new u.Folder({title:"sub",children:[new u.Folder({title:"foo",children:[new u.Folder({title:"bar",children:[new u.Bookmark({title:"url",url:"http://ur.l/"})]})]})]})]})]}),!1,Boolean(e.server.orderFolder));const n=await e.localTree.getBookmarksTree(!0);B(n,new u.Folder({title:n.title,children:[new u.Folder({title:"top",children:[new u.Folder({title:"sub",children:[new u.Folder({title:"foo",children:[new u.Folder({title:"bar",children:[new u.Bookmark({title:"url",url:"http://ur.l/"})]})]})]})]})]}),!1,Boolean(e.server.orderFolder))})),it("should move items successfully when mixing creation and moving (2)",(async function(){const t=e.getData().localRoot,a=await w.default.bookmarks.create({title:"a",parentId:t}),o=await w.default.bookmarks.create({title:"b",parentId:a.id}),r=await w.default.bookmarks.create({title:"c",parentId:o.id}),l=await w.default.bookmarks.create({title:"d",parentId:r.id});await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:l.id}),await e.sync(),T(e.getData().error).to.not.be.ok;const i=await w.default.bookmarks.create({title:"e",parentId:t});await w.default.bookmarks.move(o.id,{parentId:i.id});const n=await w.default.bookmarks.create({title:"f",parentId:o.id});await w.default.bookmarks.move(r.id,{parentId:n.id}),await e.sync(),T(e.getData().error).to.not.be.ok;const c=await S(e);B(c,new u.Folder({title:c.title,children:[new u.Folder({title:"a",children:[]}),new u.Folder({title:"e",children:[new u.Folder({title:"b",children:[new u.Folder({title:"f",children:[new u.Folder({title:"c",children:[new u.Folder({title:"d",children:[new u.Bookmark({title:"url",url:"http://ur.l/"})]})]})]})]})]})]}),!1,Boolean(e.server.orderFolder));const s=await e.localTree.getBookmarksTree(!0);B(s,new u.Folder({title:s.title,children:[new u.Folder({title:"a",children:[]}),new u.Folder({title:"e",children:[new u.Folder({title:"b",children:[new u.Folder({title:"f",children:[new u.Folder({title:"c",children:[new u.Folder({title:"d",children:[new u.Bookmark({title:"url",url:"http://ur.l/"})]})]})]})]})]})]}),!1,Boolean(e.server.orderFolder))})),it("should move items without creating a folder loop",(async function(){"stable"!==r&&"master"!==r&&this.skip();const t=e.getData().localRoot,a=await w.default.bookmarks.create({title:"a",parentId:t}),o=await w.default.bookmarks.create({title:"b",parentId:t});await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:o.id}),await e.sync(),T(e.getData().error).to.not.be.ok,await e.sync(),T(e.getData().error).to.not.be.ok,await w.default.bookmarks.move(o.id,{parentId:a.id}),await R(e,(async()=>{const t=await e.server.getBookmarksTree(!0),a=t.children[0],o=t.children[1];a.parentId=o.id,await e.server.updateFolder(a)})),await e.sync(),T(e.getData().error).to.not.be.ok;const l=await S(e);B(l,new u.Folder({title:l.title,children:[new u.Folder({title:"a",children:[new u.Folder({title:"b",children:[new u.Bookmark({title:"url",url:"http://ur.l/"})]})]})]}),!1,Boolean(e.server.orderFolder));const i=await e.localTree.getBookmarksTree(!0);i.title=l.title,B(i,l,!1,Boolean(e.server.orderFolder))})),it("should move items without confusing folders",(async function(){const t=e.getData().localRoot,a=await w.default.bookmarks.create({title:"a",parentId:t}),o=await w.default.bookmarks.create({title:"b",parentId:t}),r=await w.default.bookmarks.create({title:"d",parentId:t}),l=await w.default.bookmarks.create({title:"c",parentId:a.id});await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:l.id});const i=await w.default.bookmarks.create({title:"c",parentId:o.id});await w.default.bookmarks.create({title:"test",url:"http://urrr.l/",parentId:i.id}),await e.sync(),T(e.getData().error).to.not.be.ok,await e.sync(),T(e.getData().error).to.not.be.ok,await e.init(),await w.default.bookmarks.move(l.id,{parentId:t}),await w.default.bookmarks.move(i.id,{parentId:r.id}),await e.sync(),T(e.getData().error).to.not.be.ok;const n=await S(e);B(n,new u.Folder({title:n.title,children:[new u.Folder({title:"a",children:[]}),new u.Folder({title:"b",children:[]}),new u.Folder({title:"d",children:[new u.Folder({title:"c",children:[new u.Bookmark({title:"test",url:"http://urrr.l/"})]})]}),new u.Folder({title:"c",children:[new u.Bookmark({title:"url",url:"http://ur.l/"})]})]}),!1,!1);const c=await e.localTree.getBookmarksTree(!0);c.title=n.title,B(c,n,!1,!1)})),it("should integrate existing items from both sides",(async function(){const t=e.getData().localRoot,a=e.server,o=await w.default.bookmarks.create({title:"a",parentId:t}),r=await w.default.bookmarks.create({title:"b",parentId:o.id}),l=await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:o.id}),i=await w.default.bookmarks.create({title:"url2",url:"http://ur.l/dalfk",parentId:r.id});let n,c,s,d;await R(e,(async()=>{n=await a.createFolder(new u.Folder({parentId:(await a.getBookmarksTree()).id,title:"a"})),c=await a.createBookmark(new u.Bookmark({title:"url",url:"http://ur.l",parentId:n})),s=await a.createFolder(new u.Folder({parentId:n,title:"b"})),d=await a.createBookmark(new u.Bookmark({title:"url2",url:"http://ur.l/dalfk",parentId:s}))})),await e.sync(),T(e.getData().error).to.not.be.ok,await e.sync(),T(e.getData().error).to.not.be.ok;const k=await S(e);B(k,new u.Folder({title:k.title,children:[new u.Folder({title:"a",children:[new u.Folder({title:"b",children:[new u.Bookmark({title:"url2",url:"http://ur.l/dalfk"})]}),new u.Bookmark({title:"url",url:"http://ur.l/"})]})]}),!1,!1),T(k.findBookmark(c)).to.be.ok,T(k.findBookmark(d)).to.be.ok;const m=await e.localTree.getBookmarksTree(!0);B(m,new u.Folder({title:m.title,children:[new u.Folder({title:"a",children:[new u.Folder({title:"b",children:[new u.Bookmark({title:"url2",url:"http://ur.l/dalfk"})]}),new u.Bookmark({title:"url",url:"http://ur.l/"})]})]}),!1,!1),T(m.findBookmark(l.id)).to.be.ok,T(m.findBookmark(i.id)).to.be.ok})),it("should error when deleting too much local data",(async function(){t.noCache&&this.skip();const a=e.getData().localRoot,o=await w.default.bookmarks.create({title:"foo",parentId:a}),r=await w.default.bookmarks.create({title:"bar",parentId:o.id});await Promise.all(["http://ur.l/","http://ur.ll/","http://ur2.l/","http://ur3.l/","http://ur4.l/","http://ur5.l/","http://ur6.l/","http://ur7.l/","http://ur8.l/","http://ur9.l/","http://ur10.l/"].map((t=>w.default.bookmarks.create({title:"url",url:t,parentId:r.id})))),await e.sync(),T(e.getData().error).to.not.be.ok;const l=await S(e);await R(e,(async()=>{await h.each(l.children,(async t=>{t instanceof u.Folder?await e.server.removeFolder(t):await e.server.removeBookmark(t)}))})),await e.sync(),T(e.getData().error).to.be.ok})),it("should leave alone unaccepted bookmarks entirely",(async function(){if(!~t.type.indexOf("nextcloud"))return this.skip();const a=e.getData().localRoot,o=await w.default.bookmarks.create({title:"bar",parentId:a}),r=await w.default.bookmarks.create({title:"foo",parentId:o.id});await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:o.id}),await w.default.bookmarks.create({title:"url2",url:"chrome://extensions/",parentId:r.id}),await e.sync(),T(e.getData().error).to.not.be.ok,await e.sync(),T(e.getData().error).to.not.be.ok;const l=await S(e);B(l,new u.Folder({title:l.title,children:[new u.Folder({title:"bar",children:[new u.Bookmark({title:"url",url:"http://ur.l/"}),new u.Folder({title:"foo",children:[]})]})]}),!1,!1);const i=await e.localTree.getBookmarksTree(!0);B(i,new u.Folder({title:i.title,children:[new u.Folder({title:"bar",children:[new u.Bookmark({title:"url",url:"http://ur.l/"}),new u.Folder({title:"foo",children:[new u.Bookmark({title:"url2",url:"chrome://extensions/"})]})]})]}),!1,!1)})),it("should convert vertical and horizontal separators",(async function(){if("firefox"!==i)return void this.skip();const t=async e=>{let a=await w.default.bookmarks.getChildren(e);for(const e of a)await t(e.id);e.endsWith("_____")||await w.default.bookmarks.remove(e)};await t("root________"),await w.default.bookmarks.create({title:"url1",url:"http://url1/",parentId:"menu________"}),await w.default.bookmarks.create({type:"separator",parentId:"menu________"});const e=await w.default.bookmarks.create({title:v().TITLE_BOOKMARKS_BAR,parentId:"menu________"});await w.default.bookmarks.create({title:"url2",url:"http://url2/",parentId:e.id}),await w.default.bookmarks.create({type:"separator",parentId:e.id}),await w.default.bookmarks.create({title:"url3",url:"http://url3/",parentId:"toolbar_____"}),await w.default.bookmarks.create({type:"separator",parentId:"toolbar_____"});const a=await w.default.bookmarks.create({title:"A Folder",parentId:"toolbar_____"});await w.default.bookmarks.create({title:"url4",url:"http://url4/",parentId:a.id}),await w.default.bookmarks.create({type:"separator",parentId:a.id});let o=new(v())("Dummy Storage","root________"),r=await o.getBookmarksTree();B(r,new u.Folder({title:void 0,children:[new u.Folder({title:"Bookmarks Menu",children:[new u.Bookmark({title:"url1",url:"http://url1/"}),new u.Bookmark({title:"⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯",url:"https://separator.floccus.org/?id=242649"}),new u.Folder({title:"Bookmarks Bar",children:[new u.Bookmark({title:"url2",url:"http://url2/"}),new u.Bookmark({title:"⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯",url:"https://separator.floccus.org/?id=591710"})]})]}),new u.Folder({title:"Bookmarks Bar",children:[new u.Bookmark({title:"url3",url:"http://url3/"}),new u.Bookmark({title:"",url:"https://separator.floccus.org/vertical.html?id=616887"}),new u.Folder({title:"A Folder",children:[new u.Bookmark({title:"url4",url:"http://url4/"}),new u.Bookmark({title:"⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯",url:"https://separator.floccus.org/?id=890296"})]})]})]}),!0),await t("root________")})),it("should sync separators",(async function(){if(t.noCache)return void this.skip();if("firefox"!==i)return void this.skip();if("linkwarden"===t.type)return this.skip();const a=e.getData().localRoot,o=await w.default.bookmarks.create({title:"bar",parentId:a}),r=await w.default.bookmarks.create({title:"foo",parentId:o.id});await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:r.id}),await w.default.bookmarks.create({type:"separator",parentId:r.id}),await w.default.bookmarks.create({title:"url2",url:"http://ur2.l",parentId:r.id}),await w.default.bookmarks.create({type:"separator",parentId:r.id}),await e.sync(),T(e.getData().error).to.not.be.ok;let l=await S(e),n=await e.localTree.getBookmarksTree(!0);B(n,new u.Folder({title:n.title,children:[new u.Folder({title:"bar",children:[new u.Folder({title:"foo",children:[new u.Bookmark({title:"url",url:"http://ur.l/"}),new u.Bookmark({title:"⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯",url:"https://separator.floccus.org/?id=467366"}),new u.Bookmark({title:"url2",url:"http://ur2.l"}),new u.Bookmark({title:"⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯",url:"https://separator.floccus.org/?id=731368"})]})]})]}),!1),B(l,new u.Folder({title:l.title,children:[new u.Folder({title:"bar",children:[new u.Folder({title:"foo",children:[new u.Bookmark({title:"url",url:"http://ur.l/"}),new u.Bookmark({title:"⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯",url:"https://separator.floccus.org/?id=467366"}),new u.Bookmark({title:"url2",url:"http://ur2.l"}),new u.Bookmark({title:"⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯",url:"https://separator.floccus.org/?id=731368"})]})]})]}),!1),console.log("initial sync done"),await R(e,(async()=>{await e.server.updateBookmark({...l.children[0].children[0].children[1],parentId:l.children[0].id})})),console.log("move done"),await e.sync(),T(e.getData().error).to.not.be.ok,n=await e.localTree.getBookmarksTree(!0),B(n,new u.Folder({title:n.title,children:[new u.Folder({title:"bar",children:[new u.Folder({title:"foo",children:[new u.Bookmark({title:"url",url:"http://ur.l/"}),new u.Bookmark({title:"url2",url:"http://ur2.l"}),new u.Bookmark({title:"⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯",url:"https://separator.floccus.org/?id=467366"})]}),new u.Bookmark({title:"⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯",url:"https://separator.floccus.org/?id=379999"})]})]}),!1),l=await S(e),B(l,new u.Folder({title:l.title,children:[new u.Folder({title:"bar",children:[new u.Folder({title:"foo",children:[new u.Bookmark({title:"url",url:"http://ur.l/"}),new u.Bookmark({title:"url2",url:"http://ur2.l"}),new u.Bookmark({title:"⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯",url:"https://separator.floccus.org/?id=731368"})]}),new u.Bookmark({title:"⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯",url:"https://separator.floccus.org/?id=467366"})]})]}),!1)})),it("should sync separators 2",(async function(){if(t.noCache)return void this.skip();if("firefox"!==i)return void this.skip();if("linkwarden"===t.type)return this.skip();const a=e.getData().localRoot,o=await w.default.bookmarks.create({title:"bar",parentId:a}),r=await w.default.bookmarks.create({title:"foo",parentId:o.id});await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:r.id}),await w.default.bookmarks.create({type:"separator",parentId:r.id}),await w.default.bookmarks.create({title:"url2",url:"http://ur2.l",parentId:r.id}),await w.default.bookmarks.create({type:"separator",parentId:r.id}),await e.sync(),T(e.getData().error).to.not.be.ok;let l=await S(e),n=await e.localTree.getBookmarksTree(!0);B(n,new u.Folder({title:n.title,children:[new u.Folder({title:"bar",children:[new u.Folder({title:"foo",children:[new u.Bookmark({title:"url",url:"http://ur.l/"}),new u.Bookmark({title:"⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯",url:"https://separator.floccus.org/?id=467366"}),new u.Bookmark({title:"url2",url:"http://ur2.l"}),new u.Bookmark({title:"⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯",url:"https://separator.floccus.org/?id=731368"})]})]})]}),!1),B(l,new u.Folder({title:l.title,children:[new u.Folder({title:"bar",children:[new u.Folder({title:"foo",children:[new u.Bookmark({title:"url",url:"http://ur.l/"}),new u.Bookmark({title:"⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯",url:"https://separator.floccus.org/?id=467366"}),new u.Bookmark({title:"url2",url:"http://ur2.l"}),new u.Bookmark({title:"⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯",url:"https://separator.floccus.org/?id=731368"})]})]})]}),!1),console.log("initial sync done"),await R(e,(async()=>{await e.server.removeBookmark(l.children[0].children[0].children[1])})),await e.sync(),T(e.getData().error).to.not.be.ok,n=await e.localTree.getBookmarksTree(!0),B(n,new u.Folder({title:n.title,children:[new u.Folder({title:"bar",children:[new u.Folder({title:"foo",children:[new u.Bookmark({title:"url",url:"http://ur.l/"}),new u.Bookmark({title:"url2",url:"http://ur2.l"}),new u.Bookmark({title:"⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯",url:"https://separator.floccus.org/?id=467366"})]})]})]}),!1)})),it("should sync root folder successfully",(async function(){const[t]=await w.default.bookmarks.getTree();await e.setData({localRoot:t.id}),e=await k().get(e.id);const a=await w.default.bookmarks.create({title:"bar",parentId:t.children[0].id});await w.default.bookmarks.create({title:"foo",parentId:a.id}),await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:a.id}),await e.sync(),T(e.getData().error).to.not.be.ok,await e.sync(),T(e.getData().error).to.not.be.ok;const o=await S(e),r=await e.localTree.getBookmarksTree();o.title=r.title,B(o,r,!1,!1),await e.setData({localRoot:a.id}),e=await k().get(e.id)})),it("should sync root folder ignoring unsupported folders",(async function(){const[t]=await w.default.bookmarks.getTree();await Promise.all(t.children.flatMap((t=>t.children.map((t=>w.default.bookmarks.removeTree(t.id))))));const a=e.getData().localRoot;await e.setData({localRoot:t.id}),e=await k().get(e.id);const o=e.server;let r,l=await S(e);await R(e,(async()=>{const t=await o.createFolder(new u.Folder({parentId:l.id,title:"foo",location:u.ItemLocation.SERVER})),e={title:"url2",url:"http://ur2.l/",parentId:await o.createFolder(new u.Folder({parentId:t,title:"bar",location:u.ItemLocation.SERVER})),location:u.ItemLocation.SERVER},a=await o.createBookmark(new u.Bookmark(e));r={...e,id:a}}));const i=t.children[0].title;await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:t.children[0].id}),await e.sync(),T(e.getData().error).to.not.be.ok,l=await S(e);const n=await e.localTree.getBookmarksTree();T(l.children).to.have.lengthOf(n.children.length+1),await R(e,(async()=>{r.parentId=l.children.find((t=>"foo"!==t.title)).id;const t=l.children.find((t=>"foo"===t.title));await o.updateBookmark(new u.Bookmark(r));const e=l.children.find((t=>t.title.toLowerCase()===i.toLowerCase())).children.find((t=>"bookmark"===t.type));e.parentId=t.id,await o.updateBookmark(e)})),await e.sync(),T(e.getData().error).to.not.be.ok,l=await S(e);const c=await e.localTree.getBookmarksTree();T(l.children).to.have.lengthOf(c.children.length+1),await e.setData({localRoot:a}),e=await k().get(e.id)})),it("should synchronize ordering",(async function(){if(t.noCache)return this.skip();if("linkwarden"===t.type)return this.skip();const a=e.getData().localRoot,o=await w.default.bookmarks.create({title:"foo",parentId:a}),r=await w.default.bookmarks.create({title:"folder1",parentId:o.id}),l=await w.default.bookmarks.create({title:"folder2",parentId:o.id}),i=await w.default.bookmarks.create({title:"url1",url:"http://ur.l/",parentId:o.id}),n=await w.default.bookmarks.create({title:"url2",url:"http://ur.ll/",parentId:o.id});await e.sync(),T(e.getData().error).to.not.be.ok,await w.default.bookmarks.move(i.id,{index:0}),await w.default.bookmarks.move(r.id,{index:1}),await w.default.bookmarks.move(n.id,{index:2}),await w.default.bookmarks.move(l.id,{index:3}),await e.sync(),T(e.getData().error).to.not.be.ok;const c=await e.localTree.getBookmarksTree(!0);B(c,new u.Folder({title:c.title,children:[new u.Folder({title:"foo",children:[new u.Bookmark({title:"url1",url:i.url}),new u.Folder({title:"folder1",children:[]}),new u.Bookmark({title:"url2",url:n.url}),new u.Folder({title:"folder2",children:[]})]})]}),!1,!0);const s=await S(e);B(s,new u.Folder({title:s.title,children:[new u.Folder({title:"foo",children:[new u.Bookmark({title:"url1",url:i.url}),new u.Folder({title:"folder1",children:[]}),new u.Bookmark({title:"url2",url:n.url}),new u.Folder({title:"folder2",children:[]})]})]}),!1,!0)})),context("with slave mode",(function(){it("shouldn't create local bookmarks on the server",(async function(){await e.setData({strategy:"slave"}),T((await S(e)).children).to.have.lengthOf(0);const t=e.getData().localRoot,a=await w.default.bookmarks.create({title:"foo",parentId:t}),o=await w.default.bookmarks.create({title:"bar",parentId:a.id});await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:o.id}),await e.sync(),T(e.getData().error).to.not.be.ok;const r=await S(e);T(r.children).to.have.lengthOf(0)})),it("shouldn't update the server on local changes",(async function(){T((await S(e)).children).to.have.lengthOf(0);const t=e.getData().localRoot,a=await w.default.bookmarks.create({title:"foo",parentId:t}),o=await w.default.bookmarks.create({title:"bar",parentId:a.id}),r=await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:o.id});await e.sync(),T(e.getData().error).to.not.be.ok;const l=await S(e);await e.setData({strategy:"slave"}),await w.default.bookmarks.update(r.id,{title:"blah"}),await e.sync(),T(e.getData().error).to.not.be.ok;const i=await S(e);B(i,l,!1)})),it("shouldn't update the server on local removals",(async function(){T((await S(e)).children).to.have.lengthOf(0);const t=e.getData().localRoot,a=await w.default.bookmarks.create({title:"foo",parentId:t}),o=await w.default.bookmarks.create({title:"bar",parentId:a.id}),r=await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:o.id});await e.sync(),T(e.getData().error).to.not.be.ok;const l=await S(e);await e.setData({strategy:"slave"}),await w.default.bookmarks.remove(r.id),await e.sync(),T(e.getData().error).to.not.be.ok;const i=await S(e);B(i,l,!1)})),it("shouldn't update the server on local folder moves",(async function(){T((await S(e)).children).to.have.lengthOf(0);const t=e.getData().localRoot,a=await w.default.bookmarks.create({title:"foo",parentId:t});await w.default.bookmarks.create({title:"test",url:"http://ureff.l/",parentId:a.id});const o=await w.default.bookmarks.create({title:"bar",parentId:a.id});await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:o.id}),await e.sync(),T(e.getData().error).to.not.be.ok;const r=await S(e);await e.setData({strategy:"slave"}),await w.default.bookmarks.move(o.id,{parentId:t}),await e.sync(),T(e.getData().error).to.not.be.ok;const l=await S(e);B(l,r,!1)})),it("should create server bookmarks locally",(async function(){await e.setData({strategy:"slave"});const t=e.server,a=await S(e);t.onSyncStart&&await t.onSyncStart();const o=await t.createFolder(new u.Folder({parentId:a.id,title:"foo",location:u.ItemLocation.SERVER})),r={title:"url",url:"http://ur.l/",parentId:await t.createFolder(new u.Folder({parentId:o,title:"bar",location:u.ItemLocation.SERVER})),location:u.ItemLocation.SERVER};await t.createBookmark(new u.Bookmark(r)),t.onSyncComplete&&await t.onSyncComplete(),await e.sync(),T(e.getData().error).to.not.be.ok;const l=await e.localTree.getBookmarksTree(!0);B(l,new u.Folder({title:l.title,children:[new u.Folder({title:"foo",children:[new u.Folder({title:"bar",children:[new u.Bookmark({title:r.title,url:r.url})]})]})]}),!1)})),it("should update local bookmarks on server changes",(async function(){if(t.noCache)return this.skip();await e.setData({strategy:"slave"});const a=e.server,o=await S(e);a.onSyncStart&&await a.onSyncStart();const r=await a.createFolder(new u.Folder({parentId:o.id,title:"foo",location:u.ItemLocation.SERVER})),l={title:"url",url:"http://ur.l/",parentId:await a.createFolder(new u.Folder({parentId:r,title:"bar",location:u.ItemLocation.SERVER})),location:u.ItemLocation.SERVER},i=await a.createBookmark(new u.Bookmark(l));a.onSyncComplete&&await a.onSyncComplete(),await e.sync(),T(e.getData().error).to.not.be.ok;const n={...l,title:"blah",id:i,location:u.ItemLocation.SERVER};await R(e,(async()=>{await a.updateBookmark(new u.Bookmark(n))})),await e.sync(),T(e.getData().error).to.not.be.ok;const c=await e.localTree.getBookmarksTree(!0);B(c,new u.Folder({title:c.title,children:[new u.Folder({title:"foo",children:[new u.Folder({title:"bar",children:[new u.Bookmark({title:n.title,url:n.url})]})]})]}),!1)})),it("should update local bookmarks on server removals",(async function(){await e.setData({strategy:"slave"});const t=e.server,a=await S(e);t.onSyncStart&&await t.onSyncStart();const o=await t.createFolder(new u.Folder({parentId:a.id,title:"foo",location:u.ItemLocation.SERVER})),r={title:"url",url:"http://ur.l/",parentId:await t.createFolder(new u.Folder({parentId:o,title:"bar",location:u.ItemLocation.SERVER})),location:u.ItemLocation.SERVER},l=await t.createBookmark(new u.Bookmark(r));t.onSyncComplete&&await t.onSyncComplete(),await e.sync(),T(e.getData().error).to.not.be.ok,await R(e,(async()=>{await t.removeBookmark({...r,id:l})})),await e.sync(),T(e.getData().error).to.not.be.ok;const i=await e.localTree.getBookmarksTree(!0);B(i,new u.Folder({title:i.title,children:[new u.Folder({title:"foo",children:[new u.Folder({title:"bar",children:[]})]})]}),!1)})),it("should sync root folder ignoring unsupported folders",(async function(){const[t]=await w.default.bookmarks.getTree();await Promise.all(t.children.flatMap((t=>t.children.map((t=>w.default.bookmarks.removeTree(t.id))))));const a=e.getData().localRoot;await e.setData({localRoot:t.id}),e=await k().get(e.id);const o=e.server;let r;T((await S(e)).children).to.have.lengthOf(0);let l=await S(e);await R(e,(async()=>{const t=await o.createFolder(new u.Folder({parentId:l.id,title:"foo",location:u.ItemLocation.SERVER})),e={title:"url2",url:"http://ur2.l/",parentId:await o.createFolder(new u.Folder({parentId:t,title:"bar",location:u.ItemLocation.SERVER})),location:u.ItemLocation.SERVER},a=await o.createBookmark(new u.Bookmark(e));r={...e,id:a}}));const i=t.children[0].title;await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:t.children[0].id}),await e.sync(),T(e.getData().error).to.not.be.ok,l=await S(e);const n=await e.localTree.getBookmarksTree();T(l.children).to.have.lengthOf(n.children.length+1),await R(e,(async()=>{r.parentId=l.children.find((t=>"foo"!==t.title)).id;const t=l.children.find((t=>"foo"===t.title));await o.updateBookmark(new u.Bookmark(r));const e=l.children.find((t=>t.title.toLowerCase()===i.toLowerCase())).children.find((t=>"bookmark"===t.type));e.parentId=t.id,await o.updateBookmark(e)})),await e.setData({strategy:"slave"}),await e.sync(),T(e.getData().error).to.not.be.ok,l=await S(e);const c=await e.localTree.getBookmarksTree();T(l.children).to.have.lengthOf(c.children.length+1),await e.setData({localRoot:a}),e=await k().get(e.id)}))})),context("with overwrite mode",(function(){it("should create local bookmarks on the server",(async function(){await e.setData({strategy:"overwrite"}),T((await S(e)).children).to.have.lengthOf(0);const t=e.getData().localRoot,a=await w.default.bookmarks.create({title:"foo",parentId:t}),o=await w.default.bookmarks.create({title:"bar",parentId:a.id}),r=await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:o.id});await e.sync(),T(e.getData().error).to.not.be.ok;const l=await S(e);B(l,new u.Folder({title:l.title,children:[new u.Folder({title:"foo",children:[new u.Folder({title:"bar",children:[new u.Bookmark({title:"url",url:r.url})]})]})]}),!1)})),it("should create local bookmarks on the server respecting moves",(async function(){await e.setData({strategy:"overwrite"}),T((await S(e)).children).to.have.lengthOf(0);const t=e.getData().localRoot,a=await w.default.bookmarks.create({title:"foo",parentId:t}),o=await w.default.bookmarks.create({title:"bar",parentId:a.id}),r=await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:o.id});await e.sync(),T(e.getData().error).to.not.be.ok;const l=await S(e);B(l,new u.Folder({title:l.title,children:[new u.Folder({title:"foo",children:[new u.Folder({title:"bar",children:[new u.Bookmark({title:"url",url:r.url})]})]})]}),!1);const i=await w.default.bookmarks.create({title:"baz",parentId:t}),n=await w.default.bookmarks.create({title:"baraz",parentId:i.id});await w.default.bookmarks.move(o.id,{parentId:n.id}),await e.sync(),T(e.getData().error).to.not.be.ok;const c=await S(e);B(c,new u.Folder({title:l.title,children:[new u.Folder({title:"foo",children:[]}),new u.Folder({title:"baz",children:[new u.Folder({title:"baraz",children:[new u.Folder({title:"bar",children:[new u.Bookmark({title:"url",url:r.url})]})]})]})]}),!1,Boolean(e.server.orderFolder))})),it("should update the server on local changes",(async function(){if(t.noCache)return this.skip();T((await S(e)).children).to.have.lengthOf(0);const a=e.getData().localRoot,o=await w.default.bookmarks.create({title:"foo",parentId:a}),r=await w.default.bookmarks.create({title:"bar",parentId:o.id}),l=await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:r.id});await e.sync(),T(e.getData().error).to.not.be.ok,await e.setData({strategy:"overwrite"}),await w.default.bookmarks.update(l.id,{title:"blah"});const i=await e.localTree.getBookmarksTree(!0);await e.sync(),T(e.getData().error).to.not.be.ok;const n=await S(e);i.title=n.title,B(n,i,!1)})),it("should update the server on local removals",(async function(){T((await S(e)).children).to.have.lengthOf(0);const t=e.getData().localRoot,a=await w.default.bookmarks.create({title:"foo",parentId:t}),o=await w.default.bookmarks.create({title:"bar",parentId:a.id}),r=await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:o.id});await e.sync(),T(e.getData().error).to.not.be.ok,await e.setData({strategy:"overwrite"}),await w.default.bookmarks.remove(r.id);const l=await e.localTree.getBookmarksTree(!0);await e.sync(),T(e.getData().error).to.not.be.ok;const i=await S(e);l.title=i.title,B(i,l,!1)})),it("should update the server on local folder moves",(async function(){T((await S(e)).children).to.have.lengthOf(0);const t=e.getData().localRoot,a=await w.default.bookmarks.create({title:"foo",parentId:t});await w.default.bookmarks.create({title:"test",url:"http://ureff.l/",parentId:a.id});const o=await w.default.bookmarks.create({title:"bar",parentId:a.id});await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:o.id}),await e.sync(),T(e.getData().error).to.not.be.ok,await e.setData({strategy:"overwrite"}),await w.default.bookmarks.move(o.id,{parentId:t});const r=await e.localTree.getBookmarksTree(!0);await e.sync(),T(e.getData().error).to.not.be.ok;const l=await S(e);r.title=l.title,B(l,r,!1)})),it("shouldn't create server bookmarks locally",(async function(){await e.setData({strategy:"overwrite"});const t=e.server,a=await e.localTree.getBookmarksTree(!0),o=await S(e);t.onSyncStart&&await t.onSyncStart();const r=await t.createFolder(new u.Folder({parentId:o.id,title:"foo",location:u.ItemLocation.SERVER})),l={title:"url",url:"http://ur.l/",parentId:await t.createFolder(new u.Folder({parentId:r,title:"bar",location:u.ItemLocation.SERVER})),location:u.ItemLocation.SERVER};await t.createBookmark(new u.Bookmark(l)),t.onSyncComplete&&await t.onSyncComplete(),await e.sync(),T(e.getData().error).to.not.be.ok;const i=await e.localTree.getBookmarksTree(!0);a.title=i.title,B(i,a,!1)})),it("shouldn't update local bookmarks on server changes",(async function(){const t=e.server,a=await S(e);t.onSyncStart&&await t.onSyncStart();const o=await t.createFolder(new u.Folder({parentId:a.id,title:"foo",location:u.ItemLocation.SERVER})),r={title:"url",url:"http://ur.l/",parentId:await t.createFolder(new u.Folder({parentId:o,title:"bar",location:u.ItemLocation.SERVER})),location:u.ItemLocation.SERVER},l=await t.createBookmark(new u.Bookmark(r));t.onSyncComplete&&await t.onSyncComplete(),await e.sync(),T(e.getData().error).to.not.be.ok;const i=await e.localTree.getBookmarksTree(!0);await e.setData({strategy:"overwrite"});const n={...r,title:"blah",id:l,location:u.ItemLocation.SERVER};await R(e,(async()=>{await t.updateBookmark(new u.Bookmark(n))})),await e.sync(),T(e.getData().error).to.not.be.ok;const c=await e.localTree.getBookmarksTree(!0);i.title=c.title,B(c,i,!1)})),it("shouldn't update local bookmarks on server removals",(async function(){const t=e.server,a=await S(e);t.onSyncStart&&await t.onSyncStart();const o=await t.createFolder(new u.Folder({parentId:a.id,title:"foo",location:u.ItemLocation.SERVER})),r={title:"url",url:"http://ur.l/",parentId:await t.createFolder(new u.Folder({parentId:o,title:"bar",location:u.ItemLocation.SERVER})),location:u.ItemLocation.SERVER},l=await t.createBookmark(new u.Bookmark(r));t.onSyncComplete&&await t.onSyncComplete(),await e.sync(),T(e.getData().error).to.not.be.ok;const i=await e.localTree.getBookmarksTree(!0);await e.setData({strategy:"overwrite"}),await R(e,(async()=>{await t.removeBookmark({...r,id:l})})),await e.sync(),T(e.getData().error).to.not.be.ok;const n=await e.localTree.getBookmarksTree(!0);i.title=n.title,B(n,i,!1)}))}))})),context("with two clients",(function(){let e,a;this.timeout(24e5),beforeEach("set up accounts",(async function(){e=await k().create(t),await e.init(),a=await k().create(t),await a.init(),"fake"===t.type&&(a.server.bookmarksCache=e.server.bookmarksCache=new u.Folder({id:"",title:"root",location:"Server"}),a.server.__defineSetter__("highestId",(t=>{e.server.highestId=t})),a.server.__defineGetter__("highestId",(()=>e.server.highestId)))})),afterEach("clean up accounts",(async function(){if(await w.default.bookmarks.removeTree(e.getData().localRoot),"git"===t.type?await e.server.clearServer():"fake"!==t.type&&(await e.setData({serverRoot:null}),e.lockTimeout=0,await R(e,(async()=>{const t=await e.server.getBookmarksTree(!0);await h.each(t.children,(async t=>{t instanceof u.Folder?await e.server.removeFolder(t):await e.server.removeBookmark(t)}))}))),"google-drive"===t.type){const t=(await e.server.listFiles("name = '"+e.server.bookmark_file+"'")).files;for(const a of t)await e.server.deleteFile(a.id);if(t.length>1)throw new Error("Google Drive sync left more than one file behind")}try{await w.default.bookmarks.removeTree(e.getData().localRoot)}catch(t){}await e.delete();try{await w.default.bookmarks.removeTree(a.getData().localRoot)}catch(t){}await a.delete()})),it("should not sync two clients at the same time",(async function(){if("fake"===t.type)return this.skip();if("nextcloud-bookmarks"===t.type&&["v1.1.2","v2.3.4","stable3","stable4"].includes(r))return this.skip();if("linkwarden"===t.type)return this.skip();const o=e.getData().localRoot,l=await w.default.bookmarks.create({title:"foo",parentId:o}),i=await w.default.bookmarks.create({title:"bar",parentId:l.id});await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:i.id}),await e.sync();let n,c=!1;console.log("Starting sync with account 1"),await R(e,(async()=>{console.log("Syncing account 1"),console.log("Starting sync with account 2"),n=a.sync(),n.then((()=>{console.log("Finished sync with account 2"),c=!0})),await new Promise((t=>setTimeout(t,6e4))),T(a.getData().error).to.be.not.ok,T(a.getData().scheduled).to.be.ok,T(c).to.equal(!0)})),console.log("Finished sync with account 1"),n=a.sync(),n.then((()=>{console.log("Finished sync with account 2"),c=!0})),await new Promise((t=>setTimeout(t,6e4))),T(a.getData().error).to.be.not.ok,T(a.getData().scheduled).to.be.not.ok,T(c).to.equal(!0)})),it('should propagate edits using "last write wins"',(async function(){const t=e.getData().localRoot,o=await w.default.bookmarks.create({title:"foo",parentId:t}),r=await w.default.bookmarks.create({title:"bar",parentId:o.id}),l=await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:r.id});await e.sync(),await a.sync();const i=await S(e),n=await e.localTree.getBookmarksTree(!0),c=await a.localTree.getBookmarksTree(!0);n.title=c.title,B(n,c),c.title=i.title,B(c,i),await w.default.bookmarks.update(l.id,{title:"NEW TITLE FROM ACC1"}),await e.sync();const s=(await a.localTree.getBookmarksTree(!0)).children[0].children[0].children[0].id,d=await w.default.bookmarks.update(s,{title:"NEW TITLE FROM ACC2"});await a.sync(),await e.sync();const k=await S(e);B(k,new u.Folder({title:k.title,children:[new u.Folder({title:"foo",children:[new u.Folder({title:"bar",children:[new u.Bookmark(d)]})]})]}),!1);const m=await e.localTree.getBookmarksTree(!0),f=await a.localTree.getBookmarksTree(!0);B(m,f,!1),f.title=k.title,B(f,k,!1)})),it("should overtake moves to a different client",(async function(){const t=e.getData().localRoot,o=await w.default.bookmarks.create({title:"foo",parentId:t}),r=await w.default.bookmarks.create({title:"bar",parentId:o.id}),l=await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:r.id}),i=await e.localTree.getBookmarksTree(!0);await e.sync(),await a.sync();const n=await S(e),c=await e.localTree.getBookmarksTree(!0),s=await a.localTree.getBookmarksTree(!0);B(c,i,!1),n.title=i.title,B(n,i,!1),s.title=i.title,B(s,i,!1),console.log("First round ok"),await w.default.bookmarks.move(l.id,{parentId:o.id}),console.log("acc1: Moved bookmark from bar into foo");const d=await e.localTree.getBookmarksTree(!0);await e.sync();const k=await S(e),u=await e.localTree.getBookmarksTree(!0);B(u,d,!1),k.title=u.title,B(k,u,!1),console.log("Second round first half ok"),await a.sync();const m=await S(e),f=await a.localTree.getBookmarksTree(!0);B(f,u,!1),m.title=f.title,B(m,f,!1),console.log("Second round second half ok"),console.log("acc1: final sync"),await e.sync();const h=await S(e),p=await e.localTree.getBookmarksTree(!0);B(p,f,!1),f.title=h.title,B(f,h,!1)})),it("should handle creations inside deletions gracefully",(async function(){const t=e.getData().localRoot,o=await w.default.bookmarks.create({title:"foo",parentId:t}),r=await w.default.bookmarks.create({title:"bar",parentId:o.id});await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:r.id});const l=await e.localTree.getBookmarksTree(!0);await e.sync(),T(e.getData().error).to.not.be.ok,await a.sync(),T(e.getData().error).to.not.be.ok;const i=await S(e),n=await e.localTree.getBookmarksTree(!0),c=await a.localTree.getBookmarksTree(!0);B(n,l,!1),i.title=l.title,B(i,l,!1),c.title=l.title,B(c,l,!1),console.log("First round ok");const s=await a.localTree.getBookmarksTree(!0);await w.default.bookmarks.removeTree(s.children[0].children[0].id),await w.default.bookmarks.create({title:"url2",url:"http://ur2.l/",parentId:r.id}),console.log("acc1: Created bookmark in bar and deleted bar on the other side");const d=await a.localTree.getBookmarksTree(!0);await a.sync(),T(a.getData().error).to.not.be.ok,await e.sync(),T(e.getData().error).to.not.be.ok;const k=await S(e),u=await e.localTree.getBookmarksTree(!0);B(u,d,!1),k.title=d.title,B(k,d,!1),console.log("Second round second half ok"),console.log("acc2: final sync"),await a.sync(),T(a.getData().error).to.not.be.ok;const m=await S(e),f=await a.localTree.getBookmarksTree(!0);B(f,d,!1),d.title=m.title,B(m,d,!1)})),it("should handle duplicate bookmarks in different serverRoot folders",(async function(){if("nextcloud-bookmarks"!==t.type)return this.skip();await e.setData({serverRoot:"/folder1"}),await a.setData({serverRoot:"/folder2"});const o=e.getData().localRoot,r=await w.default.bookmarks.create({title:"foo",parentId:o}),l=await w.default.bookmarks.create({title:"bar",parentId:r.id});await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:l.id});const i=a.getData().localRoot,n=await w.default.bookmarks.create({title:"foo",parentId:i}),c=await w.default.bookmarks.create({title:"bar",parentId:n.id});await e.sync(),T(e.getData().error).to.not.be.ok,await a.sync(),T(a.getData().error).to.not.be.ok,await w.default.bookmarks.create({title:"foo",url:"http://ur.l/",parentId:c.id}),await a.sync(),T(a.getData().error).to.not.be.ok,await e.sync(),T(e.getData().error).to.not.be.ok,await a.sync(),T(a.getData().error).to.not.be.ok;const s=await S(e),d=await e.localTree.getBookmarksTree(!0),k=await a.localTree.getBookmarksTree(!0);s.title=d.title,B(s,d,!1),B(k,d,!1)})),it("should handle concurrent hierarchy reversals",(async function(){const t=e.getData().localRoot,o=await w.default.bookmarks.create({title:"a",parentId:t}),r=await w.default.bookmarks.create({title:"b",parentId:o.id}),l=await w.default.bookmarks.create({title:"c",parentId:t});await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:l.id}),await w.default.bookmarks.create({title:"urlalala",url:"http://ur.la/",parentId:r.id});const i=await e.localTree.getBookmarksTree(!0);await e.sync(),T(e.getData().error).to.not.be.ok,await a.sync(),T(e.getData().error).to.not.be.ok;const n=await S(e),c=await e.localTree.getBookmarksTree(!0),s=await a.localTree.getBookmarksTree(!0);B(c,i,!1,!1),n.title=i.title,B(n,i,!1,!1),s.title=i.title,B(s,i,!1,!1),console.log("First round ok");const d=await a.localTree.getBookmarksTree(!0);await w.default.bookmarks.move(o.id,{parentId:l.id}),console.log("acc1: MOVE a ->c"),await w.default.bookmarks.move(d.children.find((t=>"c"===t.title)).id,{parentId:d.children.find((t=>"a"===t.title)).children.find((t=>"b"===t.title)).id}),console.log("acc2: MOVE c ->b"),await a.sync(),T(a.getData().error).to.not.be.ok,await e.sync(),T(e.getData().error).to.not.be.ok;const k=await S(e),u=await e.localTree.getBookmarksTree(!0);k.title=u.title,B(k,u,!1,!1),console.log("Second round second half ok"),console.log("acc2: final sync"),await a.sync(),T(a.getData().error).to.not.be.ok;const m=await S(e),f=await a.localTree.getBookmarksTree(!0);f.title=m.title,B(m,f,!1,!1),u.title=f.title,B(f,u,!1,!1)})),it("should handle complex hierarchy reversals",(async function(){const t=e.getData().localRoot,o=await w.default.bookmarks.create({title:"a",parentId:t}),r=await w.default.bookmarks.create({title:"b",parentId:o.id}),l=await w.default.bookmarks.create({title:"c",parentId:r.id}),i=await w.default.bookmarks.create({title:"d",parentId:t}),n=await w.default.bookmarks.create({title:"e",parentId:i.id});await w.default.bookmarks.create({title:"f",parentId:i.id});const c=await w.default.bookmarks.create({title:"g",parentId:t});await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:r.id}),await w.default.bookmarks.create({title:"urlalala",url:"http://ur.la/",parentId:i.id}),await w.default.bookmarks.create({title:"urlalala",url:"http://ur2.l/",parentId:n.id});const s=await e.localTree.getBookmarksTree(!0);await e.sync(),T(e.getData().error).to.not.be.ok,await a.sync(),T(e.getData().error).to.not.be.ok;const d=await S(e),k=await e.localTree.getBookmarksTree(!0),u=await a.localTree.getBookmarksTree(!0);B(k,s,!1,!1),d.title=s.title,B(d,s,!1,!1),u.title=s.title,B(u,s,!1,!1),console.log("First round ok");const m=await a.localTree.getBookmarksTree(!0);await w.default.bookmarks.move(o.id,{parentId:c.id}),console.log("acc1: MOVE a ->g"),await w.default.bookmarks.move(i.id,{parentId:l.id}),console.log("acc1: MOVE d ->c"),await w.default.bookmarks.move(m.children.find((t=>"a"===t.title)).children.find((t=>"b"===t.title)).children.find((t=>"c"===t.title)).id,{parentId:m.children.find((t=>"d"===t.title)).children.find((t=>"f"===t.title)).id}),console.log("acc2: MOVE c ->f"),await w.default.bookmarks.move(m.children.find((t=>"a"===t.title)).children.find((t=>"b"===t.title)).id,{parentId:m.children.find((t=>"d"===t.title)).children.find((t=>"e"===t.title)).id}),console.log("acc2: MOVE b ->e"),await a.sync(),T(a.getData().error).to.not.be.ok,await e.sync(),T(e.getData().error).to.not.be.ok;const f=await S(e),h=await e.localTree.getBookmarksTree(!0);f.title=h.title,B(f,h,!1,!1),console.log("Second round second half ok"),console.log("acc2: final sync"),await a.sync(),T(a.getData().error).to.not.be.ok;const p=await S(e),g=await a.localTree.getBookmarksTree(!0);g.title=p.title,B(p,g,!1,!1),h.title=g.title,B(g,h,!1,!1)})),it("should handle complex hierarchy reversals 2",(async function(){if("linkwarden"===t.type)return this.skip();const o=e.getData().localRoot,r=await w.default.bookmarks.create({title:"a",parentId:o}),l=await w.default.bookmarks.create({title:"g",parentId:r.id}),i=await w.default.bookmarks.create({title:"b",parentId:o}),n=await w.default.bookmarks.create({title:"c",parentId:i.id}),c=await w.default.bookmarks.create({title:"d",parentId:n.id}),s=await w.default.bookmarks.create({title:"e",parentId:o});await w.default.bookmarks.create({title:"f",parentId:s.id}),await w.default.bookmarks.create({title:"h",parentId:i.id});const d=await e.localTree.getBookmarksTree(!0);await e.sync(),T(e.getData().error).to.not.be.ok,await a.sync(),T(e.getData().error).to.not.be.ok;const k=await S(e),u=await e.localTree.getBookmarksTree(!0),m=await a.localTree.getBookmarksTree(!0);B(u,d,!1,!1),k.title=d.title,B(k,d,!1,!1),m.title=d.title,B(m,d,!1,!1),console.log("First round ok");const f=await a.localTree.getBookmarksTree(!0);await w.default.bookmarks.move(r.id,{parentId:c.id}),console.log("acc1: MOVE a ->d"),await w.default.bookmarks.remove(l.id),console.log("acc1: REMOVE g"),await w.default.bookmarks.move(f.children.find((t=>"b"===t.title)).children.find((t=>"c"===t.title)).id,{parentId:f.children.find((t=>"b"===t.title)).children.find((t=>"h"===t.title)).id}),console.log("acc2: MOVE c ->h"),await w.default.bookmarks.move(f.children.find((t=>"b"===t.title)).id,{parentId:f.children.find((t=>"e"===t.title)).children.find((t=>"f"===t.title)).id}),console.log("acc2: MOVE b ->f"),await w.default.bookmarks.move(f.children.find((t=>"e"===t.title)).id,{parentId:f.children.find((t=>"a"===t.title)).children.find((t=>"g"===t.title)).id}),console.log("acc2: MOVE e ->g"),await a.sync(),T(a.getData().error).to.not.be.ok,await e.sync(),T(e.getData().error).to.not.be.ok;const h=await S(e),p=await e.localTree.getBookmarksTree(!0);h.title=p.title,B(h,p,!1,!1),console.log("Second round second half ok"),console.log("acc2: final sync"),await a.sync(),T(a.getData().error).to.not.be.ok;const g=await S(e),b=await a.localTree.getBookmarksTree(!0);b.title=g.title,B(g,b,!1,!1),p.title=b.title,B(b,p,!1,!1)})),it("should handle faux hierarchy reversals",(async function(){const t=e.getData().localRoot,o=await w.default.bookmarks.create({title:"a",parentId:t}),r=await w.default.bookmarks.create({title:"b",parentId:t}),l=await w.default.bookmarks.create({title:"c",parentId:r.id});await w.default.bookmarks.create({title:"d",parentId:t});const i=await w.default.bookmarks.create({title:"e",parentId:t});await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:l.id}),await w.default.bookmarks.create({title:"urlalala",url:"http://ur.la/",parentId:r.id});const n=await e.localTree.getBookmarksTree(!0);await e.sync(),T(e.getData().error).to.not.be.ok,await a.sync(),T(e.getData().error).to.not.be.ok;const c=await S(e),s=await e.localTree.getBookmarksTree(!0),d=await a.localTree.getBookmarksTree(!0);B(s,n,!1,!1),c.title=n.title,B(c,n,!1,!1),d.title=n.title,B(d,n,!1,!1),console.log("First round ok");const k=await a.localTree.getBookmarksTree(!0);await w.default.bookmarks.move(o.id,{parentId:l.id}),console.log("acc1: MOVE a ->c"),await w.default.bookmarks.remove(i.id),console.log("acc1: REMOVE e");const u=await w.default.bookmarks.create({title:"new",parentId:k.children.find((t=>"e"===t.title)).id});await w.default.bookmarks.create({title:"urlabyrinth",url:"http://ur2.l/",parentId:u.id}),console.log("acc2: CREATE new ->e"),await w.default.bookmarks.move(k.children.find((t=>"b"===t.title)).children.find((t=>"c"===t.title)).id,{parentId:u.id}),console.log("acc2: MOVE c ->new"),await w.default.bookmarks.move(k.children.find((t=>"b"===t.title)).id,{parentId:k.children.find((t=>"a"===t.title)).id}),console.log("acc2: MOVE b ->a"),await w.default.bookmarks.move(k.children.find((t=>"e"===t.title)).id,{parentId:k.children.find((t=>"d"===t.title)).id}),console.log("acc2: MOVE e ->d"),await a.sync(),T(a.getData().error).to.not.be.ok,await e.sync(),T(e.getData().error).to.not.be.ok;const m=await S(e),f=await e.localTree.getBookmarksTree(!0);m.title=f.title,B(m,f,!1,!1),console.log("Second round second half ok"),console.log("acc2: final sync"),await a.sync(),T(a.getData().error).to.not.be.ok;const h=await S(e),p=await a.localTree.getBookmarksTree(!0);p.title=h.title,B(h,p,!1,!1),f.title=p.title,B(p,f,!1,!1)})),it("should handle complex move-remove interactions",(async function(){const t=e.getData().localRoot,o=await w.default.bookmarks.create({title:"z",parentId:t}),r=await w.default.bookmarks.create({title:"a",parentId:o.id}),l=await w.default.bookmarks.create({title:"b",parentId:t}),i=await w.default.bookmarks.create({title:"c",parentId:t});await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:r.id});const n=await w.default.bookmarks.create({title:"urlalala",url:"http://ur.la/",parentId:l.id}),c=await e.localTree.getBookmarksTree(!0);await e.sync(),T(e.getData().error).to.not.be.ok,await a.sync(),T(e.getData().error).to.not.be.ok;const s=await S(e),d=await e.localTree.getBookmarksTree(!0),k=await a.localTree.getBookmarksTree(!0);B(d,c,!1,!1),s.title=c.title,B(s,c,!1,!1),k.title=c.title,B(k,c,!1,!1),console.log("First round ok");const u=await w.default.bookmarks.create({title:"new",parentId:r.id});await w.default.bookmarks.move(n.id,{parentId:u.id}),await w.default.bookmarks.move(r.id,{parentId:l.id}),await w.default.bookmarks.move(o.id,{parentId:i.id});const m=await a.localTree.getBookmarksTree(!0);await w.default.bookmarks.removeTree(m.children.find((t=>"z"===t.title)).id),await a.sync(),T(a.getData().error).to.not.be.ok,await e.sync(),T(e.getData().error).to.not.be.ok;const f=await S(e),h=await e.localTree.getBookmarksTree(!0);f.title=h.title,B(f,h,!1,!1),console.log("Second round second half ok"),console.log("acc2: final sync"),await a.sync(),T(a.getData().error).to.not.be.ok;const p=await S(e),g=await a.localTree.getBookmarksTree(!0);g.title=p.title,B(p,g,!1,!1),h.title=g.title,B(g,h,!1,!1)})),it("should synchronize ordering",(async function(){if("linkwarden"===t.type)return this.skip();T((await S(e)).children).to.have.lengthOf(0);const o=e.getData().localRoot,r=await w.default.bookmarks.create({title:"foo",parentId:o}),l=await w.default.bookmarks.create({title:"folder1",parentId:r.id}),i=await w.default.bookmarks.create({title:"folder2",parentId:r.id}),n=await w.default.bookmarks.create({title:"url1",url:"http://ur.l/",parentId:r.id}),c=await w.default.bookmarks.create({title:"url2",url:"http://ur.ll/",parentId:r.id});await e.sync(),T(e.getData().error).to.not.be.ok,await a.sync(),T(a.getData().error).to.not.be.ok;const s=await e.localTree.getBookmarksTree(!0),d=await a.localTree.getBookmarksTree(!0);d.title=s.title,B(s,d,!0,!0),await w.default.bookmarks.move(n.id,{index:0}),await w.default.bookmarks.move(l.id,{index:1}),await w.default.bookmarks.move(c.id,{index:2}),await w.default.bookmarks.move(i.id,{index:3}),await e.sync(),T(e.getData().error).to.not.be.ok,await a.sync(),T(a.getData().error).to.not.be.ok,await e.sync(),T(e.getData().error).to.not.be.ok;const k=await e.localTree.getBookmarksTree(!0);B(k,new u.Folder({title:k.title,children:[new u.Folder({title:"foo",children:[new u.Bookmark({title:"url1",url:n.url}),new u.Folder({title:"folder1",children:[]}),new u.Bookmark({title:"url2",url:c.url}),new u.Folder({title:"folder2",children:[]})]})]}),!0,!0);const m=await a.localTree.getBookmarksTree(!0);m.title=k.title,B(k,m,!0,!0)})),it('should propagate moves using "last write wins"',(async function(){if("nextcloud-bookmarks"===t.type)return this.skip();const o=e.getData().localRoot,r=await w.default.bookmarks.create({title:"foo",parentId:o}),l=await w.default.bookmarks.create({title:"bar",parentId:r.id}),i=await w.default.bookmarks.create({title:"url",url:"http://ur.l/",parentId:l.id}),n=await e.localTree.getBookmarksTree(!0);await e.sync(),await a.sync();const c=await S(e),s=await e.localTree.getBookmarksTree(!0),d=await a.localTree.getBookmarksTree(!0);B(s,n,!1),c.title=n.title,B(c,n,!1),d.title=n.title,B(d,n,!1),console.log("First round ok"),await w.default.bookmarks.move(i.id,{parentId:r.id}),console.log("acc1: Moved bookmark from bar into foo");const k=await e.localTree.getBookmarksTree(!0);await e.sync();const u=await S(e),m=await e.localTree.getBookmarksTree(!0);B(m,k,!1),u.title=m.title,B(u,m,!1),console.log("Second round first half ok");const f=(await a.localTree.getBookmarksTree(!0)).children[0].children[0].children[0].id;await w.default.bookmarks.move(f,{parentId:a.getData().localRoot}),console.log("acc2: Moved bookmark from bar into root");const h=await a.localTree.getBookmarksTree(!0);await a.sync();const p=await S(e),g=await a.localTree.getBookmarksTree(!0);B(g,h,!1),p.title=g.title,B(p,g,!1),console.log("Second round second half ok"),console.log("acc1: final sync"),await e.sync();const b=await S(e),y=await e.localTree.getBookmarksTree(!0);B(y,g,!1),g.title=b.title,B(g,b,!1)}))})),context("with tabs",(function(){if("linkwarden"===t.type)return;let e;beforeEach("set up account",(async function(){e=await k().create(t),"fake"===t.type&&(e.server.bookmarksCache=new u.Folder({id:"",title:"root",location:"Server"})),await e.init(),await e.setData({localRoot:"tabs"}),t.noCache&&(e.storage.setCache=()=>{},e.storage.setMappings=()=>{})})),afterEach("clean up account",(async function(){if(e){try{await O();const t=await w.default.tabs.query({windowType:"normal"});await w.default.tabs.remove(t.filter((t=>t.url.startsWith("http"))).map((t=>t.id)))}catch(t){console.error(t)}if(await O(),"git"===t.type)await e.server.clearServer();else if("fake"!==t.type){await e.setData({serverRoot:null}),e.lockTimeout=0;const t=await S(e);await R(e,(async()=>{await h.each(t.children,(async t=>{t instanceof u.Folder?await e.server.removeFolder(t):await e.server.removeBookmark(t)}))}))}if("google-drive"===t.type){const t=(await e.server.listFiles("name = '"+e.server.bookmark_file+"'")).files;for(const a of t)await e.server.deleteFile(a.id);if(t.length>1)throw new Error("Google Drive sync left more than one file behind")}await e.delete()}})),it("should create local tabs on the server",(async function(){w.default.tabs.create({index:1,url:"https://example.org/#test1"}),w.default.tabs.create({index:2,url:"https://example.org/#test2"}),await O(),await e.sync(),T(e.getData().error).to.not.be.ok;const t=await S(e);B(t,new u.Folder({title:t.title,children:[new u.Folder({title:"Window 0",children:[new u.Bookmark({title:"Example Domain",url:"https://example.org/#test1"}),new u.Bookmark({title:"Example Domain",url:"https://example.org/#test2"})]})]}),!1)})),it("should create server bookmarks as tabs",(async function(){const t=e.server,a=await S(e);let o,r;await R(e,(async()=>{o=await t.createFolder(new u.Folder({parentId:a.id,title:"Window 0",location:u.ItemLocation.SERVER})),r={title:"Example Domain",url:"https://example.org/",parentId:o,location:u.ItemLocation.SERVER},await t.createBookmark(new u.Bookmark(r))})),await e.sync(),T(e.getData().error).to.not.be.ok;const l=await S(e);B(l,new u.Folder({title:l.title,children:[new u.Folder({title:"Window 0",children:[new u.Bookmark({title:"Example Domain",url:"https://example.org/"})]})]}),!1)})),it("should update the server when pushing local changes",(async function(){await e.setData({strategy:"overwrite"}),w.default.tabs.create({index:1,url:"https://example.org/#test1"});const t=w.default.tabs.create({index:2,url:"https://example.org/#test2"});await O(),await e.sync(),T(e.getData().error).to.not.be.ok;let a=await S(e);B(a,new u.Folder({title:a.title,children:[new u.Folder({title:"Window 0",children:[new u.Bookmark({title:"Example Domain",url:"https://example.org/#test1"}),new u.Bookmark({title:"Example Domain",url:"https://example.org/#test2"})]})]}),!1),await w.default.tabs.update(t.id,{url:"https://example.org/#test3"}),await O(),await e.sync(),T(e.getData().error).to.not.be.ok,a=await S(e),B(a,new u.Folder({title:a.title,children:[new u.Folder({title:"Window 0",children:[new u.Bookmark({title:"Example Domain",url:"https://example.org/#test1"}),new u.Bookmark({title:"Example Domain",url:"https://example.org/#test3"})]})]}),!1)})),it("should update local tabs when pulling server changes",(async function(){const t=e.server,a=await S(e);let o,r,l;await R(e,(async()=>{o=await t.createFolder(new u.Folder({parentId:a.id,title:"Window 0",location:u.ItemLocation.SERVER})),r={title:"Example Domain",url:"https://example.org/#test1",parentId:o,location:u.ItemLocation.SERVER},l=await t.createBookmark(new u.Bookmark(r))})),await e.sync(),T(e.getData().error).to.not.be.ok;let i,n=await S(e);B(n,new u.Folder({title:n.title,children:[new u.Folder({title:"Window 0",children:[new u.Bookmark({title:"Example Domain",url:"https://example.org/#test1"})]})]}),!1),await R(e,(async()=>{i={title:"Example Domain",url:"https://example.org/#test3",parentId:n.children[0].id,location:u.ItemLocation.SERVER},await t.createBookmark(new u.Bookmark(i)),await t.updateBookmark({...r,id:l,url:"https://example.org/#test2",title:"Example Domain",parentId:n.children[0].id})})),await e.setData({strategy:"slave"}),await e.sync(),T(e.getData().error).to.not.be.ok,n=await S(e),B(n,new u.Folder({title:n.title,children:[new u.Folder({title:"Window 0",children:[new u.Bookmark({title:"Example Domain",url:"https://example.org/#test2"}),new u.Bookmark({title:"Example Domain",url:"https://example.org/#test3"})]})]}),!1)})),it("should sync tabs correctly when merging server and local changes",(async function(){if(t.noCache)return this.skip();const a=e.server,o=await S(e);let r,l,i;await R(e,(async()=>{r=await a.createFolder(new u.Folder({parentId:o.id,title:"Window 0",location:u.ItemLocation.SERVER})),l={title:"Example Domain",url:"https://example.org/#test1",parentId:r,location:u.ItemLocation.SERVER},i=await a.createBookmark(new u.Bookmark(l))})),await e.sync(),T(e.getData().error).to.not.be.ok;let n,c=await S(e);B(c,new u.Folder({title:c.title,children:[new u.Folder({title:"Window 0",children:[new u.Bookmark({title:"Example Domain",url:"https://example.org/#test1"})]})]}),!1),await R(e,(async()=>{n={title:"Example Domain",url:"https://example.org/#test3",parentId:c.children[0].id,location:u.ItemLocation.SERVER},await a.createBookmark(new u.Bookmark(n)),await a.updateBookmark({...l,id:i,url:"https://example.org/#test2",title:"Example Domain",parentId:c.children[0].id})})),await w.default.tabs.create({url:"https://example.org/#test4"}),await O(),await e.sync(),T(e.getData().error).to.not.be.ok,c=await S(e),B(c,new u.Folder({title:c.title,children:[new u.Folder({title:"Window 0",children:[new u.Bookmark({title:"Example Domain",url:"https://example.org/#test2"}),new u.Bookmark({title:"Example Domain",url:"https://example.org/#test3"}),new u.Bookmark({title:"Example Domain",url:"https://example.org/#test4"})]})]}),!1,!1)}))}))}))})),o.forEach((t=>{describe(`${x(t)} benchmark ${t.serverRoot?"subfolder":"root"}`,(function(){context("with two clients",(function(){this.timeout(72e5);let e,a,o=!1,r=[],i=0;const d=()=>{r.length||(r=new Array(1e3).fill(0).map((()=>"nextcloud-bookmarks"===t.type?n().int(5e4,15e4):n().int(100,3e3))));const l=r[i++%1e3];setTimeout((()=>{o&&(console.log("INTERRUPT! (after "+l+")"),e.cancelSync(),a.cancelSync(),d())}),l)};let m;beforeEach("set up accounts",(async function(){let o=B;if(B=(t,e,a,r)=>o(t,e,a,!!r),n().use(s()(l)),e=await k().create({...t,failsafe:!1}),await e.init(),a=await k().create({...t,failsafe:!1}),await a.init(),"fake"===t.type){let t=new u.Folder({id:"",title:"root",location:"Server"});e.server.bookmarksCache=new u.Folder({id:"",title:"root",location:"Server"}),a.server.bookmarksCache=new u.Folder({id:"",title:"root",location:"Server"}),e.server.onSyncStart=()=>{e.server.bookmarksCache=t.clone(!1)},e.server.onSyncComplete=()=>{t=e.server.bookmarksCache.clone(!1)},a.server.onSyncStart=()=>{a.server.bookmarksCache=t.clone(!1)},a.server.onSyncComplete=()=>{t=a.server.bookmarksCache.clone(!1)},a.server.__defineSetter__("highestId",(t=>{e.server.highestId=t})),a.server.__defineGetter__("highestId",(()=>e.server.highestId))}t.noCache&&(e.storage.setCache=()=>{},e.storage.setMappings=()=>{},a.storage.setCache=()=>{},a.storage.setMappings=()=>{})})),afterEach("clean up accounts",(async function(){if(o=!1,await w.default.bookmarks.removeTree(e.getData().localRoot),"git"===t.type)await e.server.clearServer();else if("fake"!==t.type){await e.setData({serverRoot:null}),e.lockTimeout=0;const t=await S(e);await R(e,(async()=>{await h.each(t.children,(async t=>{t instanceof u.Folder?await e.server.removeFolder(t):await e.server.removeBookmark(t)}))}))}if("google-drive"===t.type){const t=(await e.server.listFiles("name = '"+e.server.bookmark_file+"'")).files;for(const a of t)await e.server.deleteFile(a.id);if(t.length>1)throw new Error("Google Drive sync left more than one file behind")}await e.delete(),await w.default.bookmarks.removeTree(a.getData().localRoot),await a.delete()})),it("should handle deep hierarchies with lots of bookmarks",(async function(){const o=e.getData().localRoot;let r,l,i=0,n=0;const c=async(t,e,a)=>{const o=Math.abs(e-a);for(let o=e;o<a;o++){const e=await w.default.bookmarks.create({title:"url"+o,url:"http://ur.l/"+t+"/"+o,parentId:t});i++,33===i&&(l=e)}if(o<4)return;const s=Math.floor(o/4);for(let o=e;o<a;o+=s){const e=await w.default.bookmarks.create({title:"folder"+o,parentId:t});n++,33===n&&(r=e),await c(e.id,o,o+s)}};await c(o,0,100);const s=await e.localTree.getBookmarksTree(!0);await e.sync(),T(e.getData().error).to.not.be.ok,await a.sync(),T(a.getData().error).to.not.be.ok;let d=await S(e),k=await e.localTree.getBookmarksTree(!0),u=await a.localTree.getBookmarksTree(!0);t.noCache||(B(k,s,!1),d.title=s.title,B(d,s,!1),u.title=s.title,B(u,s,!1)),d=null,k=null,u=null,console.log("First round ok"),await w.default.bookmarks.move(l.id,{parentId:r.id}),console.log("acc1: Moved bookmark");let m=await e.localTree.getBookmarksTree(!0);await e.sync(),T(e.getData().error).to.not.be.ok;let f=await S(e),h=await e.localTree.getBookmarksTree(!0);t.noCache||(B(h,m,!1),f.title=h.title,B(f,h,!1)),m=null,f=null,console.log("Second round first half ok"),await a.sync(),T(a.getData().error).to.not.be.ok;let p=await S(e),g=await a.localTree.getBookmarksTree(!0);t.noCache||(B(g,h,!1),p.title=g.title,B(p,g,!1)),p=null,console.log("Second round second half ok"),console.log("acc1: final sync"),await e.sync(),T(e.getData().error).to.not.be.ok;let b=await S(e),y=await e.localTree.getBookmarksTree(!0);t.noCache||(B(y,g,!1),g.title=b.title,B(g,b,!1)),b=null,y=null})),it("should handle fuzzed changes from one client",(async function(){const o=e.getData().localRoot;let r=[],l=[];const i=async(t,e,a)=>{const o=Math.abs(e-a);for(let o=e;o<a;o++){const l=await w.default.bookmarks.create({title:"url"+e+":"+o+":"+a,url:"http://ur.l/"+t+"/"+e+"/"+o+"/"+a,parentId:t});r.push(l)}if(o<4)return;const n=Math.floor(o/4);for(let o=e;o<a;o+=n){const a=await w.default.bookmarks.create({title:"folder"+e+":"+o+":"+(o+n),parentId:t});l.push(a),await i(a.id,o,o+n)}};await i(o,0,100);let n=await e.localTree.getBookmarksTree(!0);await e.sync(),T(e.getData().error).to.not.be.ok,console.log("Initial round account1 completed"),await a.sync(),T(a.getData().error).to.not.be.ok,console.log("Initial round account2 completed");let c=await S(e),s=await e.localTree.getBookmarksTree(!0),d=await a.localTree.getBookmarksTree(!0);t.noCache||(B(s,n,!1),console.log("Initial round: first tree ok"),c.title=n.title,B(c,n,!1),console.log("Initial round: server tree ok"),d.title=n.title,B(d,n,!1),console.log("Initial round: second tree ok")),n=null,s=null,d=null,c=null,console.log("Initial round ok");for(let o=0;o<4;o++){console.log("STARTING LOOP "+o);let i=await S(e),n=await e.localTree.getBookmarksTree(!0),c=await a.localTree.getBookmarksTree(!0);t.noCache||(n.title=i.title,B(n,i,!1),console.log("first tree ok"),c.title=i.title,B(c,i,!1),console.log("Initial round: second tree ok")),i=null,n=null,c=null,console.log("Initial round ok"),await E(e,l,r,20),console.log(" acc1: Moved items");let s=await e.localTree.getBookmarksTree(!0);await e.sync(),T(e.getData().error).to.not.be.ok,console.log("second round: account1 completed");let d=await S(e),k=await e.localTree.getBookmarksTree(!0);t.noCache||(B(k,s,!1),console.log("Second round: local tree tree ok"),d.title=k.title,B(d,k,!1),console.log("Second round: server tree tree ok")),s=null,d=null,console.log("first half ok"),await a.sync(),T(a.getData().error).to.not.be.ok,console.log("second round: account1 completed");let u=await S(e),w=await a.localTree.getBookmarksTree(!0);t.noCache||(B(w,k,!1),console.log("Second round: second local tree tree ok"),u.title=w.title,B(u,w,!1),console.log("Second round: second server tree tree ok")),u=null,console.log("second half ok"),console.log("final sync"),await e.sync(),T(e.getData().error).to.not.be.ok,console.log("final sync completed");let m=await S(e),f=await e.localTree.getBookmarksTree(!0);t.noCache||(B(f,w,!1),console.log("Final round: local tree tree ok"),w.title=m.title,B(w,m,!1),console.log("Final round: server tree tree ok")),m=null,f=null,await e.init(),await e.sync(),T(e.getData().error).to.not.be.ok,console.log("final sync after init completed");let h=await S(e),p=await e.localTree.getBookmarksTree(!0);t.noCache||(p.title=h.title,B(p,h,!1),console.log("Final round after init: local tree ok"),w.title=h.title,B(w,h,!1),console.log("Final round after init: server tree ok")),p=null,h=null,w=null}})),it("should handle fuzzed changes from two clients",(async function(){const o=e.getData().localRoot;let r,l,i=[],n=[];const c=async(t,e,a)=>{const o=Math.abs(e-a);for(let o=e;o<a;o++){const r=await w.default.bookmarks.create({title:"url"+e+":"+a+":"+o,url:"http://ur.l/"+t+"/"+e+"/"+a+"/"+o,parentId:t});i.push(r)}if(o<4)return;const r=Math.floor(o/4);for(let o=e;o<a;o+=r){const a=await w.default.bookmarks.create({title:"folder"+e+":"+o+":"+(o+r),parentId:t});n.push(a),await c(a.id,o,o+r)}};await c(o,0,100);let s=await e.localTree.getBookmarksTree(!0);await e.sync(),T(e.getData().error).to.not.be.ok,console.log("Initial round account1 completed"),await a.sync(),T(a.getData().error).to.not.be.ok,console.log("Initial round account2 completed");let d=await S(e),k=await e.localTree.getBookmarksTree(!0),u=await a.localTree.getBookmarksTree(!0);t.noCache||(B(k,s,!1),console.log("Initial round: first tree ok"),d.title=s.title,B(d,s,!1),console.log("Initial round: server tree ok"),u.title=s.title,B(u,s,!1),console.log("Initial round: second tree ok")),s=null,k=null,d=null,console.log("Initial round ok");for(let o=0;o<4;o++){console.log("STARTING LOOP "+o);let c=await S(e),s=await e.localTree.getBookmarksTree(!0),d=await a.localTree.getBookmarksTree(!0);t.noCache||(s.title=c.title,B(s,c,!1),console.log("first tree ok"),d.title=c.title,B(d,c,!1),console.log("Initial round: second tree ok")),s=null,c=null,console.log("Initial round ok"),r||(d.createIndex(),r=Object.values(d.index.bookmark),l=Object.values(d.index.folder).filter((t=>t.id!==d.id))),await E(e,n,i,20),await E(a,l,r,20),console.log(" acc1: Moved items");let k=await e.localTree.getBookmarksTree(!0);await e.sync(),T(e.getData().error).to.not.be.ok,console.log("second round: account1 completed");let u=await S(e),w=await e.localTree.getBookmarksTree(!0);t.noCache||(B(w,k,!1),console.log("Second round: local tree tree ok"),u.title=w.title,B(u,w,!1),console.log("Second round: server tree tree ok")),w=null,u=null,k=null,console.log("first half ok"),await a.sync(),T(a.getData().error).to.not.be.ok,console.log("second round: account1 completed"),"nextcloud-bookmarks"===t.type&&(await e.sync(),T(e.getData().error).to.not.be.ok,await a.sync(),T(a.getData().error).to.not.be.ok,console.log("Extra round-trip for Nextcloud Bookmarks completed"));let m=await S(e),f=await a.localTree.getBookmarksTree(!0);t.noCache||(m.title=f.title,B(m,f,!1),console.log("Second round: second server tree tree ok")),m=null,console.log("second half ok"),console.log("final sync"),await e.sync(),T(e.getData().error).to.not.be.ok,console.log("final sync completed");let h=await S(e),p=await e.localTree.getBookmarksTree(!0);t.noCache||(B(p,f,!1),console.log("Final round: local tree tree ok"),f.title=h.title,B(f,h,!1),console.log("Final round: server tree tree ok")),h=null,p=null,await e.init(),await e.sync(),T(e.getData().error).to.not.be.ok,console.log("final sync after init completed");let g=await S(e),b=await e.localTree.getBookmarksTree(!0);t.noCache||(b.title=g.title,B(b,g,!1),console.log("Final round after init: local tree ok"),f.title=g.title,B(f,g,!1),console.log("Final round after init: server tree ok")),f=null,b=null,g=null}})),it("should handle fuzzed changes with deletions from two clients",(async function(){const o=e.getData().localRoot;let r,l,i=[],n=[];const s=async(t,e,a)=>{const o=Math.abs(e-a);for(let o=e;o<a;o++){const r=await w.default.bookmarks.create({title:"url"+e+":"+a+":"+o,url:"http://ur.l/"+t+"/"+e+"/"+a+"/"+o,parentId:t});i.push(r)}if(o<4)return;const r=Math.floor(o/4);for(let o=e;o<a;o+=r){const a=await w.default.bookmarks.create({title:"folder"+e+":"+o+":"+(o+r),parentId:t});n.push(a),await s(a.id,o,o+r)}};await s(o,0,100);let d=await e.localTree.getBookmarksTree(!0);await e.sync(),T(e.getData().error).to.not.be.ok,console.log("Initial round account1 completed"),await a.sync(),T(a.getData().error).to.not.be.ok,console.log("Initial round account2 completed");let k=await S(e),u=await e.localTree.getBookmarksTree(!0),m=await a.localTree.getBookmarksTree(!0);t.noCache||(B(u,d,!1),console.log("Initial round: first tree ok"),k.title=d.title,B(k,d,!1),console.log("Initial round: server tree ok"),m.title=d.title,B(m,d,!1),console.log("Initial round: second tree ok")),d=null,k=null,u=null,m=null,console.log("Initial round ok");for(let o=0;o<4;o++){console.log("STARTING LOOP "+o);let s=await S(e),d=await e.localTree.getBookmarksTree(!0),k=await a.localTree.getBookmarksTree(!0);t.noCache||(d.title=s.title,B(d,s,!1),console.log("first tree ok"),k.title=s.title,B(k,s,!1),console.log("Initial round: second tree ok")),s=null,d=null,console.log("Initial round ok"),r||(k.createIndex(),r=Object.values(k.index.bookmark),l=Object.values(k.index.folder).filter((t=>t.id!==k.id))),await C(e,n,i,c),await C(a,l,r,c),console.log(" acc1&acc2: Moved items");let u=await e.localTree.getBookmarksTree(!0);await e.sync(),T(e.getData().error).to.not.be.ok,console.log("second round: account1 completed");let w=await S(e),m=await e.localTree.getBookmarksTree(!0);t.noCache||(B(m,u,!1),console.log("Second round: local tree tree ok"),w.title=m.title,B(w,m,!1),console.log("Second round: server tree tree ok")),u=null,m=null,w=null,console.log("first half ok"),await a.sync(),T(a.getData().error).to.not.be.ok,await a.sync(),T(a.getData().error).to.not.be.ok,console.log("second round: account2 completed");let f=await S(e),h=await a.localTree.getBookmarksTree(!0);t.noCache||(f.title=h.title,B(f,h,!1),console.log("Second round: second server tree tree ok")),f=null,console.log("second half ok"),console.log("final sync"),await e.sync(),T(e.getData().error).to.not.be.ok,console.log("final sync completed");let p=await S(e),g=await e.localTree.getBookmarksTree(!0);t.noCache||(B(g,h,!1),console.log("Final round: local tree tree ok"),h.title=p.title,B(h,p,!1),console.log("Final round: server tree tree ok")),g=null,await e.init(),await e.sync(),T(e.getData().error).to.not.be.ok,console.log("final sync after init completed");let b=await S(e),y=await e.localTree.getBookmarksTree(!0);t.noCache||(y.title=b.title,B(y,b,!1),console.log("Final round after init: local tree ok"),h.title=p.title,B(h,b,!1),console.log("Final round after init: server tree ok")),b=null,y=null,b=null}})),it.skip("should handle fuzzed changes with deletions from two clients with interrupts"+("fake"===t.type?" (with caching)":""),m=async function(){const r=e.getData().localRoot;let l,i,n=[],s=[];const k=async(t,e,a)=>{const o=Math.abs(e-a);for(let o=e;o<a;o++){const r=await w.default.bookmarks.create({title:"url"+e+":"+a+":"+o,url:"http://ur.l/"+t+"/"+e+"/"+a+"/"+o,parentId:t});n.push(r)}if(o<4)return;const r=Math.floor(o/4);for(let o=e;o<a;o+=r){const a=await w.default.bookmarks.create({title:"folder"+e+":"+o+":"+(o+r),parentId:t});s.push(a),await k(a.id,o,o+r)}};await k(r,0,100);let u=await e.localTree.getBookmarksTree(!0);await _(e),console.log("Initial round account1 completed"),await _(a),console.log("Initial round account2 completed");let m=await S(e),f=await e.localTree.getBookmarksTree(!0),h=await a.localTree.getBookmarksTree(!0);t.noCache||(B(f,u,!1),console.log("Initial round: first tree ok"),m.title=u.title,B(m,u,!1),console.log("Initial round: server tree ok"),h.title=u.title,B(h,u,!1),console.log("Initial round: second tree ok")),u=null,m=null,f=null,h=null,console.log("Initial round ok"),o=!0,d();for(let r=0;r<4;r++){console.log("STARTING LOOP "+r);let d=await S(e),k=await e.localTree.getBookmarksTree(!0),u=await a.localTree.getBookmarksTree(!0);t.noCache||(k.title=d.title,B(k,d,!1),console.log("first tree ok"),u.title=d.title,B(u,d,!1),console.log("Initial round: second tree ok")),d=null,k=null,console.log("Initial round ok"),l||(u.createIndex(),l=Object.values(u.index.bookmark),i=Object.values(u.index.folder).filter((t=>t.id!==u.id))),o=!1,await C(e,s,n,c),await C(a,i,l,c),o=!0,console.log(" acc1 &acc2: Moved items");let w=await e.localTree.getBookmarksTree(!0);await _(e),console.log("second round: account1 completed");let m=await S(e),f=await e.localTree.getBookmarksTree(!0);t.noCache||(B(f,w,!1),console.log("Second round: local tree tree ok"),m.title=f.title,B(m,f,!1),console.log("Second round: server tree tree ok")),w=null,f=null,m=null,console.log("first half ok"),await _(a),await _(a),console.log("second round: account2 completed");let h=await S(e),p=await a.localTree.getBookmarksTree(!0);t.noCache||(h.title=p.title,B(h,p,!1),console.log("Second round: second server tree tree ok")),h=null,console.log("second half ok"),console.log("final sync"),await _(e),console.log("final sync completed");let g=await S(e),b=await e.localTree.getBookmarksTree(!0);t.noCache||(B(b,p,!1),console.log("Final round: local tree tree ok"),p.title=g.title,B(p,g,!1),console.log("Final round: server tree tree ok")),b=null,await e.init(),await _(e),console.log("final sync after init completed");let y=await S(e),I=await e.localTree.getBookmarksTree(!0);t.noCache||(I.title=y.title,B(I,y,!1),console.log("Final round after init: local tree ok"),p.title=g.title,B(p,y,!1),console.log("Final round after init: server tree ok")),y=null,I=null,y=null}}),"fake"===t.type&&it.skip("should handle fuzzed changes with deletions from two clients with interrupts (no caching adapter)",(async function(){e.server.bookmarksCache=a.server.bookmarksCache=new u.Folder({id:"",title:"root",location:"Server"}),delete e.server.onSyncStart,delete e.server.onSyncComplete,delete a.server.onSyncStart,delete a.server.onSyncComplete,await m()})),it("unidirectional should handle fuzzed changes from two clients",(async function(){await a.setData({strategy:"slave"});const o=e.getData().localRoot;let r,l,i=[],n=[];const c=async(t,e,a)=>{const o=Math.abs(e-a);for(let o=e;o<a;o++){const r=await w.default.bookmarks.create({title:"url"+e+":"+a+":"+o,url:"http://ur.l/"+t+"/"+e+"/"+a+"/"+o,parentId:t});i.push(r)}if(o<4)return;const r=Math.floor(o/4);for(let o=e;o<a;o+=r){const a=await w.default.bookmarks.create({title:"folder"+e+":"+o+":"+(o+r),parentId:t});n.push(a),await c(a.id,o,o+r)}};await c(o,0,100);let s=await e.localTree.getBookmarksTree(!0);await e.sync(),T(e.getData().error).to.not.be.ok,console.log("Initial round account1 completed"),await a.sync(),T(a.getData().error).to.not.be.ok,console.log("Initial round account2 completed");let d=await S(e),k=await e.localTree.getBookmarksTree(!0),u=await a.localTree.getBookmarksTree(!0);t.noCache||(B(k,s,!1),console.log("Initial round: first tree ok"),d.title=s.title,B(d,s,!1),console.log("Initial round: server tree ok"),u.title=s.title,B(u,s,!1),console.log("Initial round: second tree ok")),s=null,k=null,d=null,console.log("Initial round ok");for(let o=0;o<4;o++){console.log("STARTING LOOP "+o);let c=await S(e),s=await e.localTree.getBookmarksTree(!0),d=await a.localTree.getBookmarksTree(!0);t.noCache||(s.title=c.title,B(s,c,!1),console.log("first tree ok"),d.title=c.title,B(d,c,!1),console.log("Initial round: second tree ok")),s=null,c=null,console.log("Initial round ok"),r||(d.createIndex(),r=Object.values(d.index.bookmark),l=Object.values(d.index.folder).filter((t=>t.id!==d.id))),await E(e,n,i,20),await E(a,l,r,20),console.log(" acc1: Moved items");let k=await e.localTree.getBookmarksTree(!0);await e.sync(),T(e.getData().error).to.not.be.ok,console.log("second round: account1 completed");let u=await S(e),w=await e.localTree.getBookmarksTree(!0);t.noCache||(B(w,k,!1),console.log("Second round: local tree tree ok"),u.title=w.title,B(u,w,!1),console.log("Second round: server tree tree ok")),k=null,console.log("first half ok"),await a.sync(),T(a.getData().error).to.not.be.ok,console.log("second round: account1 completed");let m=await S(e),f=await a.localTree.getBookmarksTree(!0);t.noCache||(m.title=w.title,B(m,w,!1),m.title=f.title,B(m,f,!1),console.log("Second round: second server tree tree ok")),m=null,console.log("second half ok"),console.log("final sync"),await e.sync(),T(e.getData().error).to.not.be.ok,console.log("final sync completed");let h=await S(e),p=await e.localTree.getBookmarksTree(!0);t.noCache||(B(p,f,!1),console.log("Final round: local tree tree ok"),f.title=h.title,B(f,h,!1),console.log("Final round: server tree tree ok")),h=null,p=null,await e.init(),await e.sync(),T(e.getData().error).to.not.be.ok,console.log("final sync after init completed");let g=await S(e),b=await e.localTree.getBookmarksTree(!0);t.noCache||(w.title=g.title,B(w,g,!1),b.title=u.title,B(b,u,!1),console.log("Final round after init: local tree ok"),f.title=g.title,B(f,g,!1),console.log("Final round after init: server tree ok")),f=null,b=null,g=null}})),it("unidirectional should handle fuzzed changes with deletions from two clients",(async function(){await a.setData({strategy:"slave"});const o=e.getData().localRoot;let r,l,i=[],n=[];const s=async(t,e,a)=>{const o=Math.abs(e-a);for(let o=e;o<a;o++){const r=await w.default.bookmarks.create({title:"url"+e+":"+a+":"+o,url:"http://ur.l/"+t+"/"+e+"/"+a+"/"+o,parentId:t});i.push(r)}if(o<4)return;const r=Math.floor(o/4);for(let o=e;o<a;o+=r){const a=await w.default.bookmarks.create({title:"folder"+e+":"+o+":"+(o+r),parentId:t});n.push(a),await s(a.id,o,o+r)}};await s(o,0,100);let d=await e.localTree.getBookmarksTree(!0);await e.sync(),T(e.getData().error).to.not.be.ok,console.log("Initial round account1 completed"),await a.sync(),T(a.getData().error).to.not.be.ok,console.log("Initial round account2 completed");let k=await S(e),u=await e.localTree.getBookmarksTree(!0),m=await a.localTree.getBookmarksTree(!0);t.noCache||(u.title=d.title,B(u,d,!1),console.log("Initial round: first tree ok"),k.title=d.title,B(k,d,!1),console.log("Initial round: server tree ok"),m.title=d.title,B(m,d,!1),console.log("Initial round: second tree ok")),d=null,k=null,u=null,m=null,console.log("Initial round ok");for(let o=0;o<4;o++){console.log("STARTING LOOP "+o);let s=await S(e),d=await e.localTree.getBookmarksTree(!0),k=await a.localTree.getBookmarksTree(!0);t.noCache||(d.title=s.title,B(d,s,!1),console.log("first tree ok"),k.title=s.title,B(k,s,!1),console.log("Initial round: second tree ok")),s=null,d=null,console.log("Initial round ok"),r||(k.createIndex(),r=Object.values(k.index.bookmark),l=Object.values(k.index.folder).filter((t=>t.id!==k.id))),await C(e,n,i,c),await C(a,l,r,c),console.log(" acc1: Moved items");let u=await e.localTree.getBookmarksTree(!0);await e.sync(),T(e.getData().error).to.not.be.ok,console.log("second round: account1 completed");let w=await S(e),m=await e.localTree.getBookmarksTree(!0);t.noCache||(u.title=m.title,B(m,u,!1),console.log("Second round: local tree tree ok"),w.title=m.title,B(w,m,!1),console.log("Second round: server tree tree ok")),u=null,console.log("first half ok"),await a.sync(),T(a.getData().error).to.not.be.ok,await a.sync(),T(a.getData().error).to.not.be.ok,console.log("second round: account2 completed");let f=await S(e),h=await a.localTree.getBookmarksTree(!0);t.noCache||(w.title=f.title,B(f,w,!1),f.title=h.title,B(f,h,!1),console.log("Second round: second server tree tree ok")),f=null,console.log("second half ok"),console.log("final sync"),await e.sync(),T(e.getData().error).to.not.be.ok,console.log("final sync completed");let p=await S(e),g=await e.localTree.getBookmarksTree(!0);t.noCache||(g.title=m.title,B(g,m,!1),h.title=g.title,B(g,h,!1),console.log("Final round: local tree tree ok"),w.title=p.title,B(p,w,!1),h.title=p.title,B(h,p,!1),console.log("Final round: server tree tree ok")),g=null,await e.init(),await e.sync(),T(e.getData().error).to.not.be.ok,console.log("final sync after init completed");let b=await S(e),y=await e.localTree.getBookmarksTree(!0);t.noCache||(y.title=b.title,B(y,b,!1),y.title=m.title,B(y,m,!1),console.log("Final round after init: local tree ok"),b.title=w.title,B(b,w,!1),console.log("Final round after init: server tree ok")),b=null,y=null,b=null}}))}))}))}))}))},89648:(t,e,a)=>{"use strict";a.r(e),a.d(e,{default:()=>l}),a(33110);var o=a(43376),r=a.n(o);class l extends(r()){constructor(t){super(),this.server=t}static getDefaultValues(){return{type:"fake"}}setData(t){this.server=t}getData(){return JSON.parse(JSON.stringify(this.server))}getLabel(){return"Fake account (floccus)"}}}}]);
//# sourceMappingURL=936.js.map