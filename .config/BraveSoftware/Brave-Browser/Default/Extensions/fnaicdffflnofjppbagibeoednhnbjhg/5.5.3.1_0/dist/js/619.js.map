{"version":3,"file":"619.js","mappings":"otBACO,MAAMA,UAAuB,EAAAC,UAChC,WAAAC,GACIC,SAASC,WACTC,KAAKC,MAAQ,kBACjB,CACA,eAAMC,EAAU,MAAED,IACO,iBAAVA,IACPD,KAAKC,MAAQA,EAErB,CACA,SAAME,CAAIC,GAEN,MAAO,CAAEC,MADKL,KAAKM,KAAKC,QAAQP,KAAKQ,YAAYJ,EAAQK,MAE7D,CACA,SAAMC,CAAIN,GACNJ,KAAKM,KAAKK,QAAQX,KAAKQ,YAAYJ,EAAQK,KAAML,EAAQC,MAC7D,CACA,YAAMO,CAAOR,GACTJ,KAAKM,KAAKO,WAAWb,KAAKQ,YAAYJ,EAAQK,KAClD,CACA,UAAMK,GAEF,MAAO,CAAEA,KADId,KAAKe,UAAUC,KAAIC,GAAKA,EAAEC,UAAUlB,KAAKmB,OAAOC,UAEjE,CACA,WAAMC,GACF,IAAK,MAAMZ,KAAOT,KAAKe,UACnBf,KAAKM,KAAKO,WAAWJ,EAE7B,CACA,aAAMa,GACF,IAAIC,EACJ,MAAMC,EAAW,GACXC,EAAW,GAEXX,EAAOY,OAAOZ,KAAKd,KAAKM,MAAMqB,QAAOV,GAA8B,IAAzBA,EAAEW,QADhC,WAElB,IAAK,MAAMC,KAAUf,EAAM,CACvB,MAAML,EAAMoB,EAAOX,UAAUY,GACvBzB,EAA6C,QAApCkB,EAAKvB,KAAKM,KAAKC,QAAQsB,UAA4B,IAAPN,EAAgBA,EAAK,IACxElB,MAAO0B,SAAuB/B,KAAKG,IAAI,CAAEM,QACrB,iBAAjBsB,EACPN,EAASO,KAAKvB,UAGRT,KAAKU,IAAI,CAAED,MAAKJ,UACtBmB,EAASQ,KAAKvB,GAEtB,CACA,MAAO,CAAEe,WAAUC,WACvB,CACA,eAAMQ,GACF,MACMnB,EAAOY,OAAOZ,KAAKd,KAAKM,MAAMqB,QAAOV,GAA8B,IAAzBA,EAAEW,QADhC,WAElB,IAAK,MAAMC,KAAUf,EACjBd,KAAKM,KAAKO,WAAWgB,EAE7B,CACA,QAAIvB,GACA,OAAO4B,OAAOC,YAClB,CACA,UAAIhB,GACA,MAAsB,kBAAfnB,KAAKC,MAA4B,GAAK,GAAGD,KAAKC,QACzD,CACA,OAAAc,GACI,OAAOW,OAAOZ,KAAKd,KAAKM,MAAMqB,QAAOV,GAAgC,IAA3BA,EAAEW,QAAQ5B,KAAKmB,SAC7D,CACA,WAAAX,CAAYC,GACR,OAAOT,KAAKmB,OAASV,CACzB,E","sources":["webpack://floccus/./node_modules/@capacitor/preferences/dist/esm/web.js"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\nexport class PreferencesWeb extends WebPlugin {\n    constructor() {\n        super(...arguments);\n        this.group = 'CapacitorStorage';\n    }\n    async configure({ group }) {\n        if (typeof group === 'string') {\n            this.group = group;\n        }\n    }\n    async get(options) {\n        const value = this.impl.getItem(this.applyPrefix(options.key));\n        return { value };\n    }\n    async set(options) {\n        this.impl.setItem(this.applyPrefix(options.key), options.value);\n    }\n    async remove(options) {\n        this.impl.removeItem(this.applyPrefix(options.key));\n    }\n    async keys() {\n        const keys = this.rawKeys().map(k => k.substring(this.prefix.length));\n        return { keys };\n    }\n    async clear() {\n        for (const key of this.rawKeys()) {\n            this.impl.removeItem(key);\n        }\n    }\n    async migrate() {\n        var _a;\n        const migrated = [];\n        const existing = [];\n        const oldprefix = '_cap_';\n        const keys = Object.keys(this.impl).filter(k => k.indexOf(oldprefix) === 0);\n        for (const oldkey of keys) {\n            const key = oldkey.substring(oldprefix.length);\n            const value = (_a = this.impl.getItem(oldkey)) !== null && _a !== void 0 ? _a : '';\n            const { value: currentValue } = await this.get({ key });\n            if (typeof currentValue === 'string') {\n                existing.push(key);\n            }\n            else {\n                await this.set({ key, value });\n                migrated.push(key);\n            }\n        }\n        return { migrated, existing };\n    }\n    async removeOld() {\n        const oldprefix = '_cap_';\n        const keys = Object.keys(this.impl).filter(k => k.indexOf(oldprefix) === 0);\n        for (const oldkey of keys) {\n            this.impl.removeItem(oldkey);\n        }\n    }\n    get impl() {\n        return window.localStorage;\n    }\n    get prefix() {\n        return this.group === 'NativeStorage' ? '' : `${this.group}.`;\n    }\n    rawKeys() {\n        return Object.keys(this.impl).filter(k => k.indexOf(this.prefix) === 0);\n    }\n    applyPrefix(key) {\n        return this.prefix + key;\n    }\n}\n//# sourceMappingURL=web.js.map"],"names":["PreferencesWeb","WebPlugin","constructor","super","arguments","this","group","configure","get","options","value","impl","getItem","applyPrefix","key","set","setItem","remove","removeItem","keys","rawKeys","map","k","substring","prefix","length","clear","migrate","_a","migrated","existing","Object","filter","indexOf","oldkey","oldprefix","currentValue","push","removeOld","window","localStorage"],"sourceRoot":""}