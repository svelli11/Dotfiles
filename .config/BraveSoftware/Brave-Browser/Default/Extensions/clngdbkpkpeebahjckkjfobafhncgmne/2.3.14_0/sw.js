"use strict";{const e=self;(()=>{var t={945:(e,exports)=>{function percentToByte(e){return String.fromCharCode(parseInt(e.slice(1),16))}function byteToPercent(e){return`%${`00${e.charCodeAt(0).toString(16)}`.slice(-2)}`}exports.encode=function(str){return btoa(encodeURIComponent(str).replace(/%[0-9A-F]{2}/g,percentToByte))}},499:()=>{e.API={}},458:()=>{e.browser=chrome}},n={};function s(e){var r=n[e];if(void 0!==r)return r.exports;var module=n[e]={exports:{}};return t[e](module,module.exports,s),module.exports}s.d=(exports,definition)=>{for(var key in definition)s.o(definition,key)&&!s.o(exports,key)&&Object.defineProperty(exports,key,{enumerable:!0,get:definition[key]})},s.o=(obj,prop)=>Object.prototype.hasOwnProperty.call(obj,prop),s.r=exports=>Object.defineProperties(exports,{[Symbol.toStringTag]:{value:"Module"},__esModule:{value:!0}}),(()=>{var usercss_manager_namespaceObject={};s.r(usercss_manager_namespaceObject),s.d(usercss_manager_namespaceObject,{build:()=>build,buildCode:()=>buildCode,buildMeta:()=>buildMeta,configVars:()=>configVars,editSave:()=>editSave,find:()=>find,getInstallCode:()=>getInstallCode,getVersion:()=>getVersion,install:()=>install,parse:()=>parse,toggleUrlInstaller:()=>toggleUrlInstaller});var sync_manager_namespaceObject={};s.r(sync_manager_namespaceObject),s.d(sync_manager_namespaceObject,{getDriveOptions:()=>getDriveOptions,getStatus:()=>getStatus,getToken:()=>getToken,login:()=>login,putDoc:()=>putDoc,remove:()=>sync_manager_remove,setDriveOptions:()=>setDriveOptions,start:()=>start,stop:()=>stop,syncNow:()=>syncNow});var usw_api_namespaceObject={};s.r(usw_api_namespaceObject),s.d(usw_api_namespaceObject,{publish:()=>publish,revoke:()=>revoke});var style_manager_namespaceObject={};s.r(style_manager_namespaceObject),s.d(style_manager_namespaceObject,{config:()=>config,editSave:()=>style_manager_editSave,find:()=>style_manager_find,get:()=>getById,getAll:()=>getAll,getAllOrdered:()=>getAllOrdered,getByUrl:()=>getByUrl,getCore:()=>getCore,getOrder:()=>getOrder,getRemoteInfo:()=>getRemoteInfo,getSectionsByUrl:()=>getSectionsByUrl,importMany:()=>importMany,install:()=>style_manager_install,preview:()=>preview,remove:()=>style_manager_remove,save:()=>save,searchDb:()=>searchDb,setOrder:()=>setOrder,toggle:()=>style_manager_toggle,toggleOverride:()=>toggleOverride});var uso_api_namespaceObject={};s.r(uso_api_namespaceObject),s.d(uso_api_namespaceObject,{deleteStyle:()=>deleteStyle,getEmbeddedMeta:()=>getEmbeddedMeta,getUpdatability:()=>getUpdatability,pingback:()=>pingback,toUsercss:()=>toUsercss});var update_manager_namespaceObject={};s.r(update_manager_namespaceObject),s.d(update_manager_namespaceObject,{checkAllStyles:()=>checkAllStyles,checkStyle:()=>checkStyle,getStates:()=>getStates});s(499);const rxIgnorableError=/(R)eceiving end does not exist|The message (port|channel) closed|moved into back\/forward cache/,API=e.API;const getHost=url=>url.split("/",3)[2],hasOwn=Object.call.bind({}.hasOwnProperty),sleep=e=>new Promise(e>0?t=>setTimeout(t,e):setTimeout),sleep0=()=>e.scheduler?.yield?.()||new Promise(setTimeout),stringAsRegExpStr=e=>e.replace(/[{}()[\]\\.+*?^$|]/g,"\\$&"),stringAsRegExp=(e,flags)=>new RegExp(stringAsRegExpStr(e),flags),RX_META=/\/\*!?\s*==userstyle==[\s\S]*?==\/userstyle==\s*\*\//i,tCache=new Map,util_t=(key,params,strict=!0)=>{const e=!params&&tCache.get(key)||chrome.i18n.getMessage(key,params);if(!e&&strict)throw`Missing string "${key}"`;return params||tCache.set(key,e),e},debounce=(()=>{const timers=new Map,clearTimer=data=>clearTimeout(data.timer),run=async(e,args)=>{timers.delete(e),e(...args)};return Object.assign((e,delay,...args)=>{let time;delay=+delay||0;let old=timers.get(e);if(old){if(delay&&old.time<(time=performance.now()+delay))clearTimer(old);else if(old.args.length===args.length&&old.args.every((e,t)=>e===args[t]))return}else timers.set(e,old={});old.args=args,old.time=delay&&(time??performance.now()+delay),old.timer=setTimeout(run,delay,e,args)},{timers,run,unregister:e=>{const data=timers.get(e);data&&(clearTimer(data),timers.delete(e))}})})();function calcObjSize(obj){if(!0===obj||null==obj)return 4;if(!1===obj)return 5;let e=typeof obj;if("string"===e)return obj.length+2;if("number"===e)return(e=obj)>=0&&e<10?1:Math.ceil(Math.log10(e<0?-e:e));if("object"!==e)return`${obj}`.length;let sum=1;if(Array.isArray(obj))for(e of obj)sum+=calcObjSize(e)+1;else for(const e in obj)sum+=e.length+3+calcObjSize(obj[e])+1;return sum}function isEmptyObj(obj){if(obj)for(const e in obj)if(hasOwn(obj,e))return!1;return!0}function mapObj(obj,e,keys){if(!obj)return obj;const res={};for(const t of keys||Object.keys(obj))keys&&!(t in obj)||(res[t]=e?e(obj[t],t,obj):obj[t]);return res}function tryRegExp(regexp,flags){try{return new RegExp(regexp,flags)}catch{}}function tryJSONparse(jsonString){try{if(jsonString)return JSON.parse(jsonString)}catch{}}function tryURL(url){try{if(url)return new URL(url)}catch{}return""}function deepMerge(src,dst,mergeArrays){if(!src||"object"!=typeof src)return src;if(Array.isArray(src))if(dst&&mergeArrays)for(const e of src)dst.push(deepMerge(e));else dst=Array.prototype.map.call(src,util_deepCopy);else{dst||(dst={});for(const[e,t]of Object.entries(src))dst[e]=deepMerge(t,dst[e])}return dst}function util_deepCopy(src){return deepMerge(src)}function deepEqual(e,t,ignoredKeys){if(!e||!t||e===t)return e===t;const type=typeof e;if(type!==typeof t)return!1;if("object"!==type)return e===t;if(Array.isArray(e))return Array.isArray(t)&&e.length===t.length&&e.every((e,n)=>deepEqual(e,t[n],ignoredKeys));for(const key in e)if(!(!hasOwn(e,key)||ignoredKeys&&ignoredKeys.includes(key))){if(!hasOwn(t,key))return!1;if(!deepEqual(e[key],t[key],ignoredKeys))return!1}for(const key in t)if(!(!hasOwn(t,key)||ignoredKeys&&ignoredKeys.includes(key)||hasOwn(e,key)))return!1;return!0}async function fetchText(url,opts){return(await fetch(url,opts)).text()}s(458);const uad=navigator.userAgentData,t=uad||navigator.userAgent,brands=uad?uad.brands.map(e=>`${e.brand}/${e.version}`).join(" "):t,platform=uad?uad.platform:t,chromeVer=+brands.match(/Chrom\w*\/(\d+)|$/)[1],CHROME=chromeVer,FIREFOX=chromeVer?NaN:+brands.match(/Firefox\w*\/(\d+)|$/)[1],MOBILE=(brands.match(/(Opera|OPR)\w*\/(\d+)|$/),uad?uad.mobile:/Android/.test(t)),WINDOWS=/Windows/.test(platform),ownRoot=(brands.match(/Vivaldi\w*\/(\d+)|$/),chrome.runtime.getURL("")),actionPopupUrl=ownRoot+"popup.html",installUsercss="install-usercss.html",workerPath="/js/worker.js",rxGF=/^((https:\/\/)(?:update\.)?((?:greasy|sleazy)fork\.org\/scripts\/)(\d+)\/.*?\.)(meta|user)(\.css)$|$/,uso="https://userstyles.org/",usoApi="https://gateway.userstyles.org/styles/getStyle",usoJson="https://userstyles.org/styles/chrome/",usoaRaw=["https://cdn.jsdelivr.net/gh/uso-archive/data@flomaster/data/","https://raw.githubusercontent.com/uso-archive/data/flomaster/data/","https://cdn.jsdelivr.net/gh/33kk/uso-archive@flomaster/data/","https://raw.githubusercontent.com/33kk/uso-archive/flomaster/data/"],usw="https://userstyles.world/",extractUsoaId=url=>url&&usoaRaw.some(e=>url.startsWith(e))&&+url.match(/\/(\d+)\.user\.css|$/)[1],extractUswId=url=>url&&url.startsWith(usw)&&+url.match(/\/(\d+)\.user\.css|$/)[1],makeInstallUrl=(url,e)=>"usoa"===url||!e&&(e=extractUsoaId(url))?`https://uso.kkx.one/style/${e}`:"usw"===url||!e&&(e=extractUswId(url))?`${usw}style/${e}`:"gf"===url||!e&&(e=rxGF.exec(url))?e[2]+e[3]+e[4]:"",makeUpdateUrl=(url,e)=>"usoa"===url||!e&&(e=extractUsoaId(url))?`${usoaRaw[0]}usercss/${e}.user.css`:"usw"===url||!e&&(e=extractUswId(url))?`${usw}api/style/${e}.user.css`:"",regExpTest=RegExp.prototype.test,supported=regExpTest.bind(new RegExp(`^(?:(?:ht|f)tps?:|file:|${ownRoot})`)),isLocalhost=regExpTest.bind(/^file:|^https?:\/\/([^/]+@)?(localhost|127\.0\.0\.1)(:\d+)?\//),isCdnUrl=regExpTest.bind(/^https:\/\/((\w+-)?cdn(js)?(-\w+)?\.[^/]+|[^/]+?\.github(usercontent)?\.(io|com))\//i),ownId=chrome.runtime.id,n=chrome.runtime.getManifest(),MF_ICON=n.icons[16].replace(ownRoot,""),MF_ICON_PATH=MF_ICON.slice(0,MF_ICON.lastIndexOf("/")+1),MF_ICON_EXT=MF_ICON.slice(MF_ICON.lastIndexOf(".")),browserWindows=browser.windows,onStorageChanged=chrome.storage.sync.onChanged||chrome.storage.onChanged,getActiveTab=async()=>(await browser.tabs.query({currentWindow:!0,active:!0}))[0]||browserWindows&&(await browser.tabs.query({windowId:(await browserWindows.getCurrent()).id,active:!0}))[0],ignoreChromeError=()=>chrome.runtime.lastError,toggleListener=(evt,add,...args)=>add?evt.addListener(...args):evt.removeListener(args[0]);e._deepCopy=util_deepCopy;const CLIENT=Symbol("client"),PATH=location.pathname,navLocks=navigator.locks,NOP=()=>{};let timer,lastBusy=0;function createPortProxy(getTarget,opts){let exec;return new Proxy({},{get:(e,cmd)=>cmd===CLIENT?exec?.[CLIENT]:function(...args){return exec??=createPortExec(getTarget,opts,e[CLIENT]),exec.call(this,cmd,...args)}})}function createPortExec(getTarget,{lock,once}={},target){let queue,port,initPending,tracking,lastId=0;return exec;async function exec(...args){const ctx={args,stack:(new Error).stack},promise=new Promise((resolve,reject)=>ctx.rr=[resolve,reject]);return port||initPending||(initPending=initPort()),initPending&&(initPending=!exec[CLIENT]&&await initPending),(once?target:port).postMessage({args,id:++lastId},once||(Array.isArray(this)?this:void 0)),queue.set(lastId,ctx),ctx.p=promise.catch(NOP),promise}async function initPort(){exec[CLIENT]=null,target||(target="function"==typeof getTarget?getTarget():getTarget).then&&(target=await target),port=target instanceof MessagePort?target:once?initChannelPort(target,null,once=[]):initChannelPort(target,{lock}),port.onmessage=onMessage,port.onmessageerror=onMessageError,queue=new Map,lastId=0,exec[CLIENT]=target,tracking||once||!navLocks||trackTarget(queue)}function onMessage({data}){const{id:e,res,err}=data.id?data:JSON.parse(data),{stack,rr:[resolve,reject]}=queue.get(e);queue.delete(e),lastId>1e9&&(lastId=0),err?reject(err[1]?Object.assign(...err,{stack:err[0].stack+"\n"+stack}):err[0]):resolve(res),once&&queue.size&&discard(queue,!0)}async function discard(myQ,wait){for(;wait&&myQ.size;)await Promise.all(Array.from(myQ.values(),ctx=>ctx.p));myQ===queue&&(wait&&port?.close(),exec[CLIENT]=queue=port=target=null)}async function trackTarget(myQ){for(tracking=!0;!(await navLocks.query()).held.some(e=>e.name===lock);)await sleep(10);await navLocks.request(lock,NOP),tracking=!1;for(const{stack,rr:[,reject]}of myQ.values()){const msg="Target disconnected",err=new Error(msg);err.stack=msg+"\n"+stack,reject(err)}myQ.clear(),queue===myQ&&discard(myQ)}}function initRemotePort(evt){const{id:once}=evt.data||{},exec=this,port=evt.ports[0];async function onMessage(portEvent){const data=portEvent.data,{args,id:e}=data.id?data:JSON.parse(data);let res,err;timer&&(timer=clearTimeout(timer));try{res=("function"==typeof exec?exec:exec[args.shift()]).apply(portEvent,args),res instanceof Promise&&(res=await res)}catch(e){res=void 0,e instanceof Error?(delete e.origin,err=[e,{...e}]):err=[e]}port.postMessage({id:e,res,err},portEvent._transfer),lastBusy=performance.now()}port.onerror=console.error,port.onmessage=onMessage,port.onmessageerror=onMessageError,once&&onMessage(evt)}function initChannelPort(target,msg,transfer){const e=new MessageChannel,port2=e.port2;return transfer?transfer[0]=port2:target.postMessage(msg,[port2]),e.port1}function onMessageError({data,source}){console.warn("Non-cloneable data",data),source.postMessage(JSON.stringify(data))}navLocks&&navLocks.request(PATH,()=>new Promise(NOP));createPortExec(()=>navigator.serviceWorker.controller,{lock:"/sw.js"});let busy,ready,setReady;self;const defaults={__proto__:null,disableAll:!1,exposeIframes:!1,exposeStyleName:!1,keepAlive:0,keepAliveIdle:!1,newStyleAsUsercss:!1,openEditInWindow:!1,"openEditInWindow.popup":!1,patchCsp:!1,"show-badge":!0,styleViaASS:!1,styleViaXhr:!1,urlInstaller:!0,windowPosition:{},compactWidth:850,"config.autosave":!0,"schemeSwitcher.enabled":"system","schemeSwitcher.nightStart":"18:00","schemeSwitcher.nightEnd":"06:00","popup.enabledFirst":!0,"popup.stylesFirst":!0,"popup.autoResort":!1,"popup.borders":!1,"popup.findSort":"w","manage.onlyEnabled":!1,"manage.onlyLocal":!1,"manage.onlyUsercss":!1,"manage.onlyEnabled.invert":!1,"manage.onlyLocal.invert":!1,"manage.onlyUsercss.invert":!1,"manage.actions.expanded":!1,"manage.backup.expanded":!0,"manage.filters.expanded":!0,"manage.links.expanded":!0,"manage.minColumnWidth":750,"manage.newUI":!0,"manage.newUI.favicons":!0,"manage.newUI.faviconsGray":!1,"manage.newUI.targets":3,"manage.newUI.sort":"title,asc","manage.searchMode":"meta","editor.options":{},"editor.toc.expanded":!0,"editor.options.expanded":!0,"editor.options.style.expanded":!0,"editor.lint.expanded":!0,"editor.publish.expanded":!0,"editor.lineWrapping":!0,"editor.smartIndent":!0,"editor.indentWithTabs":!1,"editor.tabSize":4,"editor.keyMap":"default","editor.theme":"default","editor.beautify":{selector_separator_newline:!0,newline_before_open_brace:!1,newline_after_open_brace:!0,newline_between_properties:!0,newline_before_close_brace:!0,newline_between_rules:!1,preserve_newlines:!0,end_with_newline:!1,indent_conditional:!0,indent_mozdoc:!0,space_around_combinator:!0,space_around_cmp:!1},"editor.beautify.hotkey":"","editor.lintDelay":300,"editor.linter":"csslint","editor.lintReportDelay":500,"editor.matchHighlight":"token","editor.autoCloseBrackets":!0,"editor.autocompleteOnTyping":!1,"editor.contextDelete":!1,"editor.selectByTokens":!0,"editor.arrowKeysTraverse":!0,"editor.appliesToLineWidget":!0,"editor.autosaveDraft":10,"editor.livePreview":!0,"editor.livePreview.delay":.2,"editor.targetsFirst":!0,"editor.colorpicker":!0,"editor.colorpicker.hexUppercase":!1,"editor.colorpicker.hotkey":"","editor.colorpicker.color":"","editor.colorpicker.maxHeight":300,"hotkey._execute_browser_action":"","hotkey.openManage":"","hotkey.styleDisableAll":"","sync.enabled":"none",iconset:-1,badgeDisabled:"#8B0000",badgeNormal:"#006666","headerWidth.edit":280,"headerWidth.install":280,"headerWidth.manage":280,"popup.search.globals":!1,popupWidth:246,popupWidthMax:280,updateInterval:24,updateOnlyEnabled:!1},warnUnknown=console.warn.bind(console,'Unknown preference "%s"'),values=util_deepCopy(defaults),onChange={},STORAGE_KEY="settings",set=(new Proxy({},{get:(e,key)=>util_deepCopy(defaults[key])}),Object.keys(defaults),(key,val,isSynced)=>{const old=values[key],type=typeof defaults[key];return type?(type!==typeof val&&(val="string"===type?`${val}`:"number"===type?+val||0:"boolean"===type?"true"===val||"false"!==val&&!!val:null),val===old||"object"===type&&deepEqual(val,old)?void 0:(values[key]=val,e._busy||onChange[key]?.forEach(e=>e(key,val)),set._bgSet(key,val))):warnUnknown(key)}),subscribe=(keys,e,runNow)=>{if(!e)return;let toRun;for(const key of Array.isArray(keys)?new Set(keys):[keys])key in defaults?((onChange[key]??=new Set).add(e),runNow&&(busy?(toRun??=[]).push(key):e(key,values[key],!0))):warnUnknown(key);return toRun?busy.then(()=>{for(const key of toRun)e(key,values[key],!0)}):void 0},unsubscribe=(keys,e)=>{for(const key of Array.isArray(keys)?keys:[keys]){const fns=onChange[key];fns&&(fns.delete(e),fns.size||delete onChange[key])}};function setAll(data,fromStorage){if(busy=!1,fromStorage){for(const key in fromStorage)!(key in data)&&key in defaults&&set(key,defaults[key],!0);for(const key in data||(data={}))set(key,data[key],!0)||delete data[key]}else Object.assign(values,data)}busy=ready=new Promise(e=>setReady=e),busy.set=(...args)=>setReady(setAll(...args)),onStorageChanged.addListener((changes,area)=>{if(busy)return;const data=(!area||"sync"===area)&&changes[STORAGE_KEY];data&&setAll(data.newValue,data.oldValue)});const bgPreInit=[],bgInit=[],clientDataJobs=new Map,dataHub={del:key=>delete data[key],get:key=>data[key],has:key=>key in data,pop:key=>{const val=data[key];return delete data[key],val},set:(key,val)=>{data[key]=val}},data={__proto__:null},onSchemeChange=new Set,onTabUrlChange=new Set,onUnload=new Set,onUrlChange=new Set,uuidIndex=Object.assign(new Map,{custom:{},addCustom(obj,{get=()=>obj,set}){Object.defineProperty(uuidIndex.custom,obj._id,{get,set})}});let isVivaldi=!(!browserWindows||!CHROME)&&(async()=>{const wnd=(await browserWindows.getAll())[0]||await new Promise(resolve=>browserWindows.onCreated.addListener(function onCreated(e){browserWindows.onCreated.removeListener(onCreated),resolve(e)}));return isVivaldi=!(!wnd||!wnd.vivExtData&&!wnd.extData),isVivaldi})(),bgBusy=e._busy=Object.assign(new Promise(e=>r=e),{resolve:r});var r;let keep_alive_busy;bgBusy.then(()=>{bgBusy=null,delete e._busy});let pulse,keep_alive_TTL,idleDuration,lastBusyTime=0;function keepAlive(job){return job instanceof Promise?keep_alive_busy?keep_alive_busy.push(job):keepAliveUntilSettled([job]):lastBusyTime=performance.now(),job}async function keepAliveUntilSettled(promises){keep_alive_busy=promises,null==keep_alive_TTL&&bgBusy&&await bgBusy,pulse||reschedule();do{await Promise.allSettled(keep_alive_busy)}while(keep_alive_busy?.splice(0,promises.length)&&keep_alive_busy.length);keep_alive_busy=null,lastBusyTime=performance.now()}async function reschedule(){(keep_alive_busy||keep_alive_TTL<0?isUserActiveInBrowser(!0):keep_alive_TTL&&performance.now()<lastBusyTime+keep_alive_TTL&&await isUserActiveInBrowser(values.keepAliveIdle))?pulse??=setInterval(reschedule,25e3):pulse&&(clearInterval(pulse),pulse=null)}async function isUserActiveInBrowser(yes){return("idle"!==await chrome.idle.queryState(idleDuration)||yes)&&(yes||(await chrome.windows.getAll({})).some(wnd=>wnd.focused))}keepAlive(bgBusy),e.keepAlive=keepAlive,subscribe("keepAlive",(e,val)=>{idleDuration=Math.max(30,60*val|0||0),keep_alive_TTL=6e4*val,pulse&&(keep_alive_TTL||keep_alive_busy)||reschedule()},!0);const onMessage=new Map,onConnect={},onDisconnect={},wrapData=data=>({data}),wrapError=error=>({error:Object.assign({message:error.message||`${error}`,stack:error.stack},error)});function o(data,sender,multi){let result,res;for(const[e,replyAllowed]of onMessage){try{res=e(data,sender,!!multi)}catch(e){res=Promise.reject(e)}replyAllowed&&res!==result&&void 0===result&&(result=res)}return result}function createLock({maxActiveReader=1/0}={}){let firstTask,lastTask,activeReader=0;const self={read:e=>que(e,!1),write:e=>que(e,!0),length:0};return self;function que(e,block){const task=createTask({fn:e,block});return lastTask?(lastTask.next=task,task.prev=lastTask,lastTask=task,firstTask||(firstTask=lastTask)):firstTask=lastTask=task,self.length++,deque(),task.q.promise}function defer(){const e={};return e.promise=new Promise((resolve,reject)=>{e.resolve=resolve,e.reject=reject}),e}function createTask({fn:e,block=!1,prev,next,q:t=defer(),q2:n=(e.length?defer():null)}){return{fn:e,block,prev,next,q:t,q2:n}}function deque(){const task=firstTask;if(!task||task.block&&task.prev||task.prev&&task.prev.block||activeReader>=maxActiveReader)return;let result;task.block||activeReader++,firstTask=task.next;try{result=task.fn(task.q2&&task.q2.resolve)}catch(e){return task.q.reject(e),void onDone()}if(task.q2&&task.q2.promise.then(e),result&&result.then){const pending=result.then(task.q.resolve,task.q.reject);task.q2||pending.then(onDone)}else if(task.q.resolve(result),!task.q2)return void onDone();function onDone(){e()}function e(afterDone){task.prev&&(task.prev.next=task.next),task.next&&(task.next.prev=task.prev),lastTask===task&&(lastTask=task.prev),task.block||activeReader--,self.length--,afterDone&&afterDone(),deque()}deque()}}chrome.runtime.onMessage.addListener(function({data,multi,TDM},sender,sendResponse){0;0;sender.TDM=TDM;let res=e._busy;if(res=res?res.then(o.bind(null,data,sender,multi)):o(data,sender,multi),res instanceof Promise)return res.then(wrapData,wrapError).then(sendResponse),!0;void 0!==res&&sendResponse(wrapData(res))}),chrome.runtime.onConnect.addListener(async port=>{e._busy&&await e._busy;const name=port.name.split(":",1)[0],fnOn=onConnect[name],fnOff=onDisconnect[name];fnOn&&fnOn(port),fnOff&&port.onDisconnect.addListener(fnOff)});var dist_browser=s(945);function debounced(e){let t,timer=0;return()=>(timer&&clearTimeout(timer),timer=setTimeout(run),t||(t=defer()),t.promise);function run(){Promise.resolve(e()).then(t.resolve,t.reject),timer=0,t=null}function defer(){const e={};return e.promise=new Promise((resolve,reject)=>{e.resolve=resolve,e.reject=reject}),e}}function delay(time){return new Promise(resolve=>setTimeout(resolve,time))}class RequestError extends Error{constructor(message,origin,code=origin&&origin.status){super(message),this.code=code,this.origin=origin,Error.captureStackTrace&&Error.captureStackTrace(this,RequestError)}}function createRequest({fetch,cooldown=0,getAccessToken,username,password}){const lock=createLock(),basicAuth=username||password?`Basic ${dist_browser.encode(`${username}:${password}`)}`:null;return args=>lock.write(async done=>{try{return await doRequest(args)}finally{cooldown&&args.method&&"GET"!==args.method?setTimeout(done,cooldown):done()}});async function doRequest({path,contentType,headers:e,format,raw=!1,...args}){const headers={};for(getAccessToken&&(headers.Authorization=`Bearer ${await getAccessToken()}`),basicAuth&&(headers.Authorization=basicAuth),contentType&&(headers["Content-Type"]=contentType),Object.assign(headers,e);;){const res=await fetch(path,{headers,...args});if(!res.ok){const retry=res.headers.get("Retry-After");if(retry){const time=Number(retry);if(time){await delay(1e3*time);continue}}const text=await res.text();throw new RequestError(`failed to fetch [${res.status}]: ${text}`,res)}if(raw)return res;if(format)return await res[format]();const resContentType=res.headers.get("Content-Type");return/application\/json/.test(resContentType)?await res.json():await res.text()}}}const dropbox=function({getAccessToken,fetch=("undefined"!=typeof self?self:e).fetch}){const request=createRequest({fetch,getAccessToken});return{name:"dropbox",get:async function(file){const params={path:`/${file}`};try{return await request({path:`https://content.dropboxapi.com/2/files/download?${stringifyParams(params)}`,format:"text"})}catch(e){throw 409===e.code&&e.message.includes("not_found")&&(e.code="ENOENT"),e}},put,post:async function(file,data){try{return await put(file,data,"add")}catch(e){throw 409===e.code&&e.message.includes("conflict")&&(e.code="EEXIST"),e}},delete:async function(file){try{await requestRPC({path:"files/delete_v2",body:{path:`/${file}`}})}catch(e){if(409===e.code&&e.message.includes("not_found"))return;throw e}},list:async function(file){const names=[];let result=await requestRPC({path:"files/list_folder",body:{path:`/${file}`}});for(const entry of result.entries)names.push(entry.name);if(!result.has_more)return names;for(;result.has_more;){result=await requestRPC({path:"files/list_folder/continue",body:{cursor:result.cursor}});for(const entry of result.entries)names.push(entry.name)}return names}};function requestRPC({path,body,...args}){return request({method:"POST",path:`https://api.dropboxapi.com/2/${path}`,contentType:"application/json",body:JSON.stringify(body),...args})}function stringifyParams(obj){const params=new URLSearchParams;return params.set("arg",JSON.stringify(obj)),params.toString()}async function put(file,data,mode="overwrite"){const params={path:`/${file}`,mode,autorename:!1,mute:!0};await request({path:`https://content.dropboxapi.com/2/files/upload?${stringifyParams(params)}`,method:"POST",contentType:"application/octet-stream",body:data})}};const onedrive=function({getAccessToken,fetch=("undefined"!=typeof self?self:e).fetch}){const request=createRequest({fetch,getAccessToken});return{name:"onedrive",get:async function(file){return await query({path:`:/${file}:/content`,format:"text"})},put:async function(file,data){await query({method:"PUT",path:`:/${file}:/content`,headers:{"Content-Type":"text/plain"},body:data})},post:async function(file,data){try{await query({method:"PUT",path:`:/${file}:/content?@microsoft.graph.conflictBehavior=fail`,headers:{"Content-Type":"text/plain"},body:data})}catch(e){throw 409===e.code&&e.message.includes("nameAlreadyExists")&&(e.code="EEXIST"),e}},delete:async function(file){try{await query({method:"DELETE",path:`:/${file}:`})}catch(e){if(404===e.code)return;throw e}},list:async function(file){file&&(file=`:/${file}:`);let result=await query({path:`${file}/children?select=name`}),files=result.value.map(e=>e.name);for(;result["@odata.nextLink"];)result=await request({path:result["@odata.nextLink"]}),files=files.concat(result.value.map(e=>e.name));return files}};async function query(args){return args.path=`https://graph.microsoft.com/v1.0/me/drive/special/approot${args.path}`,await request(args)}};class LockError extends Error{constructor(expire){super(`The database is locked. Will expire at ${new Date(expire).toLocaleString()}`),this.expire=expire,this.name="LockError",Error.captureStackTrace&&Error.captureStackTrace(this,LockError)}}const google=function({getAccessToken,fetch=("undefined"!=typeof self?self:e).fetch,FormData=("undefined"!=typeof self?self:e).FormData,Blob=("undefined"!=typeof self?self:e).Blob}){const request=createRequest({fetch,getAccessToken}),fileMetaCache=new Map;let lockRev;return{name:"google",get:async function(file){let meta=fileMetaCache.get(file);if(!meta&&(await updateMeta(`name = '${file}'`),meta=fileMetaCache.get(file),!meta))throw new RequestError(`metaCache doesn't contain ${file}`,null,"ENOENT");try{return await request({path:`https://www.googleapis.com/drive/v3/files/${meta.id}?alt=media`})}catch(e){throw 404===e.code&&(e.code="ENOENT"),e}},put:async function(file,data){if(!fileMetaCache.has(file))return await post(file,data);const meta=fileMetaCache.get(file),result=await queryPatch(meta.id,data);meta.headRevisionId=result.headRevisionId},post,delete:async function(file){const meta=fileMetaCache.get(file);if(!meta)return;try{await request({method:"DELETE",path:`https://www.googleapis.com/drive/v3/files/${meta.id}`})}catch(e){if(404===e.code)return;throw e}},list:async function(file){return[...fileMetaCache.values()].filter(e=>e.name.startsWith(file+"/")).map(e=>e.name.split("/")[1])},init:async function(){await updateMeta(),fileMetaCache.has("lock.json")||await post("lock.json","{}");fileMetaCache.has("meta.json")||await post("meta.json","{}")},acquireLock:async function(expire){const lock=fileMetaCache.get("lock.json"),{headRevisionId}=await queryPatch(lock.id,JSON.stringify({expire:Date.now()+60*expire*1e3})),result=await request({path:`https://www.googleapis.com/drive/v3/files/${lock.id}/revisions?fields=revisions(id)`});for(let e=1;e<result.revisions.length;e++){const revId=result.revisions[e].id;if(revId===headRevisionId)return void(lockRev=headRevisionId);const rev=JSON.parse(await request({path:`https://www.googleapis.com/drive/v3/files/${lock.id}/revisions/${revId}?alt=media`}));if(rev.expire>Date.now())throw await revDelete(lock.id,headRevisionId),new LockError(rev.expire);await revDelete(lock.id,revId)}throw new Error("cannot find lock revision")},releaseLock:async function(){const lock=fileMetaCache.get("lock.json");await revDelete(lock.id,lockRev),lockRev=null},fileMetaCache};async function revDelete(fileId,revId){await request({method:"DELETE",path:`https://www.googleapis.com/drive/v3/files/${fileId}/revisions/${revId}`})}async function queryList(path,onPage){path="https://www.googleapis.com/drive/v3/files?spaces=appDataFolder&fields=nextPageToken,files(id,name,headRevisionId)"+(path?"&"+path:"");let result=await request({path});for(onPage(result);result.nextPageToken;)result=await request({path:`${path}&pageToken=${result.nextPageToken}`}),onPage(result)}async function queryPatch(e,text){return await request({method:"PATCH",path:`https://www.googleapis.com/upload/drive/v3/files/${e}?uploadType=media&fields=headRevisionId`,headers:{"Content-Type":"text/plain"},body:text})}async function updateMeta(query){query&&(query=`q=${encodeURIComponent(query)}`),await queryList(query,result=>{for(const file of result.files)fileMetaCache.set(file.name,file)})}async function post(file,data){const body=new FormData;body.append("metadata",new Blob([JSON.stringify({name:file,parents:["appDataFolder"]})],{type:"application/json; charset=UTF-8"})),body.append("media",new Blob([data],{type:"text/plain"}));const result=await request({method:"POST",path:"https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart&fields=id,name,headRevisionId",body});fileMetaCache.set(result.name,result)}};function buildDrive(e){const drive=Object.create(e);return drive.get=async path=>JSON.parse(await e.get(path)),drive.put=async(path,data)=>await e.put(path,JSON.stringify(data)),drive.post=async(path,data)=>await e.post(path,JSON.stringify(data)),drive.isInit=!1,drive.acquireLock||(drive.acquireLock=async function(expire){try{await this.post("lock.json",{expire:Date.now()+60*expire*1e3})}catch(e){if("EEXIST"!==e.code)throw e;const data=await this.get("lock.json");if(Date.now()>data.expire)throw await this.delete("lock.json"),new Error("Found expired lock, please try again");throw new LockError(data.expire)}},drive.releaseLock=async function(){await this.delete("lock.json")}),drive.getMeta||(drive.getMeta=async function(){try{return await this.get("meta.json")}catch(e){if("ENOENT"===e.code||404===e.code)return{};throw e}},drive.putMeta=async function(data){await this.put("meta.json",data)}),drive.peekChanges||(drive.peekChanges=async function(oldMeta){return(await this.getMeta()).lastChange!==oldMeta.lastChange}),drive}function dbToCloud({onGet,onPut,onDelete,onFirstSync,onWarn=console.error,onProgress,compareRevision,getState,setState,lockExpire=60,retryMaxAttempts=5,retryExp=1.5,retryDelay=10}){let drive,state,meta;const changeCache=new Map,saveState=debounced(()=>setState(drive,state)),revisionCache=new Map,lock=createLock();return{use:function(newDrive){drive=buildDrive(newDrive)},init:function(){return lock.write(async()=>{if(!state||!state.enabled){if(!drive)throw new Error("cloud drive is undefined");state=await getState(drive)||{},state.enabled=!0,state.queue||(state.queue=[])}})},uninit:function(){return lock.write(async()=>{state&&state.enabled&&(state=meta=null,changeCache.clear(),revisionCache.clear(),drive.uninit&&drive.isInit&&(await drive.uninit(),drive.isInit=!1),await saveState())})},put:function(e,t){if(!state||!state.enabled)return;state.queue.push({_id:e,_rev:t,action:"put"}),saveState()},delete:function(e,t){if(!state||!state.enabled)return;state.queue.push({_id:e,_rev:t,action:"delete"}),saveState()},syncNow:function(peek){return lock.write(async()=>{if(!state||!state.enabled)throw new Error("Cannot sync now, the sync is not enabled");drive.init&&!drive.isInit&&(await drive.init(),drive.isInit=!0),null==state.lastChange&&await onFirstSync(),await e(peek)})},drive:()=>drive,isInit:()=>Boolean(state&&state.enabled)};async function syncPull(){if(meta=await drive.getMeta(),!meta.lastChange||meta.lastChange===state.lastChange)return;let changes=[];if(state.lastChange){const end=Math.floor((meta.lastChange-1)/100);let e=Math.floor(state.lastChange/100);for(;e<=end;){const newChanges=await drive.get(`changes/${e}.json`);changeCache.set(e,newChanges),changes=changes.concat(newChanges),e++}changes=changes.slice(state.lastChange%100)}else changes=(await drive.list("docs")).map(name=>({action:"put",_id:name.slice(0,-5)}));const idx=new Map;for(const change of changes)idx.set(change._id,change);let loaded=0;for(const[e,change]of idx){let doc,t;if(onProgress&&onProgress({phase:"pull",total:idx.size,loaded,change}),"delete"===change.action)await onDelete(e,change._rev);else if("put"===change.action){try{({doc,_rev:t}=await drive.get(`docs/${e}.json`))}catch(t){if("ENOENT"===t.code||404===t.code){onWarn(`Cannot find ${e}. Is it deleted without updating the history?`),loaded++;continue}throw t}await onPut(doc)}const rev=change._rev||t;rev&&revisionCache.set(e,rev),loaded++}state.lastChange=meta.lastChange,await saveState()}async function syncPush(){if(!state.queue.length)return;const changes=state.queue.slice(),idx=new Map;for(const change of changes)idx.set(change._id,change);const newChanges=[];for(const change of idx.values()){const remoteRev=revisionCache.get(change._id);void 0!==remoteRev&&compareRevision(change._rev,remoteRev)<=0||newChanges.push(change)}let lastChanges,index,loaded=0;for(const change of newChanges){if(onProgress&&onProgress({phase:"push",loaded,total:newChanges.length,change}),"delete"===change.action)await drive.delete(`docs/${change._id}.json`);else if("put"===change.action){const doc=await onGet(change._id,change._rev);await drive.put(`docs/${change._id}.json`,{doc,_rev:change._rev})}revisionCache.set(change._id,change._rev),loaded++}if(meta.lastChange){index=Math.floor(meta.lastChange/100);const len=meta.lastChange%100;lastChanges=len?changeCache.get(index)||await drive.get(`changes/${index}.json`):[],lastChanges=lastChanges.slice(0,len).concat(newChanges)}else index=0,lastChanges=newChanges;for(let e=0;100*e<lastChanges.length;e++){const t=lastChanges.slice(100*e,100*(e+1));await drive.put(`changes/${index+e}.json`,t),changeCache.set(index+e,t)}meta.lastChange=(meta.lastChange||0)+newChanges.length,await drive.putMeta(meta),state.queue=state.queue.slice(changes.length),state.lastChange=meta.lastChange,await saveState()}async function sync(){let lastErr,tried=0,wait=retryDelay;for(;;){try{await drive.acquireLock(lockExpire);break}catch(e){if("LockError"!==e.name)throw e;lastErr=e}if(tried++,tried>=retryMaxAttempts)throw lastErr;await delay(1e3*wait),wait*=retryExp}try{await syncPull(),await syncPush()}finally{await drive.releaseLock()}}async function e(peek=!0){onProgress&&onProgress({phase:"start"});try{if(!state.queue.length&&peek&&meta){if(!await drive.peekChanges(meta))return}await sync()}finally{onProgress&&onProgress({phase:"end"})}}}const cloudDrive={dropbox,onedrive,google,webdav:!1},FILENAME="offscreen.html",DOC_URL=ownRoot+FILENAME,background_offscreen=createPortProxy(()=>creating??=create().finally(done),{lock:"/"+FILENAME});let creating;async function findOffscreenClient(){for(const e of await getWindowClients())if(e.url===DOC_URL)return e}async function create(){try{await chrome.offscreen.createDocument({url:DOC_URL,reasons:["BLOBS","DOM_PARSER","MATCH_MEDIA","WORKERS"],justification:"ManifestV3 requirement"})}catch(e){if(!e.message.startsWith("Only a single offscreen"))throw e}return findOffscreenClient()}function done(){creating=null}const getWindowClients=()=>self.clients.matchAll({includeUncontrolled:!0,type:"window"}),worker=createPortProxy(async()=>{let proxy;if(!background_offscreen[CLIENT])for(const client of await getWindowClients())if(!clientDataJobs.has(client.url)){proxy=createPortProxy(client,{once:!0});break}return(proxy||background_offscreen).getWorkerPort(workerPath)},{lock:workerPath});let toBroadcast;function broadcast(data){toBroadcast??=(setTimeout(doBroadcast),[]),toBroadcast.push(data)}async function doBroadcast(){const[clients,tabs]=await Promise.all([getWindowClients(),browser.tabs.query({})]),data=toBroadcast;toBroadcast=null,clients[0]&&broadcastExtension(data,!0);let url,cnt=0;tabs.sort((e,t)=>t.active-e.active);for(const e of tabs)e.discarded||!(url=e.url)||url.startsWith(ownRoot)||(sendTab(e.id,data,null,!0),++cnt>50&&(cnt=0,await sleep0()))}function broadcastExtension(data,multi){return unwrap(browser.runtime.sendMessage({data,multi}))}function pingTab(tabId,frameId=0){return sendTab(tabId,{method:"ping"},{frameId})}function sendTab(tabId,data,options,multi){return unwrap(browser.tabs.sendMessage(tabId,{data,multi},options),multi)}async function unwrap(promise,multi){const err=new Error;let data,error;try{if(({data,error}=await promise||{}),!error)return data}catch(e){if(error=e,rxIgnorableError.test(err.message=e.message))return}return error.stack&&(err.stack=error.stack+"\n"+err.stack),multi?(console.error(err),data):Promise.reject(err)}const StorageExtras={async getValue(key){return(await this.get(key))[key]}},chromeLocal=Object.assign(browser.storage.local,StorageExtras),chromeSession=browser.storage.session;let exec=dbExecIndexedDB;const DRAFTS_DB="drafts",CACHING={[DRAFTS_DB]:cachedExec,[STORAGE_KEY]:cachedExec},{CompressionStream}=e,kApplicationGzip="application/gzip",MIRROR_INIT=CompressionStream&&{headers:{"content-type":kApplicationGzip}},MIRROR_PREFIX="http://_/",MIRROR={stylish:null,[STORAGE_KEY]:null},DATA_KEY={},STORES={},VERSIONS={},dataCache={},proxies={},databases={},proxyHandler={get:({dbName},cmd)=>(CACHING[dbName]||exec).bind(null,dbName,cmd)},getDbProxy=(dbName,{id:e,store="data",ver=2}={})=>proxies[dbName]??=(DATA_KEY[dbName]=e&&"string"!=typeof e?"id":e,STORES[dbName]=store,VERSIONS[dbName]=ver,new Proxy({dbName},proxyHandler)),a=(getDbProxy("cache",{id:"url"}),getDbProxy("stylish",{id:!0,store:"styles"})),draftsDB=getDbProxy(DRAFTS_DB),prefsDB=getDbProxy(STORAGE_KEY),stateDB=getDbProxy("state",{store:"kv"});async function cachedExec(dbName,cmd,e,t){const hub=dataCache[dbName]??={},res="get"===cmd&&e in hub?hub[e]:await exec(...arguments);if("get"===cmd)hub[e]=deepMerge(res);else if("put"===cmd){const key=DATA_KEY[dbName];hub[key?e[key]:t]=deepMerge(e)}else"delete"===cmd&&delete hub[e];return res}async function dbExecIndexedDB(dbName,method,...args){const mode=method.startsWith("get")?void 0:"readwrite",storeName=STORES[dbName],store=(databases[dbName]??=await db_open(dbName)).transaction([storeName],mode).objectStore(storeName);return mode&&dbName in MIRROR&&execMirror(...arguments),method.endsWith("Many")?storeMany(store,method.slice(0,-4),...args):new Promise((resolve,reject)=>{const request=store[method](...args);request.onsuccess=()=>resolve(request.result),request.onerror=reject})}function storeMany(store,method,items,keys){let resolve,reject,num=0;const e=new Promise((e,t)=>{resolve=e,reject=t}),results=[],onsuccess=({target:req})=>{results[req.i]=req.result,--num||resolve(results)};for(;num<items.length;){const req=store[method](items[num],keys?.[num]);req.onerror=reject,req.onsuccess=onsuccess,req.i=num,results[num]=null,num++}return e}function db_open(name){return new Promise((resolve,reject)=>{const request=indexedDB.open(name,VERSIONS[name]);request.onsuccess=e=>resolve(db_create(e)),request.onerror=reject,request.onupgradeneeded=db_create})}function db_create(event){const idb=event.target.result,dbName=idb.name,e=STORES[dbName];if(!idb.objectStoreNames.contains(e)){if("success"===event.type)return idb.close(),new Promise(resolve=>{indexedDB.deleteDatabase(dbName).onsuccess=()=>{resolve(db_open(dbName))}});idb.createObjectStore(e,DATA_KEY[dbName]?{keyPath:DATA_KEY[dbName],autoIncrement:!0}:void 0)}return idb}async function execMirror(dbName,method,e,t){const mirror=MIRROR[dbName]??=await caches.open(dbName);switch(method){case"delete":return mirror.delete(MIRROR_PREFIX+e);case"get":return(t=await execMirror(dbName,"getAll",e))[0];case"getAll":e=await mirror.matchAll(e);for(let n=0;n<e.length;n++)t=e[n],MIRROR_INIT&&t.headers.get("content-type")===kApplicationGzip&&(t=new Response(t.body.pipeThrough(new DecompressionStream("gzip")))),e[n]=t.text();e=await Promise.all(e);for(let t=0;t<e.length;t++)e[t]=JSON.parse(e[t]);return e;case"put":return await sleep(10),"stylish"===dbName&&e.usercssData&&delete(e={...e}).sections,t=MIRROR_PREFIX+(t??e.id),e=JSON.stringify(e),MIRROR_INIT&&(MIRROR_INIT.headers["Content-Length"]=e.length),CompressionStream&&(e=new Response(e).body.pipeThrough(new CompressionStream("gzip"))),mirror.put(t,new Response(e,MIRROR_INIT));case"putMany":for(let n=0;n<e.length;n++)await execMirror(dbName,"put",e[n],t?.[n])}}async function mirrorStorage(dataMap){if(!await caches.has("stylish"))for(const{style}of dataMap.values())await execMirror("stylish","put",style);if(!await caches.has(STORAGE_KEY))for(const key of["injectionOrder"]){const val=await prefsDB.get(key);val&&await execMirror(STORAGE_KEY,"put",val,key)}}Object.assign(API,{draftsDB,prefsDB});const kSTART="schemeSwitcher.nightStart",kEND="schemeSwitcher.nightEnd",kLight="light",kNever="never",kSystem="system",kTime="time",map={[kNever]:!1,dark:!0,[kLight]:!1,[kSystem]:null,[kTime]:!1},SCHEMES=["dark",kLight],refreshSystemDark=()=>prefState===kSystem&&background_offscreen.isDark().then(setSystemDark),setSystemDark=update.bind(null,kSystem);let prefState,saved,notified,color_scheme_timer,isDark=null;function shouldIncludeStyle({preferScheme:e}){return prefState===kNever||"dark"!==e&&e!==kLight||isDark===("dark"===e)}function calcTime(key){const[e,t]=values[key].split(":");return 1e3*(3600*e+60*t)}function createAlarm(key,value){const date=new Date,[e,t]=value.split(":");date.setHours(e,t,0,0),date.getTime()<Date.now()&&date.setDate(date.getDate()+1),chrome.alarms.create(key,{when:date.getTime(),periodInMinutes:1440})}function onNightChanged(force){if(!0!==force)return debounce(onNightChanged,0,!0);updateTimePreferDark(),createAlarm(kSTART,values[kSTART]),createAlarm(kEND,values[kEND])}function updateTimePreferDark(){const now=Date.now()-(new Date).setHours(0,0,0,0),start=calcTime(kSTART),end=calcTime(kEND);update(kTime,start>end?now>=start||now<end:now>=start&&now<end)}function update(type,val){if(type){if(map[type]===val)return;if(type===kSystem&&(color_scheme_timer??=setTimeout(writeState)),map[type]=val,!prefState)return}isDark!==(val=map[prefState])&&(isDark=val,isDark!==notified&&null!=saved&&debounce(notify))}function notify(){notified=isDark,broadcastExtension({method:"colorScheme",value:isDark});for(const e of onSchemeChange)e(isDark)}async function writeState(){bgBusy&&await bgBusy;const val=(isDark?1:0)+(map[kSystem]?2:0);saved!==val&&stateDB.put(saved=val,"dark"),color_scheme_timer=null}chrome.alarms.onAlarm.addListener(async function({name}){name!==kSTART&&name!==kEND||(prefState||await ready,updateTimePreferDark())}),bgPreInit.push(stateDB.get("dark").then(val=>{saved=+val,"number"==typeof val&&(notified=isDark=!!(1&val),map[kSystem]??=!!(2&val),update())})),subscribe("schemeSwitcher.enabled",(e,val)=>{prefState=val,val===kTime?subscribe([kSTART,kEND],onNightChanged,!0):(unsubscribe([kSTART,kEND],onNightChanged),chrome.alarms.clear(kSTART),chrome.alarms.clear(kEND)),update()},!0);const cache={__proto__:null},tab_manager=cache,tab_manager_set=(tabId,...args)=>{const value=args.pop(),lastKey=args.pop(),del=void 0===value;let obj=cache[tabId],obj0=obj;if(!obj){if(del)return;cache[tabId]=obj=obj0={}}for(let key,e=0;obj&&e<args.length;e++)obj=obj[key=args[e]]||!del&&(obj[key]={});return del?obj&&delete obj[lastKey]:obj[lastKey]=value,bgMortal&&stateDB.put(obj0,tabId),value},someInjectable=()=>{for(let e in cache)if(e=cache[e],e.styleIds||(e=e.url)&&supported(e[0]))return!0},remove=tabId=>{delete cache[tabId],bgMortal&&stateDB.delete(tabId)},putObject=obj=>stateDB.putMany(Object.values(obj),Object.keys(obj).map(Number)),bgMortalChanged=new Set;let bgMortal;bgInit.push(async()=>{const[saved,tabs]=await Promise.all([(bgMortal=values.keepAlive>=0)&&stateDB.getAll(IDBKeyRange.bound(0,1e99)),browser.tabs.query({})]);let toPut;for(const{id:e,url}of tabs){let data;saved&&(data=saved[e])&&data.url?.[0]===url||(data={url:{0:url}},saved&&((toPut??={})[e]=data)),cache[e]=data}if(saved){let toDel;for(const e in saved)cache[e]||(toDel??=[]).push(e);toDel&&stateDB.deleteMany(toDel),toPut&&putObject(toPut)}subscribe("keepAlive",(key,val)=>{if(bgMortal!==(val=val>=0)){bgMortal=val,val?putObject(cache):stateDB.delete(IDBKeyRange.bound(0,1e99));for(const e of bgMortalChanged)e(val)}})}),bgBusy.then(()=>{onUrlChange.add(({tabId,frameId,url},navType)=>{let obj,oldUrl;if((obj=cache[tabId])?(oldUrl=obj.url?.[0],navType===kCommitted&&obj.styleIds&&(frameId?delete obj.styleIds[frameId]:delete obj.styleIds)):cache[tabId]=obj={},navType!==kCommitted||frameId?(obj.url??={})[frameId]=url:obj.url={0:url},bgMortal&&stateDB.put(obj,tabId),!frameId)for(const e of onTabUrlChange)e(tabId,url,oldUrl)})}),onDisconnect.apply=function(port){ignoreChromeError();const{sender}=port,tabId=sender.tab?.id,frameId=sender.frameId;if(!frameId)return;for(const e of onUnload)e(tabId,frameId,port)},chrome.tabs.onCreated.addListener(()=>{}),chrome.tabs.onRemoved.addListener(async tabId=>{bgBusy&&await bgBusy,remove(tabId);for(const e of onUnload)e(tabId,0)});const webNavigation=chrome.webNavigation,WEBNAV_FILTER_STYLABLE={url:[{schemes:["http","https","file","ftp","ftps"]},{urlPrefix:ownRoot}]},kCommitted="committed";let initialized,prevData={};async function onNavigation(navType,data){if(CHROME&&data.timeStamp===prevData.timeStamp&&deepEqual(data,prevData))return;prevData=data,bgBusy&&await bgBusy;const{tabId}=data,e=tab_manager[tabId];if(e&&navType!==kCommitted){const{frameId:e,url}=data,{documentId:t,frameType}=data;sendTab(tabId,{method:"urlChanged",top:!frameType&&!e||"outer_frame"===frameType,iid:0,url},{documentId:t})}for(const e of onUrlChange)e(data,navType)}async function reinjectContentScripts(targetTab){const ALL_URLS="<all_urls>",SCRIPTS=n.content_scripts,globToRe=(e,t=".")=>stringAsRegExpStr(e.replace(/\*/g,"\n")).replace(/\n/g,t+"*?");if(!initialized){initialized=!0;for(const e of SCRIPTS)(e[ALL_URLS]=e.matches.includes(ALL_URLS))||e.matches.forEach((t,n)=>{const[,scheme,host,path]=t.match(/^([^:]+):\/\/([^/]+)\/(.*)/);e.matches[n]=new RegExp(`^${"*"===scheme?"https?":scheme}://${globToRe(host,"[^/]")}/${globToRe(path)}$`)})}targetTab||await sleep0();for(const tab of targetTab?[targetTab]:await browser.tabs.query({})){const url=tab.pendingUrl||tab.url,res=tab.width&&!tab.discarded&&supported(url)&&await injectToTab(tab.id,url,targetTab);if(targetTab)return res&&res[0]&&!res[0].message&&0===res[0].frameId}async function injectToTab(tabId,url,targeted){const jobs=[];if(tab_manager_set(tabId,"url",0,url),targeted||!await sendTab(tabId,{method:"backgroundReady"})){for(const e of SCRIPTS)(e[ALL_URLS]||e.matches.some(url.match,url))&&jobs.push(chrome.scripting.executeScript({injectImmediately:"document_start"===e.run_at,target:{allFrames:e.all_frames,tabId},files:e.js}).catch(ignoreChromeError));return Promise.all(jobs)}}}webNavigation.onCommitted.addListener(onNavigation.bind(null,kCommitted),WEBNAV_FILTER_STYLABLE),webNavigation.onHistoryStateUpdated.addListener(onNavigation.bind(null,"history"),WEBNAV_FILTER_STYLABLE),webNavigation.onReferenceFragmentUpdated.addListener(onNavigation.bind(null,"hash"),WEBNAV_FILTER_STYLABLE);const TO_CSS={domains:"domain",urlPrefixes:"url-prefix",urls:"url",regexps:"regexp"},STYLE_CODE_EMPTY_RE=/\s+|\/\*([^*]+|\*(?!\/))*(\*\/|$)|@namespace[^;]+;|@charset[^;]+;/iuy;function styleCodeEmpty(sec){const{code}=sec;let res=!code;if(res||null!=(res=sec._empty))return res;const len=code.length,e=STYLE_CODE_EMPTY_RE;e.lastIndex=0;let t=0;for(;e.exec(code)&&(t=e.lastIndex)!==len;);return Object.defineProperty(sec,"_empty",{value:res=t===len,configurable:!0}),styleCodeEmpty.lastIndex=t,res}function styleSectionsEqual({sections:e},{sections:t}){return e&&t&&e.length===t.length&&e.every(sameSection,t)}function sameSection(secA,e){const secB=this[e];if(equalOrEmpty(secA.code,secB.code,!0)){for(const target in TO_CSS)if(!equalOrEmpty(secA[target],secB[target],!1))return;return!0}}function equalOrEmpty(e,t,isStr){const typeA=isStr?"string"==typeof e:Array.isArray(e),typeB=isStr?"string"==typeof t:Array.isArray(t);return typeA&&typeB&&(isStr?e===t:e.length===t.length&&arrayEquals(e,t))||(null==e||typeA&&!e.length)&&(null==t||typeB&&!t.length)}function arrayEquals(e,t){return e.every(thisIncludes,t)&&t.every(thisIncludes,e)}function thisIncludes(e){return this.includes(e)}async function calcStyleDigest(style){const src=style.usercssData?style.sourceCode:JSON.stringify((style.sections||[]).map(section=>({code:section.code||"",urls:section.urls||[],urlPrefixes:section.urlPrefixes||[],domains:section.domains||[],regexps:section.regexps||[]}))),srcBytes=(new TextEncoder).encode(src),res=await crypto.subtle.digest("SHA-1",srcBytes);return Array.from(new Uint8Array(res),e=>(256+e).toString(16).slice(1)).join("")}for(var i=0,reverseDict={},fromCharCode=String.fromCharCode,base="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+",Base64CharArray=(base+"/=").split(""),UriSafeCharArray=(base+"-$").split("");i<65;)i>62&&(reverseDict[UriSafeCharArray[i].charCodeAt(0)]=i),reverseDict[Base64CharArray[i].charCodeAt(0)]=i++;function c(length,resetBits,getNextValue){for(var e,dictionary=[0,1,2],enlargeIn=4,dictSize=4,numBits=3,entry="",result=[],t="",bits=0,maxpower=2,power=0,data_val=getNextValue(0),data_position=resetBits,data_index=1;power!=maxpower;)bits+=(data_val>>--data_position&1)<<power++,0==data_position&&(data_position=resetBits,data_val=getNextValue(data_index++));if(2==bits)return"";for(maxpower=8*bits+8,bits=power=0;power!=maxpower;)bits+=(data_val>>--data_position&1)<<power++,0==data_position&&(data_position=resetBits,data_val=getNextValue(data_index++));for(e=fromCharCode(bits),dictionary[3]=e,t=e,result.push(e);data_index<=length;){for(maxpower=numBits,bits=power=0;power!=maxpower;)bits+=(data_val>>--data_position&1)<<power++,0==data_position&&(data_position=resetBits,data_val=getNextValue(data_index++));if(bits<2){for(maxpower=8+8*bits,bits=power=0;power!=maxpower;)bits+=(data_val>>--data_position&1)<<power++,0==data_position&&(data_position=resetBits,data_val=getNextValue(data_index++));dictionary[dictSize]=fromCharCode(bits),bits=dictSize++,0==--enlargeIn&&(enlargeIn=1<<numBits++)}else if(2==bits)return result.join("");if(bits>dictionary.length)return null;entry=bits<dictionary.length?dictionary[bits]:t+t.charAt(0),result.push(entry),dictionary[dictSize++]=t+entry.charAt(0),t=entry,0==--enlargeIn&&(enlargeIn=1<<numBits++)}return""}const syncApi=browser.storage.sync,kMAX="MAX_WRITE_OPERATIONS_PER_MINUTE",LZ_KEY={csslint:"editorCSSLintConfig",stylelint:"editorStylelintConfig",usercssTemplate:"usercssTemplate"},chrome_sync_get=syncApi.get.bind(syncApi),chrome_sync_set=run.bind(syncApi.set),unLZ=val=>{return tryJSONparse(null==(compressed=val)?"":""==compressed?null:c(compressed.length,15,function(index){return compressed.charCodeAt(index)-32}));var compressed},getLZValue=async key=>unLZ((await chrome_sync_get(key))[key]);let chrome_sync_busy;async function run(...args){for(;;)try{if(!chrome_sync_busy)return await(chrome_sync_busy=this.apply(syncApi,args));await chrome_sync_busy.catch(()=>0)}catch(t){if(!t.message.includes(kMAX))throw t;chrome_sync_busy=sleep(6e4/(syncApi[kMAX]||120)*(2*Math.random()+1)),await e.keepAlive(chrome_sync_busy)}finally{chrome_sync_busy=null}}const connected="connected",connecting="connecting",disconnected="disconnected",disconnecting="disconnecting",DNR_ID_IDENTITY=1e6,DNR_ID_INSTALLER=1,DNR=chrome.declarativeNetRequest,updateDynamicRules=updateDNR.bind(DNR.updateDynamicRules),updateSessionRules=updateDNR.bind(DNR.updateSessionRules),getRuleId=e=>e.id,getRuleIds=rules=>rules.map(getRuleId);function updateDNR(addRules,removeRuleIds=getRuleIds(addRules)){return this({addRules,removeRuleIds})}const idCSP="patchCsp",idOFF="disableAll",REVOKE_TIMEOUT=1e4,kRuleIds="ruleIds",kSetCookie="set-cookie",rxHOST=/^('non(e|ce-.+?)'|(https?:\/\/)?[^']+?[^:'])$/,rxNONCE=/(?:^|[;,])\s*style-src\s+[^;,]*?'nonce-([-+/=\w]+)'/,BLOB_URL_PREFIX="blob:"+ownRoot,WR_FILTER={urls:["*://*/*"],types:["main_frame","sub_frame"]},makeBlob=data=>new Blob([JSON.stringify(data)],{type:"application/json"}),makeXhrCookie=blobId=>`${ownId}=${blobId}; SameSite=Lax`,req2key=req=>req.tabId+":"+req.frameId,revokeObjectURL=blobId=>blobId&&background_offscreen.revokeObjectURL(BLOB_URL_PREFIX+blobId),toSend={},webRequestBlocking=browser.permissions.contains({permissions:["webRequestBlocking"]}),ruleIdKeys={};let ruleIds,style_via_webrequest_timer,curOFF=!0,curCSP=!1,curXHR=!1;function toggle(prefKey){const mv3init=!prefKey,off=values[idOFF],csp=!off&&values[idCSP],xhr=!off&&values.styleViaXhr;if(!mv3init&&xhr===curXHR&&csp===curCSP&&off===curOFF)return;let e;off!==curOFF&&csp!==curCSP&&(e=chrome.webRequest.onHeadersReceived,toggleListener(e,!1,modifyHeaders),toggleListener(e,!off,modifyHeaders,WR_FILTER,["blocking","responseHeaders",!1].filter(Boolean))),(mv3init||off!==curOFF)&&toggleListener(chrome.webRequest.onBeforeRequest,mv3init||!off&&!0,prepareStyles,WR_FILTER),curCSP=csp,curOFF=off,curXHR=xhr}async function prepareStyles(req){const{tabId,frameId,url}=req;if(tabId<0)return;const key=tabId+":"+frameId,isInit=bgBusy;if(!curXHR&&!curCSP&&!bgBusy)return;bgBusy&&await bgBusy,!curXHR||prefState!==kSystem||!isInit&&someInjectable()||await refreshSystemDark();const oldData=toSend[key],data=oldData||{},payload=data.payload=getSectionsByUrl.call({sender:req},url,{init:"styleViaXhr"}),willStyle=payload.sections.length;data.url=url,oldData&&removePreloadedStyles(null,key,data,willStyle),curXHR&&willStyle&&await prepareStylesMV3(tabId,frameId,url,data,key,payload),toSend[key]=data}async function prepareStylesMV3(tabId,frameId,url,data,key,payload){let blobId;for(const e in toSend){if(key===e)continue;const val=toSend[e];if(val.url===url&&deepEqual(payload,val.payload)){setTimeout(removeTemporaryTab,REVOKE_TIMEOUT,tabId),payload=val.payload,blobId=val.blobId;break}}blobId||(blobId=(await background_offscreen.createObjectURL(makeBlob(payload))).slice(BLOB_URL_PREFIX.length)),data.blobId=blobId;const cookie=makeXhrCookie(blobId);let{ruleId=0}=data;if(!ruleId){for(;++ruleId in ruleIds;);data.ruleId=ruleId}ruleIds[ruleId]=key,ruleIdKeys[key]=ruleId,style_via_webrequest_timer??=setTimeout(flushState),await updateSessionRules([{id:ruleId,condition:{tabIds:[tabId],urlFilter:"|"+url+"|",resourceTypes:[frameId?"sub_frame":"main_frame"],excludedResponseHeaders:[{header:kSetCookie,values:[cookie]}]},action:{type:"modifyHeaders",responseHeaders:[{header:kSetCookie,value:cookie,operation:"append"}]}}])}function modifyHeaders(req){const key=req2key(req),data=toSend[key];if(!data)return;const{responseHeaders}=req,{payload}=data,secs=payload.sections,csp=(FIREFOX||curCSP)&&findHeader(responseHeaders,"content-security-policy");if(csp){const e=csp.value.match(rxNONCE);e&&tab_manager_set(req.tabId,"nonce",req.frameId,payload.cfg.nonce=e[1]),curCSP&&secs[0]&&patchCsp(csp)}if(!secs[0])return void removePreloadedStyles(req,key,data);let blobId;return curXHR&&(blobId=data.blobId??=!1)&&(blobId=makeXhrCookie(blobId),findHeader(responseHeaders,kSetCookie,blobId)?blobId=!1:responseHeaders.push({name:kSetCookie,value:blobId})),blobId||csp&&curCSP?{responseHeaders}:void 0}function patchCsp(csp){const src={};for(let e of csp.value.split(/[;,]/))e=e.trim().split(/\s+/),src[e[0]]=e.slice(1);patchCspSrc(src,"img-src","data:","*"),patchCspSrc(src,"font-src","data:","*"),patchCspSrc(src,"style-src","'unsafe-inline'","*"),src.sandbox&&!src.sandbox.includes("allow-same-origin")&&src.sandbox.push("allow-same-origin"),csp.value=Object.entries(src).map(([e,t])=>`${e}${t.length?" ":""}${t.join(" ")}`).join("; ")}function patchCspSrc(src,name,...values){let def=src["default-src"],list=src[name];(def||list)&&(def||(def=[]),list||(list=[...def]),values.includes("*")&&(list=src[name]=list.filter(e=>!rxHOST.test(e))),list.push(...values.filter(e=>!list.includes(e))),list.length||delete src[name])}function removePreloadedStyles(req,key=req2key(req),data=toSend[key],keep){let e;data&&(delete toSend[key],(e=data.blobId)&&(req?setTimeout(revokeObjectURL,REVOKE_TIMEOUT,e):revokeObjectURL(e),data.blobId=""),(e=data.timer)&&(data.timer=clearTimeout(e))),!keep&&(data?ruleIds[e=data.ruleId]:e=ruleIdKeys[key])&&(delete ruleIds[e],delete ruleIdKeys[key],style_via_webrequest_timer??=setTimeout(flushState),updateSessionRules(void 0,[e]))}function removeTabData(tabIds){tabIds=new RegExp(`^(?:${tabIds.join("|")}):`);const ids=[];for(const key in ruleIdKeys)if(tabIds.test(key)){const e=ruleIdKeys[key];ids.push(e),delete ruleIds[e],delete ruleIdKeys[key]}ids.length&&(updateSessionRules(void 0,ids),style_via_webrequest_timer??=setTimeout(flushState));for(const key in toSend)tabIds.test(key)&&removePreloadedStyles(null,key)}async function removeTemporaryTab(tabId){try{await chrome.tabs.get(tabId)}catch{remove(tabId),removeTabData([tabId])}}function findHeader(headers,name,value){for(const e of headers)if(e.name.toLowerCase()===name&&(null==value||e.value===value))return e}function flushState(){style_via_webrequest_timer=null,isEmptyObj(ruleIds)?stateDB.delete(kRuleIds):stateDB.put(ruleIds,kRuleIds)}toggle(),bgPreInit.push((async()=>{ruleIds=await stateDB.get(kRuleIds)||{};for(const e in ruleIds)ruleIdKeys[ruleIds[e]]=+e})()),bgBusy.then(()=>setTimeout(()=>subscribe("styleViaXhr",(key,val)=>{(val||background_offscreen[CLIENT])&&background_offscreen.keepAlive(val)},!0),clientDataJobs.size?50:0)),ready.then(()=>{toggle(!0),subscribe([idOFF,idCSP,"styleViaXhr"],toggle)}),bgBusy.then(()=>{const tabIds=[];for(let key in ruleIdKeys)tab_manager[key=parseInt(key)]||tabIds.push(key);tabIds.length&&removeTabData(tabIds)}),onUnload.add((tabId,frameId)=>{frameId?setTimeout(removePreloadedStyles,REVOKE_TIMEOUT,null,tabId+":"+frameId):removeTabData([tabId])}),webNavigation.onErrorOccurred.addListener(removePreloadedStyles,{url:[{urlPrefix:"http"}]}),CHROME&&chrome.webRequest.onBeforeRequest.addListener(req=>{dataHub.popup=req.tabId<0&&makePopupData()},{urls:[actionPopupUrl],types:["main_frame"]});const browserAction=chrome.action||{},staleBadges=new Set,imageDataCache={},badgeOvr={color:"",text:""},ICON_SIZES=[16,32],kBadgeDisabled="badgeDisabled",kBadgeNormal="badgeNormal",kIconset="iconset",kShowBadge="show-badge";let hasCanvas=!(FIREFOX&&MOBILE)&&null;async function refreshIconsWhenReady(){bgBusy&&(bgInit[bgInit.indexOf(initIcons)]=0,await bgBusy),initIcons(!0)}function initIcons(runNow=!1){subscribe(["disableAll",kBadgeDisabled,kBadgeNormal],()=>debounce(refreshIconBadgeColor),runNow),subscribe([kShowBadge],()=>debounce(refreshAllIconsBadgeText),runNow),subscribe(["disableAll",kIconset],()=>debounce(refreshAllIcons),runNow)}function updateIconBadge(styleIds,lazyBadge,iid){const{tab:{id:tabId},TDM}=this.sender,frameId=TDM>0?0:this.sender.frameId,value=styleIds.length?styleIds.map(Number):void 0;tab_manager_set(tabId,"styleIds",frameId,value),iid&&tab_manager_set(tabId,"iid",frameId,value&&iid),debounce(refreshStaleBadges,frameId&&lazyBadge?250:0),staleBadges.add(tabId),frameId||refreshIcon(tabId,!0),removePreloadedStyles(null,tabId+":"+frameId)}function overrideBadge({text="",color="",title=""}={}){if(badgeOvr.text!==text){badgeOvr.text=text,badgeOvr.color=color,refreshIconBadgeColor(),setBadgeText({text});for(let tabId in tab_manager)tabId=+tabId,text?setBadgeText({tabId,text}):refreshIconBadgeText(tabId);safeCall("setTitle",{title:title&&util_t(title,"",!1)||title||""})}}function refreshIconBadgeText(tabId){if(badgeOvr.text)return;setBadgeText({tabId,text:values[kShowBadge]?`${getStyleCount(tabId)}`:""})}function getIconName(hasStyles=!1){const e=values[kIconset];return`${0===e||-1===e&&isDark?"":"light/"}$SIZE$${values.disableAll?"x":hasStyles?"":"w"}`}function refreshIcon(tabId,force=!1){const e=tab_manager[tabId]||{},oldIcon=e.icon,newIcon=getIconName(e.styleIds?.[0]);(force||oldIcon!==newIcon)&&(tab_manager_set(tabId,"icon",newIcon),setIcon({path:getIconPath(newIcon),tabId}))}function getIconPath(icon){return ICON_SIZES.reduce((obj,size)=>(obj[size]=MF_ICON_PATH+icon.replace("$SIZE$",size)+MF_ICON_EXT,obj),{})}function getStyleCount(tabId){const allIds=new Set;for(const frameData of Object.values(tab_manager[tabId]?.styleIds||{}))frameData.forEach(allIds.add,allIds);return allIds.size||""}async function loadImage(url){const{OffscreenCanvas}=self||{},img=await createImageBitmap(await(await fetch(url)).blob()),{width:e,height:t}=img,ctx=new OffscreenCanvas(e,t).getContext("2d");ctx.drawImage(img,0,0,e,t);const result=ctx.getImageData(0,0,e,t);return imageDataCache[url]=result,result}function refreshGlobalIcon(){setIcon({path:getIconPath(getIconName())})}function refreshIconBadgeColor(){setBadgeBackgroundColor({color:badgeOvr.color||values[values.disableAll?kBadgeDisabled:kBadgeNormal]})}function refreshAllIcons(){for(const tabId in tab_manager)refreshIcon(+tabId);refreshGlobalIcon()}function refreshAllIconsBadgeText(){for(const tabId in tab_manager)refreshIconBadgeText(+tabId)}function refreshStaleBadges(){for(const tabId of staleBadges)refreshIconBadgeText(tabId);staleBadges.clear()}function safeCall(method,data){if(browserAction[method])try{browserAction[method](data,ignoreChromeError)}catch{browserAction[method](data)}}async function setIcon(data){if(null==hasCanvas){const url=MF_ICON_PATH+ICON_SIZES[0]+MF_ICON_EXT;hasCanvas=imageDataCache[url]=loadImage(url),hasCanvas=(await hasCanvas).data.some(e=>255!==e)}else hasCanvas.then&&await hasCanvas;if(hasCanvas){data.imageData={};for(const[key,url]of Object.entries(data.path)){const val=imageDataCache[url]||(imageDataCache[url]=loadImage(url));data.imageData[key]=val.then?await val:val}delete data.path}safeCall("setIcon",data)}function setBadgeText(data){safeCall("setBadgeText",data)}function setBadgeBackgroundColor(data){safeCall("setBadgeBackgroundColor",data)}bgInit.push(initIcons),onSchemeChange.add(()=>{-1===values[kIconset]&&(debounce(refreshGlobalIcon),debounce(refreshAllIcons))}),onUnload.add((tabId,frameId,port)=>{frameId&&tab_manager[tabId]?.styleIds&&updateIconBadge.call(port,[],!0)});const jobs={},kTimeoutFetching="Timeout fetching ",callAbort=(ctl,url)=>ctl.abort(kTimeoutFetching+url);function download(url,params={}){const key=arguments[1]?url+"\0"+JSON.stringify(params):url,job=jobs[key]??={req:e.keepAlive(doDownload(url,params,key))};if(params.port){const ports=job.ports||(job.ports=new Set),e=chrome.runtime.connect({name:params.port});e.onDisconnect.addListener(()=>ports.delete(e)),ports.add(e)}return job.req}async function doDownload(url,{method="GET",body,responseType="text",requiredStatusCode=200,timeout=6e4,loadTimeout=12e4,headers,responseHeaders,port,...opts},jobKey){let abort,data,timer,usoVars;try{if(url.startsWith(uso)&&url.includes("?")){const e=url.indexOf("?");null==body?(method="POST",body=url.slice(e),url=url.slice(0,e)):"GET"===method&&url.length>=2e3&&url.startsWith(usoJson)&&(url=collapseUsoVars(usoVars=[],url,e)),headers??={"content-type":"application/x-www-form-urlencoded"}}const resp=await fetch(url,{...opts,body,method,headers,signal:timeout?(abort=new AbortController,timer=setTimeout(callAbort,timeout,abort,url),abort.signal):null});if(timer&&clearTimeout(timer),timer=loadTimeout&&setTimeout(callAbort,loadTimeout,abort,url),requiredStatusCode&&resp.status!==requiredStatusCode&&!url.startsWith("file:"))throw new Error(`Bad status code ${resp.status} for ${url}`);if(port){data="";for await(const value of resp.body.pipeThrough(new TextDecoderStream))reportProgress(jobKey,[(data+=value).length])}else data=await resp["arraybuffer"===responseType?"arrayBuffer":responseType]();return data&&usoVars&&(data=expandUsoVars(usoVars,url,data)),responseHeaders&&(data={response:data,headers:extractHeaders(resp,responseHeaders)}),data}finally{timer&&clearTimeout(timer),jobs[jobKey].ports?.forEach(e=>e.disconnect()),delete jobs[jobKey]}}function collapseUsoVars(usoVars,url,queryPos){const params=new URLSearchParams(url.slice(queryPos+1));for(const[e,t]of params.entries())t.length<10||t.startsWith("ik-")||(usoVars.push(t),params.set(e,`${usoVars.length}`));return url.slice(0,queryPos+1)+params}function expandUsoVars(usoVars,url,response){const isText="string"==typeof response,json=isText&&tryJSONparse(response)||response;json.updateUrl=url;for(const section of json.sections||[]){const{code}=section;code.includes("")&&(section.code=code.replace(/\x01(\d+)\x02/g,(e,num)=>usoVars[num-1]||""))}return isText?JSON.stringify(json):json}function extractHeaders(src,headers){const res={};for(const e of headers)res[e]=src.headers.get(e);return res}function reportProgress(jobKey,msg){jobs[jobKey]?.ports?.forEach(e=>e.postMessage(msg))}const HAS_OPENER=!(!browserWindows||!CHROME&&!e.AbortController),EMPTY_TAB=["chrome://newtab/","chrome://startpage/","chrome://startpageshared/","chrome-extension://mpognobbkildjkofajifpdfhcoklimli/components/startpage/startpage.html","chrome://vivaldi-webui/startpage","about:home","about:newtab"];async function openManager(opts={}){const base=chrome.runtime.getURL("manage.html"),url=setUrlParams(base,opts),tabs=await browser.tabs.query({url:base+"*"}),same=tabs.find(e=>e.url===url);let tab=same||tabs[0];return tab?same||await sendTab(tab.id,{method:"pushState",url:setUrlParams(tab.url,opts)}):(prefsDB.get("badFavs"),tab=await openURL({url,newTab:!0})),activateTab(tab)}async function openURL({url,index,openerTabId,active=!0,currentWindow=!0,newWindow,newTab}){url.includes("://")||(url=chrome.runtime.getURL(url));let tab=!newTab&&(await browser.tabs.query({url:url.split("#")[0],currentWindow}))[0];if(tab)return activateTab(tab,{index,openerTabId,url:url!==(tab.pendingUrl||tab.url)&&url.includes("#")?url:void 0});if(newWindow&&browserWindows)return(await browserWindows.create(Object.assign({url},newWindow))).tabs[0];if(tab=await getActiveTab()||{url:""},tab&&EMPTY_TAB.includes((tab.pendingUrl||tab.url||"").replace("edge://","chrome://"))&&(!tab.incognito||!url.startsWith("chrome")))return activateTab(tab,{url,openerTabId});const e=openerTabId??tab.id;return browser.tabs.create(Object.assign({url,index,active},null!=e&&!tab.incognito&&HAS_OPENER&&{openerTabId:e,windowId:tab.windowId}))}async function activateTab(tab,{url,index,openerTabId}={}){const options={active:!0};return url&&(options.url=url),null!=openerTabId&&HAS_OPENER&&(options.openerTabId=openerTabId),await Promise.all([browser.tabs.update(tab.id,options),browserWindows?.update(tab.windowId,{focused:!0}),null!=index&&browser.tabs.move(tab.id,{index})]),tab}function getUrlOrigin(url=""){return url.substring(0,url.indexOf("/",url.indexOf(":")+3))}function setUrlParams(url,opts){const e=new URL(url);for(const key of["search","searchMode"])key in opts?e.searchParams.set(key,opts[key]):e.searchParams.delete(key);return e.hash=opts.options?"#stylus-options":"",e.href}const installCodeCache={},MIME="mime",kUrlInstaller="urlInstaller";function getInstallCode(url){const{code,timer}=installCodeCache[url];return clearInstallCode(url),clearTimeout(timer),code}function usercss_install_helper_toggle(key,val,isInit){val?onTabUrlChange.add(maybeInstall):onTabUrlChange.delete(maybeInstall),isInit||toggleUrlInstaller(val)}function toggleUrlInstaller(val=values[kUrlInstaller]){const urls=val?[""]:[usw,...usoaRaw,...["greasy","sleazy"].map(e=>`https://update.${e}fork.org/`)];updateDynamicRules([{id:DNR_ID_INSTALLER,condition:{regexFilter:(val?/^.*\.user\.(?:css|less|styl)(?:\?.*)?$/:/^.*\.user\.css$/).source,requestDomains:val?void 0:[...new Set(urls.map(getHost))],resourceTypes:["main_frame"],responseHeaders:[{header:"content-type",values:["text/*"],excludedValues:["text/html*"]}]},action:{type:"redirect",redirect:{regexSubstitution:chrome.runtime.getURL(installUsercss+"#\\0")}}}])}function clearInstallCode(url){delete installCodeCache[url]}async function loadFromFile(tabId){return(await browser.tabs.executeScript(tabId,{file:"/js/install-hook-usercss.js"}))[0]}async function loadFromUrl(tabId,url){return(url.startsWith("file:")||tab_manager[tabId]?.[MIME])&&download(url)}function makeInstallerUrl(url){return`${ownRoot}${installUsercss}?updateUrl=${encodeURIComponent(url)}`}async function maybeInstall(tabId,url,oldUrl=""){if(url.includes(".user.")&&!1!==tab_manager[tabId]?.[MIME]&&/^(https?|file|ftps?):/.test(url)&&/\.user\.(css|less|styl)$/.test(url.split(/[#?]/,1)[0])&&!oldUrl.startsWith(makeInstallerUrl(url))){const inTab=FIREFOX&&url.startsWith("file:"),code=await(inTab?loadFromFile:loadFromUrl)(tabId,url);!/^\s*</.test(code)&&RX_META.test(code)&&await openInstallerPage(tabId,url,{code,inTab})}}async function openInstallerPage(tabId,url,{code,inTab}={}){const newUrl=makeInstallerUrl(url);if(inTab){const tab=await browser.tabs.get(tabId);return openURL({url:`${newUrl}&tabId=${tabId}`,active:tab.active,index:tab.index+1,openerTabId:tabId,currentWindow:null})}const timer=setTimeout(clearInstallCode,1e4,url);installCodeCache[url]={code,timer};try{await browser.tabs.update(tabId,{url:newUrl})}catch(e){if(/Tabs cannot be edited right now/i.test(e.message))return browser.tabs.create({url:newUrl});throw e}}bgBusy.then(()=>{subscribe(kUrlInstaller,usercss_install_helper_toggle,!0)});const GLOBAL_META=Object.entries({author:null,description:null,homepageURL:"url",updateURL:"updateUrl",name:null});async function usercss_manager_assign(style,src){const meta=style.usercssData,meta2=src.usercssData,{vars}=meta,oldVars=meta2?meta2.vars:src;if(vars&&oldVars){for(const[key,e]of Object.entries(vars)){const old=oldVars[key]&&oldVars[key].value;null!=old&&(e.value=old)}meta.vars=await worker.nullifyInvalidVars(vars)}}async function build({styleId,sourceCode,vars,checkDup,metaOnly,assignVars,initialUrl}){initialUrl&&(sourceCode=await download(initialUrl));const style=await buildMeta({sourceCode}),dup=(checkDup||assignVars)&&find(styleId?{id:styleId}:style);let log;return metaOnly||((vars||assignVars)&&await usercss_manager_assign(style,vars||dup),await buildCode(style),log=style.log),{style,dup,log}}async function buildCode(style){const{sourceCode:code,usercssData:{vars,preprocessor}}=style,{sections,errors,log}=await worker.compileUsercss(preprocessor,code,vars),recoverable=errors.every(e=>e.recoverable);if(!sections.length||!recoverable)throw recoverable?"Style does not contain any actual CSS to apply.":errors;return style.sections=sections,log&&Object.defineProperty(style,"log",{value:log}),style}async function buildMeta(style){if(style.usercssData)return style;const code=style.sourceCode=style.sourceCode.replace(/\r\n?/g,"\n");style=Object.assign({enabled:!0,sections:[]},style);const match=code.match(RX_META);if(!match)return Promise.reject(new Error("Could not find metadata."));try{const{metadata}=await worker.parseUsercssMeta(match[0]);style.usercssData=metadata;for(const[key,globalKey]of GLOBAL_META){const val=metadata[key];void 0!==val&&(style[globalKey||key]=val)}return style}catch(e){if(e.code){const args="missingMandatory"===e.code||"missingChar"===e.code?e.args.map(e=>1===e.length?JSON.stringify(e):e).join(", "):e.args,msg=util_t(`meta_${e.code}`,args);msg&&(e.message=msg),e.index+=match.index}return Promise.reject(e)}}async function configVars(e,vars){const style=util_deepCopy(getById(e));return style.usercssData.vars=vars,await buildCode(style),(await style_manager_install(style,"config")).usercssData.vars}async function editSave(style){return{log:(style=await parse(style)).log,style:await style_manager_editSave(style)}}function find(data){if(data.id)return getById(data.id);return style_manager_find(mapObj(data.usercssData||data,null,["name","namespace"]),"usercssData")}function getVersion(data){return find(data)?.usercssData.version}async function install(style,opts){return style_manager_install(await parse(style,opts))}async function parse(style,{dup,vars}={}){return style=await buildMeta(style),(dup||(dup=find(style)))&&(style.id=dup.id),(vars||(vars=dup))&&await usercss_manager_assign(style,vars),buildCode(style)}let onDeleted,cache_timer;const MAX=1e3,cache_cache=new Map,toWrite=new Set,style_manager_cache=cache_cache;function cache_clear(){onDeleted&&cache_cache.forEach(onDeleted),cache_timer&&(cache_timer=clearTimeout(cache_timer)),cache_cache.clear()}function make(entry,style,idx,code){const e=style.id,entrySections=entry.sections;if(idx||(idx=entrySections[e])&&!idx.idx){if(!code){code=[];for(const e of idx){const sec=style.sections[e];if(!sec)return;code.push(sec.code)}}entrySections[e]={id:e,idx,code,name:style.customName||style.name}}return!!idx}function del(items){if(items[0])for(let val,e=0;e<items.length;e++)val=items[e],cache_cache.delete(items[e]=val.url),onDeleted(val)}function flush(){for(const val of toWrite)val.d=[val.d?.[1]||0,new Date];toWrite.clear(),cache_timer=null}async function flushLater(){cache_timer=setTimeout(flush,bgBusy?(await bgBusy,5e3):50)}function hit(val){return val&&(toWrite.add(val),cache_timer||flushLater()),val}const BAD_MATCHER={test:()=>!1},EXT_RE=/\bextension\b/,compileRe=createCompiler(text=>`^(${text})$`),compileSloppyRe=createCompiler(text=>`^${text}$`),compileExclusion=createCompiler(function(text){const match=text.match(/^(\*|[\w-]+):\/\/(\*\.)?([\w.]+\/.*)/);if(!match)return"^"+compileGlob(text)+"$";return"^"+("*"===match[1]?"[\\w-]+":match[1])+"://"+(match[2]?"(?:[\\w.]+\\.)?":"")+compileGlob(match[3])+"$"});function compileGlob(text){return stringAsRegExpStr(text).replace(/\\\\\\\*|\\\*/g,e=>e.length>2?e:".*")}function createCompiler(compile){const cache=new Map;return text=>{let e=cache.get(text);return e||cache.set(text,e=tryRegExp(compile(text))||BAD_MATCHER),e}}function urlMatchExclusion(e){return compileExclusion(e).test(this.urlWithoutParams??=this.url.split(/[?#]/,1)[0])}function urlMatchStyle(query,style){let ovr;return(ovr=style.exclusions)&&ovr.some(urlMatchExclusion,query)?"excluded":style.enabled?shouldIncludeStyle(style)?!(ovr=style.inclusions)||!ovr.some(urlMatchExclusion,query)||"included":"excludedScheme":"disabled"}function urlMatchSection(query,section,skipEmptyGlobal){let e,ddL,t,ppL,n,rrL,s,uuL;return!!((e=section.domains)&&(ddL=e.length)&&e.some(urlMatchDomain,query)||(t=section.urlPrefixes)&&(ppL=t.length)&&t.some(urlMatchPrefix,query)||(s=section.urls)&&(uuL=s.length)&&(s.includes(query.url)||s.includes(query.urlWithoutHash??=query.url.split("#",1)[0]))||(n=section.regexps)&&(rrL=n.length)&&n.some(urlMatchRegexp,query))||(rrL&&n.some(urlMatchRegexpSloppy,query)?"sloppy":!(rrL||ppL||uuL||ddL||(query.isOwnPage??=query.url.startsWith(ownRoot))||skipEmptyGlobal&&styleCodeEmpty(section)))}function urlMatchDomain(e){const t=this.domain??=tryURL(this.url).hostname;return e===t||"."===t[t.length-e.length-1]&&t.endsWith(e)}function urlMatchPrefix(e){return e&&this.url.startsWith(e)}function urlMatchRegexp(e){return(!(this.isOwnPage??=this.url.startsWith(ownRoot))||EXT_RE.test(e))&&compileRe(e).test(this.url)}function urlMatchRegexpSloppy(e){return(!(this.isOwnPage??=this.url.startsWith(ownRoot))||EXT_RE.test(e))&&compileSloppyRe(e).test(this.url)}let cfg,sentCfg={};const INJECTOR_CONFIG_MAP={exposeIframes:"top",disableAll:"off",keepAlive:"wake",styleViaASS:"ass"};function broadcastInjectorConfig(key,val){"keepAlive"===(key=INJECTOR_CONFIG_MAP[key]||key)&&(val=val>=0),cfg?sentCfg[key]===val?delete cfg[key]:cfg[key]=val:(cfg={},cfg[key]=val,setTimeout(throttle))}bgBusy.then(()=>{subscribe(Object.keys(INJECTOR_CONFIG_MAP),broadcastInjectorConfig)}),onSchemeChange.add(broadcastInjectorConfig.bind(null,"dark"));const broadcast_injector_config_data={method:"injectorConfig",cfg};function throttle(){isEmptyObj(cfg)||(broadcast_injector_config_data.cfg=cfg,broadcast(broadcast_injector_config_data)),sentCfg=cfg,cfg=null}const dataMap=new Map,order={main:{},prio:{}},orderWrap={id:"injectionOrder",value:mapObj(order,()=>[]),_id:`${chrome.runtime.id}-injectionOrder`,_rev:0};function calcRemoteId({md5Url,updateUrl,usercssData:ucd}={}){let e;return e=(e=/\d+/.test(md5Url)||extractUsoaId(updateUrl))&&`uso-${e}`||(e=extractUswId(updateUrl))&&`usw-${e}`||"",e&&[e,!!ucd?.vars]}const getById=e=>dataMap.get(+e)?.style,getByUuid=uuid=>getById(uuidIndex.get(uuid)),mergeWithMapped=style=>({...getById(style.id)||{enabled:!0,installDate:Date.now()},...style});function broadcastStyleUpdated(style,reason,isNew){return buildCacheForStyle(style),broadcast({method:isNew?"styleAdded":"styleUpdated",reason,style:{id:style.id,enabled:style.enabled}})}async function setOrderImpl(data,{broadcast:broadcastAllowed,calc=!0,store=!0,sync}={}){if(data&&data.value&&!deepEqual(data.value,orderWrap.value)){if(Object.assign(orderWrap,data,sync&&{_rev:Date.now()}),calc)for(const[type,group]of Object.entries(data.value)){const dst=order[type]={};group.forEach((uuid,e)=>{const t=uuidIndex.get(uuid);t&&(dst[t]=e)})}broadcastAllowed&&broadcastInjectorConfig("order",order),store&&await prefsDB.put(orderWrap,orderWrap.id),sync&&putDoc(orderWrap)}}function storeInMap(style){dataMap.set(style.id,{style,appliesTo:new Set}),uuidIndex.set(style._id,style.id)}function buildCacheForStyle(style){const{id:e}=style,data=dataMap.get(e),styleToApply=data.preview||style,updated=new Set;for(const cache of style_manager_cache.values()){const url=cache.url;if(!data.appliesTo.has(url)){(cache.maybeMatch??=new Set).add(e);continue}const code=getAppliedCode({url},styleToApply);if(code)updated.add(url),buildCacheEntry(cache,styleToApply,code);else{if(!cache.sections[e])continue;delete cache.sections[e]}hit(cache)}data.appliesTo=updated}function buildCache(cache,url,ids){const query={url};for(let data of ids||dataMap.values()){if(ids&&!(data=dataMap.get(data)))continue;const{style}=data,code=style.enabled&&getAppliedCode(query,data.preview||style);code&&(buildCacheEntry(cache,style,code),data.appliesTo.add(url))}}function buildCacheEntry(entry,style,[idx,code]){make(entry,style,idx,code)}function getAppliedCode(query,style){const result=urlMatchStyle(query,style),isIncluded="included"===result,code=[],idx=[];if(!isIncluded&&!0!==result)return;let e=0;for(const section of style.sections)!isIncluded&&!0!==urlMatchSection(query,section)||styleCodeEmpty(section)||(code.push(section.code),idx.push(e)),e++;return code.length&&[idx,code]}uuidIndex.addCustom(orderWrap,{set:setOrderImpl});const makeRandomUUID=crypto.randomUUID?.bind(crypto)||!1,MISSING_PROPS={name:style=>`ID: ${style.id}`,_id:makeRandomUUID,_rev:Date.now},hasVarsAndImport=({code})=>code.startsWith(":root {\n  --")&&/@import\s/i.test(code);function fixKnownProblems(style,revive){let e,res=0;for(const key in MISSING_PROPS)style[key]||(style[key]=MISSING_PROPS[key](style),res=1);for(const key in style)e=style[key],(null==e||"object"==typeof e&&isEmptyObj(e))&&(delete style[key],res=1);const{originalName}=style;originalName&&(originalName!==style.name&&(style.customName=style.name,style.name=originalName),delete style.originalName,res=1);for(const key of["url","installationUrl"]){const url=style[key],fixedUrl=url&&url.replace(/([^:]\/)\//,"$1");fixedUrl!==url&&(res=1,style[key]=fixedUrl)}return(e=style.md5Url)&&e.includes("update.update.userstyles")&&(res=style.md5Url=e.replace("update.update.userstyles","update.userstyles")),`${style.url}${style.installationUrl}`.includes("https://33kk.github.io/uso-archive/")&&(delete style.url,delete style.installationUrl),style.url&&style.installationUrl||!(e=style.updateUrl)||!(e=makeInstallUrl(e)||(e=/\d+/.exec(style.md5Url))&&`${uso}styles/${e[0]}`)||(style.url||(res=style.url=e),style.installationUrl||(res=style.installationUrl=e)),revive&&(!Array.isArray(e=style.sections)&&(e=0,1)||style.usercssData?.vars&&e.some(hasVarsAndImport))?e||style.sourceCode?buildCode(style):(style.customName="Damaged style #"+style.id,style.sections=[{code:"/* No sections or sourceCode */"}],style):res&&style}function onBeforeSave(style){if(!style.name)throw new Error("Style name is empty");style._id||(style._id=makeRandomUUID()),style.id||delete style.id,style._rev=Date.now(),fixKnownProblems(style)}function onSaved(style,reason,e=style.id){null==style.id&&(style.id=e);const data=dataMap.get(e);return data?data.style=style:storeInMap(style),!1!==reason?broadcastStyleUpdated(style,reason,!data):buildCacheForStyle(style),"sync"!==reason&&putDoc(style),style}const AUTH={dropbox:{flow:"token",clientId:"zg52vphuapvpng9",authURL:"https://www.dropbox.com/oauth2/authorize",tokenURL:"https://api.dropboxapi.com/oauth2/token",revoke:token=>fetch("https://api.dropboxapi.com/2/auth/token/revoke",{method:"POST",headers:{Authorization:`Bearer ${token}`}})},google:{flow:"code",clientId:"283762574871-d4u58s4arra5jdan2gr00heasjlttt1e.apps.googleusercontent.com",clientSecret:"J0nc5TlR_0V_ex9-sZk-5faf",authURL:"https://accounts.google.com/o/oauth2/v2/auth",authQuery:{access_type:"offline",prompt:"consent"},tokenURL:"https://oauth2.googleapis.com/token",scopes:["https://www.googleapis.com/auth/drive.appdata"]},onedrive:{flow:"code",clientId:"3864ce03-867c-4ad8-9856-371a097d47b1",clientSecret:"9Pj=TpsrStq8K@1BiwB9PIWLppM:@s=w",authURL:"https://login.microsoftonline.com/common/oauth2/v2.0/authorize",tokenURL:"https://login.microsoftonline.com/common/oauth2/v2.0/token",scopes:["Files.ReadWrite.AppFolder","offline_access"]},userstylesworld:{flow:"code",clientId:"zeDmKhJIfJqULtcrGMsWaxRtWHEimKgS",clientSecret:"wqHsvTuThQmXmDiVvOpZxPwSIbyycNFImpAOTxjaIRqDbsXcTOqrymMJKsOMuibFaijZZAkVYTDbLkQuYFKqgpMsMlFlgwQOYHvHFbgxQHDTwwdOroYhOwFuekCwXUlk",authURL:usw+"api/oauth/style/link",tokenURL:usw+"api/oauth/token",redirect_uri:"https://gusted.xyz/callback_helper/"}},NETWORK_LATENCY=30,DEFAULT_REDIRECT_URI="https://clngdbkpkpeebahjckkjfobafhncgmne.chromiumapp.org/";class TokenError extends Error{constructor(provider,message){super(`[${provider}] ${message}`),this.name="TokenError",this.provider=provider,Error.captureStackTrace&&Error.captureStackTrace(this,TokenError)}}function buildKeys(name,hooks){const prefix=`secure/token/${hooks?hooks.keyName(name):name}/`,e={TOKEN:`${prefix}token`,EXPIRE:`${prefix}expire`,REFRESH:`${prefix}refresh`};return e.LIST=Object.values(e),e}async function getToken(name,interactive,hooks){const e=buildKeys(name,hooks),obj=await chromeLocal.get(e.LIST);if(obj[e.TOKEN]){if(!obj[e.EXPIRE]||Date.now()<obj[e.EXPIRE])return obj[e.TOKEN];if(obj[e.REFRESH])return refreshToken(name,e,obj)}if(!interactive)throw new TokenError(name,"Token is missing");return authUser(e,name,interactive,hooks)}async function revokeToken(name,hooks){const provider=AUTH[name],e=buildKeys(name,hooks);if(provider.revoke)try{const token=await chromeLocal.getValue(e.TOKEN);token&&await provider.revoke(token)}catch(e){console.error(e)}await chromeLocal.remove(e.LIST)}async function refreshToken(name,e,obj){if(!obj[e.REFRESH])throw new TokenError(name,"No refresh token");const provider=AUTH[name],body={client_id:provider.clientId,refresh_token:obj[e.REFRESH],grant_type:"refresh_token",scope:provider.scopes.join(" ")};provider.clientSecret&&(body.client_secret=provider.clientSecret);const result=await postQuery(provider.tokenURL,body);return result.refresh_token||(result.refresh_token=obj[e.REFRESH]),handleTokenResult(result,e)}async function authUser(keys,name,interactive=!1,hooks=null){const provider=AUTH[name],state=Math.random().toFixed(8).slice(2),redirectUri=provider.redirect_uri||DEFAULT_REDIRECT_URI,query={response_type:provider.flow,client_id:provider.clientId,redirect_uri:redirectUri,state};provider.scopes&&(query.scope=provider.scopes.join(" ")),provider.authQuery&&Object.assign(query,provider.authQuery),hooks?.query(query);const url=`${provider.authURL}?${new URLSearchParams(query)}`,finalUrl=await authUserMV3(url,interactive,redirectUri),params=new URLSearchParams("token"===provider.flow?new URL(finalUrl).hash.slice(1):new URL(finalUrl).search.slice(1));if(params.get("state")!==state)throw new TokenError(name,`Unexpected state: ${params.get("state")}, expected: ${state}`);let result;if("token"===provider.flow){const obj={};for(const[key,value]of params)obj[key]=value;result=obj}else{const body={code:params.get("code"),grant_type:"authorization_code",client_id:provider.clientId,redirect_uri:query.redirect_uri,state};provider.clientSecret&&(body.client_secret=provider.clientSecret),result=await postQuery(provider.tokenURL,body)}return handleTokenResult(result,keys)}async function authUserMV3(url,interactive,redirectUri){const apiUrl=chrome.identity.getRedirectURL();apiUrl!==redirectUri&&await updateSessionRules([{id:DNR_ID_IDENTITY,condition:{urlFilter:"|"+redirectUri,resourceTypes:["main_frame"]},action:{type:"redirect",redirect:{transform:{host:getHost(apiUrl)}}}}]);try{return await chrome.identity.launchWebAuthFlow({interactive,url})}finally{redirectUri&&await updateSessionRules(void 0,[DNR_ID_IDENTITY])}}async function handleTokenResult(result,e){return await chromeLocal.set({[e.TOKEN]:result.access_token,[e.EXPIRE]:result.expires_in?Date.now()+1e3*(result.expires_in-NETWORK_LATENCY):void 0,[e.REFRESH]:result.refresh_token}),result.access_token}async function postQuery(url,body){const options={method:"POST",headers:{"content-type":"application/x-www-form-urlencoded"},body:body?new URLSearchParams(body):null},e=await fetch(url,options);if(e.ok)return e.json();const text=await e.text(),err=new Error(`Failed to fetch (${e.status}): ${text}`);throw err.code=e.status,err}const ALARM_ID="syncNow",PREF_ID="sync.enabled",SYNC_INIT_DELAY=10/60,SYNC_DELAY=1,SYNC_INTERVAL=30,sync_manager_STORAGE_KEY="sync/state/",NO_LOGIN=["webdav"],sync_manager_status={state:"pending"},compareRevision=(rev1,rev2)=>rev1-rev2;let ctrl,curDrive,curDriveName,delayedInit,resolveOnSync,scheduling,syncingNow,lastError=null;async function sync_manager_remove(...args){if(delayedInit&&await start(),curDrive)return schedule(),ctrl.delete(...args)}function getStatus(sneaky){return delayedInit&&!sneaky&&start(),sync_manager_status}async function login(name){delayedInit&&await start(),name||(name=curDriveName),await revokeToken(name);try{await getToken(name,!0),sync_manager_status.login=!0}catch(e){throw sync_manager_status.login=!1,e}finally{emitStatusChange()}}async function putDoc({_id:e,_rev:t}){if(delayedInit&&await start(),curDrive)return schedule(),ctrl.put(e,t)}async function setDriveOptions(driveName,options){const key=`secure/sync/driveOptions/${driveName}`;await chrome_sync_set({[key]:options})}async function getDriveOptions(driveName){const key=`secure/sync/driveOptions/${driveName}`;return(await chrome_sync_get(key))[key]||{}}async function start(name=delayedInit){const isInit=name&&name===delayedInit,isStop=sync_manager_status.state===disconnecting;if(delayedInit=!1,(ctrl??=dbToCloud({onGet:e=>getByUuid(e)||uuidIndex.custom[e],async onPut(doc){if(!doc)return;const e=uuidIndex.get(doc._id),oldCust=!e&&uuidIndex.custom[doc._id],oldDoc=oldCust||getById(e),diff=oldDoc?compareRevision(oldDoc._rev,doc._rev):-1;diff&&(diff>0?putDoc(oldDoc):oldCust?uuidIndex.custom[doc._id]=doc:(delete doc.id,e&&(doc.id=e),doc.id=await a.put(doc),await onSaved(doc,"sync")))},onDelete(e,rev){const t=uuidIndex.get(e),oldDoc=getById(t);return oldDoc&&compareRevision(oldDoc._rev,rev)<=0&&style_manager_remove(t,"sync")},onFirstSync(){for(const e of Object.values(uuidIndex.custom).concat(getAll()))ctrl.put(e._id,e._rev)},onProgress(e){"start"===e.phase?sync_manager_status.syncing=!0:"end"===e.phase?(sync_manager_status.syncing=!1,sync_manager_status.progress=null):sync_manager_status.progress=e,lastError&&setError(),emitStatusChange()},compareRevision,getState:drive=>chromeLocal.getValue(sync_manager_STORAGE_KEY+drive.name),setState:(drive,state)=>chromeLocal.set({[sync_manager_STORAGE_KEY+drive.name]:state}),retryMaxAttempts:10,retryExp:1.2,retryDelay:6})).then&&(ctrl=await ctrl),!curDrive){if(curDriveName=name,curDrive=getDrive(name).catch(console.error),curDrive=await curDrive,ctrl.use(curDrive),sync_manager_status.state=connecting,sync_manager_status.drive=curDriveName,emitStatusChange(),isInit||NO_LOGIN.includes(curDriveName))sync_manager_status.login=!0;else try{await login(name)}catch(e){return console.error(e),setError(e),emitStatusChange(),stop()}await ctrl.init(),isStop||(await syncNow(),set(PREF_ID,name),sync_manager_status.state=connected,emitStatusChange())}}async function stop(){if(delayedInit){sync_manager_status.state=disconnecting;try{await start()}catch{}}if(curDrive){sync_manager_status.state=disconnecting,emitStatusChange();try{await ctrl.uninit(),await revokeToken(curDriveName),await chromeLocal.remove(sync_manager_STORAGE_KEY+curDriveName)}catch{}curDrive=curDriveName=null,set(PREF_ID,"none"),sync_manager_status.state=disconnected,sync_manager_status.drive=null,sync_manager_status.login=!1,emitStatusChange()}}async function syncNow(){if(!syncingNow)if(syncingNow=!0,delayedInit&&await start(),curDrive&&sync_manager_status.login){try{await ctrl.syncNow(),setError()}catch(e){e.message=translateErrorMessage(e),setError(e),isGrantError(e)&&(sync_manager_status.login=!1)}resolveOnSync&&(resolveOnSync(),resolveOnSync=null),syncingNow=!1,emitStatusChange()}else console.warn("cannot sync when disconnected")}function emitStatusChange(){broadcastExtension({method:"syncStatusUpdate",status:sync_manager_status}),overrideBadge(getErrorBadge())}function isGrantError(err){return 401===err.code||(!(400!==err.code||!/invalid_grant/.test(err.message))||"TokenError"===err.name)}function getErrorBadge(){if(sync_manager_status.state===connected&&(!sync_manager_status.login||lastError&&!("TypeError"===(err=lastError).name&&/networkerror|failed to fetch/i.test(err.message)||502===err.code)))return{text:"x",color:"#F00",title:sync_manager_status.login?`${util_t("syncError")}\n---------------------\n${lastError.message.replace(/.{60,}?\s(?=.{30,})/g,"$&\n")}`:"syncErrorRelogin"};var err}async function getDrive(name){if(!hasOwn(cloudDrive,name))throw new Error(`Unknown cloud provider: ${name}`);const opts=await getDriveOptions(name),webdav="webdav"===name;if(webdav&&!tryURL(opts.url))throw set(PREF_ID,"none"),new Error("Broken options: WebDAV server URL is missing");return webdav||(opts.getAccessToken=()=>getToken(name)),cloudDrive[name](opts)}async function schedule(isInit,prefVal=curDriveName){if(scheduling)return;scheduling=!0;const alarm=isInit&&await browser.alarms.get(ALARM_ID);delayedInit=hasOwn(cloudDrive,prefVal)&&prefVal,delayedInit?(!alarm||Math.abs((alarm.periodInMinutes||1e99)-SYNC_INTERVAL)>1e-6||((alarm.scheduledTime-Date.now())/6e4+SYNC_INTERVAL)%SYNC_INTERVAL>(isInit?SYNC_INTERVAL:SYNC_DELAY))&&(chrome.alarms.create(ALARM_ID,{delayInMinutes:isInit?SYNC_INIT_DELAY:SYNC_DELAY,periodInMinutes:SYNC_INTERVAL}),resolveOnSync||e.keepAlive(new Promise(e=>resolveOnSync=e))):(sync_manager_status.state=disconnected,alarm&&chrome.alarms.clear(ALARM_ID),isInit&&emitStatusChange()),scheduling=!1}function setError(err){sync_manager_status.errorMessage=err?.message,lastError=err}function translateErrorMessage(err){return"LockError"===err.name?browser.i18n.getMessage("syncErrorLock",new Date(err.expire).toLocaleString([],{timeStyle:"short"})):err.message||JSON.stringify(err)}chrome.alarms.onAlarm.addListener(async t=>{t.name===ALARM_ID&&(bgBusy&&await bgBusy,e.keepAlive(syncNow()))}),subscribe(PREF_ID,schedule,!0);const KEYS_OUT=["description","homepage","license","name"],KEYS_IN=[...KEYS_OUT,"id","namespace","username"],pushId=(e,val=!0)=>dataHub.set("usw"+e,val),popId=e=>dataHub.del("usw"+e);class TokenHooks{constructor(e){this.id=e}keyName(name){return`${name}/${this.id}`}query(query){return Object.assign(query,{vendor_data:this.id})}}function fakeUsercssHeader(style,usw){const{namespace:e,username:user}=usw||(usw={}),meta=["name",["@version",(new Date).toISOString().replace(/^(\d+)-(\d+)-(\d+)T(\d+):(\d+).+/,"$1$2$3.$4.$5")],["@namespace","?"!==e&&e||user&&`https://userstyles.world/user/${user}`||"?"],"description",["@homepage",tryURL(e).href],["@author",user],"license"].map((e,t)=>e.map?e[1]&&e:(t=usw[e]||style[e])&&["@"+e,t]).filter(Boolean),maxKeyLen=meta.reduce((res,[e])=>Math.max(res,e.length),0);return"/* ==UserStyle==\n"+meta.map(([e,t])=>`${e}${" ".repeat(maxKeyLen-e.length+2)}${t}\n`).join("")+"==/UserStyle== */\n\n"}async function linkStyle(style,sourceCode){const{id:e,name}=style,{metadata}=await worker.parseUsercssMeta(sourceCode.match(RX_META)[0]),out={name,sourceCode,usercssData:{}};for(const e of KEYS_OUT)out[e]=out.usercssData[e]=metadata[e]||"";pushId(e,out);try{const token=await getToken("userstylesworld",!0,new TokenHooks(e)),info=await uswFetch("style",token),data=mapObj(info,null,style.usercssData?["id"]:KEYS_IN);return data.token=token,style.url=style.url||info.homepage||`${usw}style/${data.id}`,data}finally{popId(e)}}async function uswFetch(path,token,opts){return(opts=Object.assign({credentials:"omit"},opts)).headers=Object.assign({Authorization:`Bearer ${token}`},opts.headers),(await(await fetch(`${usw}api/${path}`,opts)).json()).data}async function uswSave(style,e){const{id:t}=style;e?style._usw=e:e=style._usw,await save(style,!1),broadcastExtension({method:"uswData",style:{id:t,_usw:e}})}async function publish(e,code,usw){try{pushId(e);const style=getById(e);usw||(usw=style._usw),style.usercssData||(code=fakeUsercssHeader(style,usw)+code),usw&&usw.token&&usw.id||(usw=await linkStyle(style,code));const res=await uswFetch(`style/${usw.id}`,usw.token,{method:"POST",headers:{"content-type":"application/json"},body:JSON.stringify({code})});return deepEqual(usw,style._usw)||await uswSave(style,usw),res}finally{popId(e)}}async function revoke(e){try{pushId(e),await revokeToken("userstylesworld",new TokenHooks(e));const style=getById(e);style&&(delete style._usw.token,await uswSave(style))}finally{popId(e)}}async function initStyleMap(styles,mirrored){let fix,fixed,lost,e,style,len;for(e=0,len=0;e<styles.length;e++)if(style=styles[e],+style.id>0&&"string"==typeof style._id&&"string"==typeof style.sections?.[0]?.code)storeInMap(style),mirrored&&(e>len&&(styles[len]=style),len++);else{try{fix=fixKnownProblems(style,!0)}catch{}fix?(fixed??=new Map).set(style.id,fix):(lost??=[]).push(style)}styles.length=len,lost&&console.error(`Skipped ${lost.length} unrecoverable styles:`,lost),fixed&&(console[mirrored?"log":"warn"](`Fixed ${fixed.size} styles, ids:`,...fixed.keys()),fixed=await Promise.all([...fixed.values(),bgBusy]),fixed.pop(),mirrored&&(styles.push(...fixed),fixed.forEach(storeInMap))),styles.length&&setTimeout(a.putMany,100,styles)}bgInit.push(async()=>{let mirrored,[orderFromDb,styles]=await Promise.all([prefsDB.get("injectionOrder"),a.getAll()]);orderFromDb||(orderFromDb=await execMirror(STORAGE_KEY,"get","injectionOrder")),styles[0]||(styles=mirrored=await execMirror("stylish","getAll")),setOrderImpl(orderFromDb,{store:!1}),initStyleMap(styles,mirrored)}),onSchemeChange.add(()=>{for(const{style}of dataMap.values())SCHEMES.includes(style.preferScheme)&&broadcastStyleUpdated(style,"colorScheme")}),onDeleted=val=>{for(const e in val.sections)dataMap.get(+e)?.appliesTo.delete(val.url)},onDisconnect.draft=port=>{port.resolve();const e=port.name.split(":")[1];draftsDB.delete(+e||e).catch(()=>{})},onDisconnect.livePreview=port=>{port.resolve();const e=+port.name.split(":")[1],data=dataMap.get(e);data&&(data.preview=null,broadcastStyleUpdated(data.style,"editPreviewEnd"))},onConnect.draft=onConnect.livePreview=port=>{e.keepAlive(new Promise(resolve=>{port.resolve=resolve}))};const style_search_db_cache=new Map,METAKEYS=["customName","name","url","installationUrl","updateUrl"],extractMeta=style=>style.usercssData?(style.sourceCode.match(RX_META)||[""])[0]:null,stripMeta=style=>style.usercssData?style.sourceCode.replace(RX_META,""):null,MODES=Object.assign(Object.create(null),{code:(style,test)=>style.usercssData?test(stripMeta(style)):searchSections(style,test,"code"),meta:(style,test,part)=>METAKEYS.some(key=>test(style[key]))||test("all"===part?style.sourceCode:extractMeta(style))||searchSections(style,test,"funcs"),name:(style,test)=>test(style.customName)||test(style.name),all:(style,test)=>MODES.meta(style,test,"all")||!style.usercssData&&MODES.code(style,test)});function searchDb({query,mode,ids}){mode??="all";let res=[];if("url"===mode&&query)res=getByUrl(query).map(e=>e.style.id);else if(mode in MODES){const modeHandler=MODES[mode],e=/^\/(.+?)\/([gimsuy]*)$/.exec(query),t=e&&tryRegExp(e[1],e[2]),test=t?t.test.bind(t):createTester(query);for(let style of ids||dataMap.values())ids&&!(style=dataMap.get(style))||!(style=style.style)||query&&!modeHandler(style,test)||res.push(style.id);style_search_db_cache.size&&debounce(clearCache,6e4)}return res}function createTester(query){const flags="u"+(lower(query)===query?"i":""),words=query.split(/(".*?")|\s+/).filter(Boolean).map(e=>e.startsWith('"')&&e.endsWith('"')?e.slice(1,-1):e).filter(e=>e.length>1),rxs=(words.length?words:[query]).map(e=>stringAsRegExp(e,flags));return text=>rxs.every(e=>e.test(text))}function searchSections({sections},test,part){const inCode="code"===part||"all"===part,inFuncs="funcs"===part||"all"===part;for(const section of sections)for(const prop in section){const value=section[prop];if(inCode&&"code"===prop&&test(value)||inFuncs&&Array.isArray(value)&&value.some(str=>test(str)))return!0}}function lower(text){let result=style_search_db_cache.get(text);return result||style_search_db_cache.set(text,result=text.toLocaleLowerCase()),result}function clearCache(){style_search_db_cache.clear()}async function config(e,prop,value){const style=Object.assign({},getById(e)),t=dataMap.get(e);style[prop]=(t.preview||{})[prop]=value,"inclusions"!==prop&&"exclusions"!==prop||cache_clear(),await save(style,"config")}function style_manager_editSave(style){return(style=mergeWithMapped(style)).updateDate=Date.now(),draftsDB.delete(style.id).catch(()=>{}),save(style,"editSave")}function style_manager_find(filter,subkey){for(const{style}of dataMap.values()){let obj=subkey?style[subkey]:style;if(obj){for(const key in filter)if(filter[key]!==obj[key]){obj=null;break}if(obj)return style}}}const getAll=()=>Array.from(dataMap.values(),e=>e.style),getOrder=()=>orderWrap.value;function getAllOrdered(keys){const res=mapObj(orderWrap.value,group=>group.map(getByUuid).filter(Boolean));if(res.main.length+res.prio.length<dataMap.size)for(const{style}of dataMap.values())style.id in order.main||style.id in order.prio||res.main.push(style);return keys?mapObj(res,group=>group.map(style=>mapObj(style,null,keys))):res}function getByUrl(url,e=null){const result=[],query={url};for(const{style}of e?[dataMap.get(e)].filter(Boolean):dataMap.values()){let empty=!0,excluded=!1,excludedScheme=!1,included=!1,sloppy=!1,sectionMatched=!1,match=urlMatchStyle(query,style);"included"===match&&(included=!0),"excluded"===match&&(excluded=!0),"excludedScheme"===match&&(excludedScheme=!0);for(const section of style.sections)match=urlMatchSection(query,section,!0),match&&("sloppy"===match&&(sloppy=!0),sectionMatched=!0,empty&&(empty=styleCodeEmpty(section)));(sectionMatched||included)&&result.push({empty,excluded,excludedScheme,included,sectionMatched,sloppy,style:getCore({id:style.id})})}return result}function getCore({id:e,code,sections,size,vars}={}){const res=[];for(let{style}of e?[dataMap.get(e)]:dataMap.values()){let tmp;style={...style},size&&(style._size=calcObjSize(style)),!code&&sections&&(tmp=style.sections.map(sec=>({...sec,code:void 0}))),code&&sections||(style.sections=tmp),code||(style.sourceCode=void 0),!vars&&(tmp=style.usercssData)&&tmp.vars&&(style.usercssData={...tmp,vars:{}}),res.push(style)}return e?res[0]:res}function getRemoteInfo(e){if(e)return calcRemoteId(getById(e));const res={};for(const{style}of dataMap.values()){const[rid,vars]=calcRemoteId(style);rid&&(res[rid]=[style.id,vars])}return res}function getSectionsByUrl(url,{id:e,init,dark}={}){null!=dark&&setSystemDark(dark);const t=values;if(init&&t.disableAll)return{cfg:{off:!0}};const{sender={}}=this||{},{tab={},frameId,TDM}=sender,isTop=!frameId||TDM||"main_frame"===sender.type,n=tab_manager[sender.tabId||tab.id]||{},cfg=!e&&{ass:t.styleViaASS,dark:isTop&&isDark,name:t.exposeStyleName,nonce:n.nonce?.[frameId],top:t.exposeIframes,topUrl:isTop?"":getUrlOrigin(tab.url||n.url?.[0]),wake:t.keepAlive>=0,order};if("cfg"===init)return{cfg};let res,cache;var val;return 0===frameId&&"styleViaXhr"!==init&&(res=n.url)&&(res=res[0])!==url&&res.split("#",1)[0]===url.split("#",1)[0]&&(url=res||url),cache=style_manager_cache.get(url),cache?(res=cache.maybeMatch)&&buildCache(cache,url,res):(cache={url,sections:{}},buildCache(cache,url)),cache_cache.set((val=cache).url,hit(val)),cache_cache.size>=MAX&&del([...cache_cache.values()].filter(val=>val.d).sort(({d:[e,t]},{d:[n,s]})=>100*(e-n)+10*(s-n-(t-e))+t-s).slice(0,10)),res=cache.sections,res=e?(res=res[e])?[res]:[]:Object.values(res),!0===init&&res.length&&((n.url??={})[frameId]??=url),{cfg,sections:res}}async function importMany(items){const res=[],styles=[];for(const style of items)try{onBeforeSave(style),style.sourceCode&&style.usercssData&&await buildCode(style),res.push(styles.push(style)-1)}catch(e){res.push({err:e})}const events=await a.putMany(styles),messages=[];for(let e,t=0;t<res.length;t++)if(e=res[t],!e.err){const n=events[e],method=dataMap.has(n)?"styleUpdated":"styleAdded",style=onSaved(styles[e],!1,n);messages.push([style,"import",method]),res[t]={style:{...style,_size:calcObjSize(style)}}}return cache_clear(),setTimeout(()=>messages.forEach(args=>broadcastStyleUpdated(...args)),100),Promise.all(res)}async function style_manager_install(style,reason=(dataMap.has(style.id)?"update":"install")){return(style=mergeWithMapped(style)).originalDigest=await calcStyleDigest(style),save(style,reason)}async function preview(style){let res=style.sourceCode||!1;return res&&(res=await build({styleId:style.id,sourceCode:res,assignVars:!0}),delete res.style.enabled,Object.assign(style,res.style)),dataMap.get(style.id).preview=style,broadcastStyleUpdated(style,"editPreview"),res.log}function style_manager_remove(e,reason){const{style,appliesTo}=dataMap.get(e),sync="sync"!==reason,uuid=style._id;a.delete(e),sync&&sync_manager_remove(uuid,Date.now());for(const url of appliesTo){const cache=style_manager_cache.get(url);cache&&(delete cache.sections[e],hit(cache))}return dataMap.delete(e),uuidIndex.delete(uuid),mapObj(orderWrap.value,(group,type)=>{delete order[type][e];const t=group.indexOf(uuid);t>=0&&group.splice(t,1)}),setOrderImpl(orderWrap,{calc:!1}),style._usw&&style._usw.token&&revoke(e),draftsDB.delete(e).catch(()=>{}),broadcast({method:"styleDeleted",style:{id:e}}),e}async function save(style,reason){onBeforeSave(style);return onSaved(style,reason,await a.put(style))}async function setOrder(value){await setOrderImpl({value},{broadcast:!0,sync:!0})}async function style_manager_toggle(e,enabled){await save({...getById(e),enabled},"toggle")}async function toggleOverride(e,rule,isInclusion,isAdd){const style=Object.assign({},getById(e)),type=isInclusion?"inclusions":"exclusions";let list=style[type];if(isAdd){if(list){if(list.includes(rule))throw new Error("The rule already exists")}else list=style[type]=[];list.push(rule)}else{if(!list)return;{const e=list.indexOf(rule);e>=0&&list.splice(e,1)}}cache_clear(),await save(style,"config")}async function makePopupData(){let tab=await getActiveTab();var tabId;FIREFOX&&"loading"===tab.status&&"about:blank"===tab.url&&(tab=await(tabId=tab.id,new Promise(resolve=>{browser.tabs.onUpdated.addListener(function onUpdated(updatedId,info,updatedTab){info.url&&updatedId===tabId&&(browser.tabs.onUpdated.removeListener(onUpdated),resolve(updatedTab))},..."UpdateFilter"in browser.tabs?[{tabId}]:[])})));let tmp,url=tab.url||tab.pendingUrl||"";const e=tab_manager[tab.id],isOwn=url.startsWith(ownRoot),[ping0=!e?.popup&&(tab_manager_set(tab.id,"popup",!0),await reinjectContentScripts(tab)),frames]=await Promise.all([isOwn||supported(url)&&pingTab(tab.id),isOwn&&CHROME&&getAllFrames(url,tab)||browser.webNavigation.getAllFrames({tabId:tab.id})]),unknown=new Map(frames.map(e=>[e.frameId,e])),known=new Map,urls=new Set(["about:blank"]);if(e&&(tmp=e.styleIds))for(let t in tmp)if(!unknown.has(t=+t)){const frameUrl=e.url[t];unknown.set(t,{frameId:t,parentFrameId:0,styles:getByUrl(frameUrl),url:frameUrl})}known.set(0,unknown.get(0)||{frameId:0,url:""}),unknown.delete(0);let lastSize=0;for(;unknown.size!==lastSize;){for(const[frameId,e]of unknown)known.has(e.parentFrameId)&&(unknown.delete(frameId),e.errorOccurred||known.set(frameId,e),"about:blank"===e.url&&(e.url=known.get(e.parentFrameId).url));lastSize=unknown.size}frames.length=0;for(const sortedFrames of[known,unknown])for(const e of sortedFrames.values()){const t=e.url??="";e.isDupe=e.frameId&&urls.has(t),urls.add(t),frames.push(e)}frames[0].url=url;const urlSupported=supported(url);if(urlSupported){bgBusy&&await bgBusy;for(const e of frames)e.url&&!e.isDupe&&(e.styles??=getByUrl(e.url))}return[frames,ping0,tab,urlSupported]}async function getAllFrames(url,{id:tabId}){let res;return res=await chrome.runtime.getContexts({tabIds:[tabId]}),res=res[1]?.documentUrl,[{frameId:0,url},res&&{frameId:1,parentFrameId:0,url:res}].filter(Boolean)}const nondefaults={},updateStorage=()=>chrome_sync_set({[STORAGE_KEY]:nondefaults});let value;set._bgSet=(key,val)=>{const def=defaults[key];if(val===def||val&&"object"==typeof def&&deepEqual(val,def)){if(!(key in nondefaults))return;delete nondefaults[key]}else nondefaults[key]=val;return bgBusy||debounce(updateStorage),!0},bgPreInit.push(chrome_sync_get(STORAGE_KEY).then(orig=>{var val;return ready.set("object"==typeof(val=orig=orig[STORAGE_KEY])&&val?deepMerge(orig):{},{}),deepEqual(orig,nondefaults)||bgBusy.then(updateStorage),ready}));const key=LZ_KEY.usercssTemplate;async function load(){return value??=getLZValue(key),value.then&&(value=await value),value}onStorageChanged.addListener(changes=>{(changes=changes[key])&&(value=unLZ(changes.newValue))});const kEditorScrollInfo="editorScrollInfo",RESPONSE_INIT={headers:{"cache-control":"no-cache"}},ASSIGN_FUNC_STR=`${function(data){Object.assign(this.clientData,data)}}`,PROVIDERS={edit(url){const e=+url.searchParams.get("id"),style=getById(e),isUC=style?"usercssData"in style:values.newStyleAsUsercss,siKey=kEditorScrollInfo+e;return{style,isUC,si:style&&stateDB.get(siKey),template:!style&&isUC&&(value||load())}},manage(url){const e=url.searchParams,query=e.get("search")||void 0;return{badFavs:values["manage.newUI"]&&values["manage.newUI.favicons"]&&prefsDB.get("badFavs"),ids:query&&searchDb({query,mode:e.get("searchMode")||values["manage.searchMode"]}),styles:getCore({sections:!0,size:!0}),sync:getStatus(!0)}},options:()=>{const status=getStatus(),{drive}=status;return{sync:status,syncOpts:drive?getDriveOptions(drive):{},wrb:webRequestBlocking}},popup:()=>({popup:dataHub.pop("popup")||makePopupData()})};async function setClientData({dark:pageDark,url:pageUrl}={}){setSystemDark(pageDark),bgBusy&&await bgBusy;const url=new URL(pageUrl),page=url.pathname.slice(1,-5),jobs=Object.assign({apply:getSectionsByUrl(pageUrl,{init:!0}),dark:isDark,favicon:FIREFOX||isVivaldi,prefs:nondefaults},PROVIDERS[page]?.(url)),results=await Promise.all(Object.values(jobs));return Object.keys(jobs).forEach((e,t)=>jobs[e]=results[t]),new Response(`(${ASSIGN_FUNC_STR})(${JSON.stringify(jobs)})`,RESPONSE_INIT)}Object.assign(API,{saveScroll(e,info){stateDB.put(info,kEditorScrollInfo+e)}});const kStyleManager="styleManager",kOpenManage="openManage",kOpenOptions="openOptions",kReload="reload",kStyleDisableAll="styleDisableAll",cmdOpenManager=()=>openManager(),cmdOpenOptions=()=>openManager({options:!0}),cmdReload=()=>chrome.runtime.reload(),cmdStyleDisableAll=info=>ready.then(()=>set("disableAll",info?info.checked:!values.disableAll)),context_menus_COMMANDS={[kOpenManage]:cmdOpenManager,[kOpenOptions]:cmdOpenOptions,[kReload]:cmdReload,[kStyleDisableAll]:cmdStyleDisableAll},chromeMenus=chrome.contextMenus,MENUS=chromeMenus?Object.assign({"show-badge":[function(info){set(info.menuItemId,info.checked)},{title:"menuShowBadge"}],disableAll:[cmdStyleDisableAll,{title:"disableAllStyles"}],[kStyleManager]:[cmdOpenManager],[kOpenOptions]:[cmdOpenOptions],[kReload]:[cmdReload]},CHROME&&{"editor.contextDelete":[(info,tab)=>{sendTab(tab.id,{method:"editDeleteText"})},{title:"editDeleteText",type:"normal",contexts:["editable"],documentUrlPatterns:[ownRoot+"*"]}]}):{};function initContextMenus(){function createContextMenus(ids,isInit){for(const e of ids){const item=MENUS[e][1]??={};if(isInit&&(item.id=e,item.contexts??=["action"],item.title=util_t(item.title??e)),"boolean"==typeof defaults[e])if(item.type){if(isInit){subscribe(e,togglePresence,!0);continue}}else item.type="checkbox",item.checked=values[e],isInit&&subscribe(e,toggleCheckmark);chromeMenus.create(item,ignoreChromeError)}}function toggleCheckmark(e,checked){chromeMenus.update(e,{checked},ignoreChromeError)}function togglePresence(e,checked){checked?createContextMenus([e]):chromeMenus.remove(e,ignoreChromeError)}createContextMenus(Object.keys(MENUS),!0)}chrome.commands?.onCommand.addListener(e=>context_menus_COMMANDS[e]()),chromeMenus?.onClicked.addListener((info,tab)=>MENUS[info.menuItemId][0](info,tab));const VERSION_RE=/^(.*?)-([-.0-9a-z]+)|$/i,DIGITS_RE=/^\d+$/;function compareVersion(ver1,ver2){const[,main1=ver1||"",pre1]=VERSION_RE.exec(ver1),[,main2=ver2||"",pre2]=VERSION_RE.exec(ver2),delta=compareVersionChunk(main1,main2)||!pre1-!pre2||pre1&&compareVersionChunk(pre1,pre2,!0);return Math.sign(delta||0)}function compareVersionChunk(ver1,ver2,isSemverMode){const parts1=ver1.split("."),parts2=ver2.split("."),len1=parts1.length,len2=parts2.length,len=(isSemverMode?Math.min:Math.max)(len1,len2);let delta;for(let e=0;!delta&&e<len;e+=1){const t=parts1[e],n=parts2[e];delta=isSemverMode?DIGITS_RE.test(t)&&DIGITS_RE.test(n)?t-n:t>n||t<n&&-1:(parseInt(t,10)||0)-(parseInt(n,10)||0)}return delta||isSemverMode&&len1-len2}const pingers={},getMd5Url=usoId=>`https://update.userstyles.org/${usoId}.md5`;function deleteStyle(usoId){const style=findStyle(usoId);return!!style&&style_manager_remove(style.id)}function getEmbeddedMeta(code){const isRaw=arguments[0],e=code.includes("@updateURL")&&(isRaw?code:code.replace(RX_META,"")).match(RX_META);return e&&buildMeta({sourceCode:e[0]}).catch(()=>null)}async function getUpdatability(usoId,asObject){const md5Url=getMd5Url(usoId),md5=await fetchText(md5Url),dup=await findStyle(usoId,md5Url),state=dup?dup.usercssData||dup.originalMd5===md5?2:1:0;return asObject?{dup,md5,md5Url,state}:state}function pingback(usoId,delay){return clearTimeout(pingers[usoId]),delete pingers[usoId],delay>0?e.keepAlive(new Promise(resolve=>pingers[usoId]=setTimeout(ping,delay,usoId,resolve))):!1!==delay?ping(usoId):void 0}async function toUsercss(usoId,varsUrl,css,dup,md5,md5Url){let e;dup||(dup=!1);const{updateUrl=makeUpdateUrl("usoa",usoId)}=dup,jobs=[!dup&&getUpdatability(usoId,!0).then(res=>({dup,md5,md5Url}=res)),!css&&download(updateUrl).then(res=>css=res)].filter(Boolean);jobs[0]&&await Promise.all(jobs);const{style}=await build({sourceCode:css,metaOnly:!0}),vars=(e=varsUrl||dup.updateUrl)&&useVars(style,e,{});if(dup)return style;style.md5Url=md5Url,style.originalMd5=md5,style.updateUrl=updateUrl,await install(style,{dup,vars})}function useVars(style,src,cfg){src="string"==typeof src?new URLSearchParams(src.split("?")[1]):Object.entries(src);const{vars}=style.usercssData;if(vars){for(let[key,val]of src){if(!key.startsWith("ik-"))continue;key=makeKey(key.slice(3),cfg);const e=vars[key];if(e)if(e.options){let sel=val.startsWith("ik-")&&optByName(e,makeKey(val.slice(3),cfg));sel||(key+="-custom",sel=optByName(e,key+"-dropdown"),sel&&(vars[key].value=val)),sel&&(e.value=sel.name)}else e.value=val}return style}}function findStyle(usoId,md5Url=getMd5Url(usoId)){return style_manager_find({md5Url})||style_manager_find({installationUrl:makeInstallUrl("usoa",usoId)})}async function ping(e,resolve){return await fetch(`${uso}styles/install/${e}?source=stylish-ch`),resolve&&resolve(!0),!0}function makeKey(key,varMap){let res=varMap[key];if(!res&&key!==(res=key.replace(/[^-\w]/g,"-"))){for(;res in varMap;)res+="-";varMap[key]=res}return res}function optByName(e,name){return e.options.find(e=>e.name===name)}const STATES={UPDATED:"updated",SKIPPED:"skipped",UNREACHABLE:"server unreachable",EDITED:"locally edited",MAYBE_EDITED:"may be locally edited",SAME_MD5:"up-to-date: MD5 is unchanged",SAME_CODE:"up-to-date: code sections are unchanged",SAME_VERSION:"up-to-date: version is unchanged",ERROR_MD5:"error: MD5 is invalid",ERROR_JSON:"error: JSON is invalid",ERROR_VERSION:"error: version is older than installed style"},getStates=()=>STATES,update_manager_NOP=()=>{},safeSleep=t=>e.keepAlive(sleep(t)),RH_ETAG={responseHeaders:["etag"]},RX_DATE2VER=new RegExp([/^(\d{4})/,/(0[1-9]|1(?:0|[12](?=\d\d))?|[2-9])/,/(0[1-9]|[1-2][0-9]?|3[0-1]?|[4-9])/,/\.([01][0-9]?|2[0-3]?|[3-9])/,/\.([0-5][0-9]?|[6-9])$/].map(e=>e.source).join("")),ALARM_NAME="scheduledUpdate",MIN_INTERVAL_MS=6e4,RETRY_ERRORS=[503,429],HOST_THROTTLE=1e3,hostJobs={};let lastUpdateTime,checkingAll=!1,logQueue=[],logLastWriteTime=0;async function checkAllStyles({save=!0,ignoreDigest,observe,onlyEnabled=values.updateOnlyEnabled}={}){resetInterval(),checkingAll=!0;const port=observe&&chrome.runtime.connect({name:"updater"}),styles=getAll().filter(e=>e.updateUrl&&!1!==e.updatable&&(!onlyEnabled||e.enabled));port&&port.postMessage({count:styles.length}),log(""),log(`${save?"Scheduled":"Manual"} update check for ${styles.length} styles`),await Promise.all(styles.map(style=>checkStyle({style,port,save,ignoreDigest}))),port&&port.postMessage({done:!0}),port&&port.disconnect(),log(""),checkingAll=!1}async function checkStyle(opts){let{id:e}=opts;const{style=getById(e),ignoreDigest,port,save}=opts;e||(e=style.id);const{md5Url}=style;let res,state,{usercssData:ucd,updateUrl}=style;try{await async function(){if(!ignoreDigest&&style.originalDigest&&style.originalDigest!==await calcStyleDigest(style))return Promise.reject(STATES.EDITED)}(),res={style:await(ucd&&!md5Url?updateUsercss:async function(){const md5=await tryDownload(md5Url);if(!md5||32!==md5.length)return Promise.reject(STATES.ERROR_MD5);if(md5===style.originalMd5&&style.originalDigest&&!ignoreDigest)return Promise.reject(STATES.SAME_MD5);const usoId=+md5Url.match(/\/(\d+)/)[1];let varsUrl="";ucd||(ucd={},varsUrl=updateUrl);updateUrl=style.updateUrl=`${usoApi}Css/${usoId}`;const{result:css}=await tryDownload(updateUrl,{responseType:"json"}),json=await updateUsercss(css)||await toUsercss(usoId,varsUrl,css,style,md5,md5Url);return json.originalMd5=md5,json})().then(async function(json){json.id=e,delete json.customName,delete json.enabled;const newStyle=Object.assign({},style,json);if(newStyle.updateDate=getDateFromVer(newStyle)||Date.now(),!ucd&&styleSectionsEqual(json,style))return style.originalDigest=(await style_manager_install(newStyle)).originalDigest,Promise.reject(STATES.SAME_CODE);if(!style.originalDigest&&!ignoreDigest)return Promise.reject(STATES.MAYBE_EDITED);return save?ucd?install(newStyle,{dup:style}):style_manager_install(newStyle):newStyle}),updated:!0},state=STATES.UPDATED}catch(e){const error=0===e&&STATES.UNREACHABLE||e&&e.message||e;res={error,style,STATES},state=`${STATES.SKIPPED} (${Array.isArray(e)?e[0].message:error})`}return log(`${state} #${e} ${style.customName||style.name}`),port&&port.postMessage(res),res;async function updateUsercss(css){let oldVer=ucd.version,oldEtag=style.etag,e=(css||extractUsoaId(updateUrl))&&await getEmbeddedMeta(css||style.sourceCode);if(e&&e.updateUrl)updateUrl=e.updateUrl,oldVer=e.usercssData.version||"0",oldEtag="";else if(css)return;if("meta"===(e=updateUrl.match(rxGF))[5]&&(updateUrl=e[1]+"user"+e[6]),oldEtag&&oldEtag===await downloadEtag(updateUrl))return Promise.reject(STATES.SAME_CODE);const{headers:{etag},response}=await tryDownload(updateUrl,RH_ETAG),json=await buildMeta({sourceCode:response,etag,updateUrl}),delta=compareVersion(json.usercssData.version,oldVer);let err;return delta||ignoreDigest||(err=response===style.sourceCode?STATES.SAME_CODE:!isLocalhost(updateUrl)&&STATES.SAME_VERSION),delta<0&&(err=STATES.ERROR_VERSION),err&&etag&&!style.etag&&(style.etag=etag,await a.put(style)),err?Promise.reject(err):json}}async function tryDownload(url,params,{retryDelay=HOST_THROTTLE}={}){for(;;){let host,job;try{return params=deepMerge(params||{},{headers:{"Cache-Control":"no-cache"}}),host=getHost(url),job=hostJobs[host],job=hostJobs[host]=(job?job.catch(update_manager_NOP).then(()=>safeSleep(HOST_THROTTLE/(isCdnUrl(url)?4:1))):Promise.resolve()).then(()=>download(url,params)),await job}catch(e){if(!RETRY_ERRORS.includes(e)||retryDelay>MIN_INTERVAL_MS)throw e}finally{hostJobs[host]===job&&delete hostJobs[host]}retryDelay*=1.25,await safeSleep(retryDelay)}}async function downloadEtag(url){return(await tryDownload(url,{method:"HEAD",...RH_ETAG})).headers.etag}function getDateFromVer(style){const e=RX_DATE2VER.exec(style.usercssData?.version);if(e)return e[2]--,new Date(...e.slice(1)).getTime()}function update_manager_schedule(){const interval=60*values.updateInterval*60*1e3;if(interval>0){const elapsed=Math.max(0,Date.now()-lastUpdateTime);chrome.alarms.create(ALARM_NAME,{when:Date.now()+Math.max(MIN_INTERVAL_MS,interval-elapsed)})}else chrome.alarms.clear(ALARM_NAME,ignoreChromeError)}async function update_manager_onAlarm({name}){name===ALARM_NAME&&(bgBusy&&await bgBusy,e.keepAlive(checkAllStyles()))}function resetInterval(){chromeLocal.set({lastUpdateTime:lastUpdateTime=Date.now()}),update_manager_schedule()}function log(text){logQueue.push({text,time:(new Date).toLocaleString()}),debounce(flushQueue,text&&checkingAll?1e3:0)}async function flushQueue(lines){if(!lines)return void flushQueue(await chromeLocal.getValue("updateLog")||[]);const time=Date.now()-logLastWriteTime>11e3?logQueue[0].time+" ":"";logQueue[0]&&!logQueue[0].text&&(logQueue.shift(),lines[lines.length-1]&&lines.push("")),lines.splice(0,lines.length-1e3),lines.push(time+(logQueue[0]&&logQueue[0].text||"")),lines.push(...logQueue.slice(1).map(item=>item.text)),chromeLocal.set({updateLog:lines}),logLastWriteTime=Date.now(),logQueue=[]}async function onStartup(){await refreshIconsWhenReady(),await sleep(1e3);const minDate=Date.now()-432e5;for(const e of await draftsDB.getAllKeys()){const{date}=await draftsDB.get(e)||{};date<minDate&&draftsDB.delete(e)}}bgBusy.then(async()=>{lastUpdateTime=await chromeLocal.getValue("lastUpdateTime")||Date.now(),subscribe("updateInterval",update_manager_schedule,!0),chrome.alarms.onAlarm.addListener(update_manager_onAlarm)}),Object.assign(API,{data:dataHub,download,openEditor:async function(params){const e=new URL(chrome.runtime.getURL("edit.html"));e.search=new URLSearchParams(params);const wnd=browserWindows&&values.openEditInWindow,wndPos=wnd&&values.windowPosition,wndBase=wnd&&values["openEditInWindow.popup"]?{type:"popup"}:{},ffBug=wnd&&FIREFOX;for(let tab,retry=0;retry<(wndPos?2:1);++retry)try{return tab=tab||await openURL({url:`${e}`,currentWindow:null,newWindow:wnd&&Object.assign({},wndBase,!ffBug&&!retry&&wndPos)}),ffBug&&!retry&&await browserWindows.update(tab.windowId,wndPos),tab}catch{}},openManager,openURL,pingTab,setPrefs:data=>{for(const e in data)set(e,data[e])},setSystemDark,updateIconBadge,styles:style_manager_namespaceObject,sync:sync_manager_namespaceObject,updater:update_manager_namespaceObject,usercss:usercss_manager_namespaceObject,uso:uso_api_namespaceObject,usw:usw_api_namespaceObject},!1,!1),chrome.runtime.onInstalled.addListener(({reason,previousVersion})=>{CHROME&&(reinjectContentScripts(),initContextMenus()),"install"===reason&&(MOBILE&&set("manage.newUI",!1),WINDOWS&&set("editor.keyMap","sublime")),"1.5.30"===previousVersion&&prefsDB.delete("badFavs"),(bgPreInit.length?bgPreInit:bgInit).push(cache_clear()),(bgPreInit.length?bgPreInit:bgInit).push(stateDB.clear(),DNR.getDynamicRules().then(rules=>updateDynamicRules(void 0,getRuleIds(rules))).then(()=>ready).then(()=>toggleUrlInstaller()),DNR.getSessionRules().then(rules=>updateSessionRules(void 0,getRuleIds(rules)))),refreshIconsWhenReady(),(async()=>{bgBusy&&await bgBusy,mirrorStorage(dataMap)})()}),chromeSession.get("init",async({init})=>{init||(chromeSession.set({init:!0}),onStartup(),await bgBusy,reinjectContentScripts())}),onMessage.set((e,sender)=>{if("invokeAPI"===e.method){let res=API;for(const t of e.path.split("."))res=res&&res[t];if(!res)throw new Error(`Unknown API.${e.path}`);return res=res.apply({msg:e,sender},e.args),res??null}},!0),(async()=>{const numPreInit=bgPreInit.length;await Promise.all(bgPreInit),await Promise.all(bgPreInit.slice(numPreInit)),bgPreInit.length=0,await Promise.all(bgInit.map(e=>"function"==typeof e?e():e)),bgBusy.resolve()})(),e.oninstall=evt=>{evt.addRoutes({condition:{urlPattern:`${ownRoot}*.html?clientData*`},source:"fetch-event"}),evt.addRoutes({condition:{not:{urlPattern:`${ownRoot}*.user.css`,requestDestination:"document"}},source:"network"})},e.onfetch=evt=>{const url=evt.request.url;if(url.startsWith(ownRoot))if(url.includes("?clientData")){const e=new URL(url).searchParams,dark=!!+e.get("dark"),pageUrl=e.get("url"),job=setClientData({dark,url:pageUrl});clientDataJobs.set(pageUrl,job),job.finally(()=>clientDataJobs.delete(pageUrl)),evt.respondWith(job)}else/\.user.css#(\d+)$/.test(url)&&evt.respondWith(Response.redirect("edit.html?id="+RegExp.$1))},e.onmessage=initRemotePort.bind(o),cloudDrive.webdav=async cfg=>{const res=await background_offscreen.webdavInit(cfg),webdav=background_offscreen.webdav;for(const e in res)res[e]??=webdav.bind(null,e);return res},chrome.webRequest.onBeforeRequest.addListener(()=>{},{urls:[ownRoot+"*.html*"],types:["main_frame","sub_frame"]})})()})()}